# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from metalstackcloud.api.v1 import cluster_pb2 as api_dot_v1_dot_cluster__pb2


class ClusterServiceStub(object):
    """ClusterService serves kubernetes cluster related functions
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/api.v1.ClusterService/Create',
                request_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceCreateRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceCreateResponse.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/api.v1.ClusterService/Get',
                request_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceGetRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceGetResponse.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/api.v1.ClusterService/List',
                request_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceListRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceListResponse.FromString,
                _registered_method=True)
        self.WatchStatus = channel.unary_stream(
                '/api.v1.ClusterService/WatchStatus',
                request_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceWatchStatusRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceWatchStatusResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/api.v1.ClusterService/Delete',
                request_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceDeleteRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceDeleteResponse.FromString,
                _registered_method=True)
        self.Update = channel.unary_unary(
                '/api.v1.ClusterService/Update',
                request_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceUpdateRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceUpdateResponse.FromString,
                _registered_method=True)
        self.GetCredentials = channel.unary_unary(
                '/api.v1.ClusterService/GetCredentials',
                request_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceGetCredentialsRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceGetCredentialsResponse.FromString,
                _registered_method=True)
        self.Operate = channel.unary_unary(
                '/api.v1.ClusterService/Operate',
                request_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceOperateRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceOperateResponse.FromString,
                _registered_method=True)


class ClusterServiceServicer(object):
    """ClusterService serves kubernetes cluster related functions
    """

    def Create(self, request, context):
        """Create a cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Get a cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """List clusters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchStatus(self, request, context):
        """WatchStatus of a cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete a cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Update a cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCredentials(self, request, context):
        """GetCredentials of a cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Operate(self, request, context):
        """Operate on a cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClusterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceCreateRequest.FromString,
                    response_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceCreateResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceGetRequest.FromString,
                    response_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceGetResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceListRequest.FromString,
                    response_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceListResponse.SerializeToString,
            ),
            'WatchStatus': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchStatus,
                    request_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceWatchStatusRequest.FromString,
                    response_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceWatchStatusResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceDeleteRequest.FromString,
                    response_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceDeleteResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceUpdateRequest.FromString,
                    response_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceUpdateResponse.SerializeToString,
            ),
            'GetCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCredentials,
                    request_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceGetCredentialsRequest.FromString,
                    response_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceGetCredentialsResponse.SerializeToString,
            ),
            'Operate': grpc.unary_unary_rpc_method_handler(
                    servicer.Operate,
                    request_deserializer=api_dot_v1_dot_cluster__pb2.ClusterServiceOperateRequest.FromString,
                    response_serializer=api_dot_v1_dot_cluster__pb2.ClusterServiceOperateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1.ClusterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.v1.ClusterService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ClusterService(object):
    """ClusterService serves kubernetes cluster related functions
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ClusterService/Create',
            api_dot_v1_dot_cluster__pb2.ClusterServiceCreateRequest.SerializeToString,
            api_dot_v1_dot_cluster__pb2.ClusterServiceCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ClusterService/Get',
            api_dot_v1_dot_cluster__pb2.ClusterServiceGetRequest.SerializeToString,
            api_dot_v1_dot_cluster__pb2.ClusterServiceGetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ClusterService/List',
            api_dot_v1_dot_cluster__pb2.ClusterServiceListRequest.SerializeToString,
            api_dot_v1_dot_cluster__pb2.ClusterServiceListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/api.v1.ClusterService/WatchStatus',
            api_dot_v1_dot_cluster__pb2.ClusterServiceWatchStatusRequest.SerializeToString,
            api_dot_v1_dot_cluster__pb2.ClusterServiceWatchStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ClusterService/Delete',
            api_dot_v1_dot_cluster__pb2.ClusterServiceDeleteRequest.SerializeToString,
            api_dot_v1_dot_cluster__pb2.ClusterServiceDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ClusterService/Update',
            api_dot_v1_dot_cluster__pb2.ClusterServiceUpdateRequest.SerializeToString,
            api_dot_v1_dot_cluster__pb2.ClusterServiceUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ClusterService/GetCredentials',
            api_dot_v1_dot_cluster__pb2.ClusterServiceGetCredentialsRequest.SerializeToString,
            api_dot_v1_dot_cluster__pb2.ClusterServiceGetCredentialsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Operate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.v1.ClusterService/Operate',
            api_dot_v1_dot_cluster__pb2.ClusterServiceOperateRequest.SerializeToString,
            api_dot_v1_dot_cluster__pb2.ClusterServiceOperateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
