# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from metalstackcloud.admin.v1 import payment_pb2 as admin_dot_v1_dot_payment__pb2


class PaymentServiceStub(object):
    """PaymentService serves payment related functions
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCoupons = channel.unary_unary(
                '/admin.v1.PaymentService/ListCoupons',
                request_serializer=admin_dot_v1_dot_payment__pb2.PaymentServiceListCouponsRequest.SerializeToString,
                response_deserializer=admin_dot_v1_dot_payment__pb2.PaymentServiceListCouponsResponse.FromString,
                _registered_method=True)
        self.AddBalanceToCustomer = channel.unary_unary(
                '/admin.v1.PaymentService/AddBalanceToCustomer',
                request_serializer=admin_dot_v1_dot_payment__pb2.PaymentServiceAddBalanceToCustomerRequest.SerializeToString,
                response_deserializer=admin_dot_v1_dot_payment__pb2.PaymentServiceAddBalanceToCustomerResponse.FromString,
                _registered_method=True)


class PaymentServiceServicer(object):
    """PaymentService serves payment related functions
    """

    def ListCoupons(self, request, context):
        """ListCoupons list all available coupons
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBalanceToCustomer(self, request, context):
        """AddBalanceToCustomer adds balance to a customer
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListCoupons': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCoupons,
                    request_deserializer=admin_dot_v1_dot_payment__pb2.PaymentServiceListCouponsRequest.FromString,
                    response_serializer=admin_dot_v1_dot_payment__pb2.PaymentServiceListCouponsResponse.SerializeToString,
            ),
            'AddBalanceToCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBalanceToCustomer,
                    request_deserializer=admin_dot_v1_dot_payment__pb2.PaymentServiceAddBalanceToCustomerRequest.FromString,
                    response_serializer=admin_dot_v1_dot_payment__pb2.PaymentServiceAddBalanceToCustomerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'admin.v1.PaymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('admin.v1.PaymentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PaymentService(object):
    """PaymentService serves payment related functions
    """

    @staticmethod
    def ListCoupons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/admin.v1.PaymentService/ListCoupons',
            admin_dot_v1_dot_payment__pb2.PaymentServiceListCouponsRequest.SerializeToString,
            admin_dot_v1_dot_payment__pb2.PaymentServiceListCouponsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddBalanceToCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/admin.v1.PaymentService/AddBalanceToCustomer',
            admin_dot_v1_dot_payment__pb2.PaymentServiceAddBalanceToCustomerRequest.SerializeToString,
            admin_dot_v1_dot_payment__pb2.PaymentServiceAddBalanceToCustomerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
