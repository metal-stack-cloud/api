// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file status/v1/status.proto (package status.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Health, ServiceStatus } from "../../api/v1/health_pb.js";

/**
 * StatusServiceGetRequest is the request payload to get the status
 *
 * @generated from message status.v1.StatusServiceGetRequest
 */
export class StatusServiceGetRequest extends Message<StatusServiceGetRequest> {
  constructor(data?: PartialMessage<StatusServiceGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "status.v1.StatusServiceGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusServiceGetRequest {
    return new StatusServiceGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusServiceGetRequest {
    return new StatusServiceGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusServiceGetRequest {
    return new StatusServiceGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StatusServiceGetRequest | PlainMessage<StatusServiceGetRequest> | undefined, b: StatusServiceGetRequest | PlainMessage<StatusServiceGetRequest> | undefined): boolean {
    return proto3.util.equals(StatusServiceGetRequest, a, b);
  }
}

/**
 * StatusServiceGetResponse is the response payload which describes the system status
 *
 * @generated from message status.v1.StatusServiceGetResponse
 */
export class StatusServiceGetResponse extends Message<StatusServiceGetResponse> {
  /**
   * Health of the individual services
   *
   * @generated from field: api.v1.Health health = 1;
   */
  health?: Health;

  /**
   * OverallStatus is the status of the system
   *
   * @generated from field: api.v1.ServiceStatus overall_status = 2;
   */
  overallStatus = ServiceStatus.UNSPECIFIED;

  /**
   * ConnectionBroken shows if the connection to the system is broken
   *
   * @generated from field: bool connection_broken = 3;
   */
  connectionBroken = false;

  /**
   * ApiVersion of the system
   *
   * @generated from field: string api_version = 4;
   */
  apiVersion = "";

  constructor(data?: PartialMessage<StatusServiceGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "status.v1.StatusServiceGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "health", kind: "message", T: Health },
    { no: 2, name: "overall_status", kind: "enum", T: proto3.getEnumType(ServiceStatus) },
    { no: 3, name: "connection_broken", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "api_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusServiceGetResponse {
    return new StatusServiceGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusServiceGetResponse {
    return new StatusServiceGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusServiceGetResponse {
    return new StatusServiceGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: StatusServiceGetResponse | PlainMessage<StatusServiceGetResponse> | undefined, b: StatusServiceGetResponse | PlainMessage<StatusServiceGetResponse> | undefined): boolean {
    return proto3.util.equals(StatusServiceGetResponse, a, b);
  }
}

