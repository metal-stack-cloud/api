// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file status/v1/status.proto (package status.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_api_v1_common } from "../../api/v1/common_pb";
import type { Health, ServiceStatus } from "../../api/v1/health_pb";
import { file_api_v1_health } from "../../api/v1/health_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file status/v1/status.proto.
 */
export const file_status_v1_status: GenFile = /*@__PURE__*/
  fileDesc("ChZzdGF0dXMvdjEvc3RhdHVzLnByb3RvEglzdGF0dXMudjEiGwoZU3RhdHVzU2VydmljZVdhdGNoUmVxdWVzdCKbAQoaU3RhdHVzU2VydmljZVdhdGNoUmVzcG9uc2USHgoGaGVhbHRoGAEgASgLMg4uYXBpLnYxLkhlYWx0aBItCg5vdmVyYWxsX3N0YXR1cxgCIAEoDjIVLmFwaS52MS5TZXJ2aWNlU3RhdHVzEhkKEWNvbm5lY3Rpb25fYnJva2VuGAMgASgIEhMKC2FwaV92ZXJzaW9uGAQgASgJMm0KDVN0YXR1c1NlcnZpY2USXAoFV2F0Y2gSJC5zdGF0dXMudjEuU3RhdHVzU2VydmljZVdhdGNoUmVxdWVzdBolLnN0YXR1cy52MS5TdGF0dXNTZXJ2aWNlV2F0Y2hSZXNwb25zZSIE2PMYATABQpkBCg1jb20uc3RhdHVzLnYxQgtTdGF0dXNQcm90b1ABWjZnaXRodWIuY29tL21ldGFsLXN0YWNrLWNsb3VkL2FwaS9nby9zdGF0dXMvdjE7c3RhdHVzdjGiAgNTWFiqAglTdGF0dXMuVjHKAglTdGF0dXNcVjHiAhVTdGF0dXNcVjFcR1BCTWV0YWRhdGHqAgpTdGF0dXM6OlYxYgZwcm90bzM", [file_api_v1_common, file_api_v1_health]);

/**
 * StatusServiceWatchRequest is the request payload to get the status
 *
 * @generated from message status.v1.StatusServiceWatchRequest
 */
export type StatusServiceWatchRequest = Message<"status.v1.StatusServiceWatchRequest"> & {
};

/**
 * Describes the message status.v1.StatusServiceWatchRequest.
 * Use `create(StatusServiceWatchRequestSchema)` to create a new message.
 */
export const StatusServiceWatchRequestSchema: GenMessage<StatusServiceWatchRequest> = /*@__PURE__*/
  messageDesc(file_status_v1_status, 0);

/**
 * StatusServiceWatchResponse is the response payload which describes the system status
 *
 * @generated from message status.v1.StatusServiceWatchResponse
 */
export type StatusServiceWatchResponse = Message<"status.v1.StatusServiceWatchResponse"> & {
  /**
   * Health of the individual services
   *
   * @generated from field: api.v1.Health health = 1;
   */
  health?: Health;

  /**
   * OverallStatus is the status of the system
   *
   * @generated from field: api.v1.ServiceStatus overall_status = 2;
   */
  overallStatus: ServiceStatus;

  /**
   * ConnectionBroken shows if the connection to the system is broken
   *
   * @generated from field: bool connection_broken = 3;
   */
  connectionBroken: boolean;

  /**
   * ApiVersion of the system
   *
   * @generated from field: string api_version = 4;
   */
  apiVersion: string;
};

/**
 * Describes the message status.v1.StatusServiceWatchResponse.
 * Use `create(StatusServiceWatchResponseSchema)` to create a new message.
 */
export const StatusServiceWatchResponseSchema: GenMessage<StatusServiceWatchResponse> = /*@__PURE__*/
  messageDesc(file_status_v1_status, 1);

/**
 * StatusService serves status related functions
 * this service is used as backend for the status dashboard
 *
 * @generated from service status.v1.StatusService
 */
export const StatusService: GenService<{
  /**
   * Watch the system status
   *
   * @generated from rpc status.v1.StatusService.Watch
   */
  watch: {
    methodKind: "server_streaming";
    input: typeof StatusServiceWatchRequestSchema;
    output: typeof StatusServiceWatchResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_status_v1_status, 0);

