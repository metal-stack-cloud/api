// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file status/v1/message.proto (package status.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_api_v1_common } from "../../api/v1/common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message as Message$1 } from "@bufbuild/protobuf";

/**
 * Describes the file status/v1/message.proto.
 */
export const file_status_v1_message: GenFile = /*@__PURE__*/
  fileDesc("ChdzdGF0dXMvdjEvbWVzc2FnZS5wcm90bxIJc3RhdHVzLnYxIhsKGU1lc3NhZ2VTZXJ2aWNlTGlzdFJlcXVlc3QiaQoaTWVzc2FnZVNlcnZpY2VMaXN0UmVzcG9uc2USIQoFaXRlbXMYASADKAsyEi5zdGF0dXMudjEuTWVzc2FnZRIoCgxwaW5uZWRfaXRlbXMYAiADKAsyEi5zdGF0dXMudjEuTWVzc2FnZSKiAQoHTWVzc2FnZRIKCgJpZBgBIAEoCRIMCgR0ZXh0GAIgASgJEiQKBGtpbmQYAyABKA4yFi5zdGF0dXMudjEuTWVzc2FnZUtpbmQSLQoJdGltZXN0YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIoCgdyZXBsaWVzGAUgAygLMhcuc3RhdHVzLnYxLlJlcGx5TWVzc2FnZSJ9CgxSZXBseU1lc3NhZ2USCgoCaWQYASABKAkSDAoEdGV4dBgCIAEoCRIkCgRraW5kGAMgASgOMhYuc3RhdHVzLnYxLk1lc3NhZ2VLaW5kEi0KCXRpbWVzdGFtcBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAqqgEKC01lc3NhZ2VLaW5kEhwKGE1FU1NBR0VfS0lORF9VTlNQRUNJRklFRBAAEhUKEU1FU1NBR0VfS0lORF9JTkZPEAESGQoVTUVTU0FHRV9LSU5EX0lOQ0lERU5UEAISFwoTTUVTU0FHRV9LSU5EX0NIQU5HRRADEhkKFU1FU1NBR0VfS0lORF9SRVNPTFZFRBAEEhcKE01FU1NBR0VfS0lORF9VUERBVEUQBTJrCg5NZXNzYWdlU2VydmljZRJZCgRMaXN0EiQuc3RhdHVzLnYxLk1lc3NhZ2VTZXJ2aWNlTGlzdFJlcXVlc3QaJS5zdGF0dXMudjEuTWVzc2FnZVNlcnZpY2VMaXN0UmVzcG9uc2UiBNjzGAFCmgEKDWNvbS5zdGF0dXMudjFCDE1lc3NhZ2VQcm90b1ABWjZnaXRodWIuY29tL21ldGFsLXN0YWNrLWNsb3VkL2FwaS9nby9zdGF0dXMvdjE7c3RhdHVzdjGiAgNTWFiqAglTdGF0dXMuVjHKAglTdGF0dXNcVjHiAhVTdGF0dXNcVjFcR1BCTWV0YWRhdGHqAgpTdGF0dXM6OlYxYgZwcm90bzM", [file_api_v1_common, file_google_protobuf_timestamp]);

/**
 * MessageServiceListRequest is the request payload to get the messages
 *
 * @generated from message status.v1.MessageServiceListRequest
 */
export type MessageServiceListRequest = Message$1<"status.v1.MessageServiceListRequest"> & {
};

/**
 * Describes the message status.v1.MessageServiceListRequest.
 * Use `create(MessageServiceListRequestSchema)` to create a new message.
 */
export const MessageServiceListRequestSchema: GenMessage<MessageServiceListRequest> = /*@__PURE__*/
  messageDesc(file_status_v1_message, 0);

/**
 * MessageServiceListResponse is the response payload with the messages
 *
 * @generated from message status.v1.MessageServiceListResponse
 */
export type MessageServiceListResponse = Message$1<"status.v1.MessageServiceListResponse"> & {
  /**
   * Items is a slice of all messages
   *
   * @generated from field: repeated status.v1.Message items = 1;
   */
  items: Message[];

  /**
   * PinnedItems are messages which are of special interest
   *
   * @generated from field: repeated status.v1.Message pinned_items = 2;
   */
  pinnedItems: Message[];
};

/**
 * Describes the message status.v1.MessageServiceListResponse.
 * Use `create(MessageServiceListResponseSchema)` to create a new message.
 */
export const MessageServiceListResponseSchema: GenMessage<MessageServiceListResponse> = /*@__PURE__*/
  messageDesc(file_status_v1_message, 1);

/**
 * Message is a test message to be displayed in the status
 *
 * @generated from message status.v1.Message
 */
export type Message = Message$1<"status.v1.Message"> & {
  /**
   * Id of the message
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Text of the message
   *
   * @generated from field: string text = 2;
   */
  text: string;

  /**
   * Kind of the message, this is to distinguish between the importance of a message
   *
   * @generated from field: status.v1.MessageKind kind = 3;
   */
  kind: MessageKind;

  /**
   * Timestamp when this message was created
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 4;
   */
  timestamp?: Timestamp;

  /**
   * Replies are messages which are followups to the initial message
   *
   * @generated from field: repeated status.v1.ReplyMessage replies = 5;
   */
  replies: ReplyMessage[];
};

/**
 * Describes the message status.v1.Message.
 * Use `create(MessageSchema)` to create a new message.
 */
export const MessageSchema: GenMessage<Message> = /*@__PURE__*/
  messageDesc(file_status_v1_message, 2);

/**
 * ReplyMessage is a message as a followup of a initial message
 *
 * @generated from message status.v1.ReplyMessage
 */
export type ReplyMessage = Message$1<"status.v1.ReplyMessage"> & {
  /**
   * Id of the message
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Text of the message
   *
   * @generated from field: string text = 2;
   */
  text: string;

  /**
   * Kind of the message, this is to distinguish between the importance of a message
   *
   * @generated from field: status.v1.MessageKind kind = 3;
   */
  kind: MessageKind;

  /**
   * Timestamp when this message was created
   *
   * @generated from field: google.protobuf.Timestamp timestamp = 4;
   */
  timestamp?: Timestamp;
};

/**
 * Describes the message status.v1.ReplyMessage.
 * Use `create(ReplyMessageSchema)` to create a new message.
 */
export const ReplyMessageSchema: GenMessage<ReplyMessage> = /*@__PURE__*/
  messageDesc(file_status_v1_message, 3);

/**
 * MessageKind defines what type of message it is
 *
 * @generated from enum status.v1.MessageKind
 */
export enum MessageKind {
  /**
   * MESSAGE_KIND_UNSPECIFIED is not specified
   *
   * @generated from enum value: MESSAGE_KIND_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * MESSAGE_KIND_INFO is a informational message
   *
   * @generated from enum value: MESSAGE_KIND_INFO = 1;
   */
  INFO = 1,

  /**
   * MESSAGE_KIND_INCIDENT is a incident message
   *
   * @generated from enum value: MESSAGE_KIND_INCIDENT = 2;
   */
  INCIDENT = 2,

  /**
   * MESSAGE_KIND_CHANGE is a change message
   *
   * @generated from enum value: MESSAGE_KIND_CHANGE = 3;
   */
  CHANGE = 3,

  /**
   * MESSAGE_KIND_RESOLVED is a resolved message
   *
   * @generated from enum value: MESSAGE_KIND_RESOLVED = 4;
   */
  RESOLVED = 4,

  /**
   * MESSAGE_KIND_UPDATE is a update message
   *
   * @generated from enum value: MESSAGE_KIND_UPDATE = 5;
   */
  UPDATE = 5,
}

/**
 * Describes the enum status.v1.MessageKind.
 */
export const MessageKindSchema: GenEnum<MessageKind> = /*@__PURE__*/
  enumDesc(file_status_v1_message, 0);

/**
 * MessageService serves status message related functions
 * this service is used as backend for the status dashboard
 *
 * @generated from service status.v1.MessageService
 */
export const MessageService: GenService<{
  /**
   * List returns all messages of interest
   *
   * @generated from rpc status.v1.MessageService.List
   */
  list: {
    methodKind: "unary";
    input: typeof MessageServiceListRequestSchema;
    output: typeof MessageServiceListResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_status_v1_message, 0);

