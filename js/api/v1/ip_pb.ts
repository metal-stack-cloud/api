// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file api/v1/ip.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_api_v1_common } from "./common_pb";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/v1/ip.proto.
 */
export const file_api_v1_ip: GenFile = /*@__PURE__*/
  fileDesc("Cg9hcGkvdjEvaXAucHJvdG8SBmFwaS52MSLyAgoCSVASFgoEdXVpZBgBIAEoCUIIukgFcgOwAQESEwoCaXAYAiABKAlCB7pIBHICcAESGAoEbmFtZRgDIAEoCUIKukgHcgUQAhiAARIdCgtkZXNjcmlwdGlvbhgEIAEoCUIIukgFcgMYgAESGwoHbmV0d29yaxgFIAEoCUIKukgHcgUQAhiAARIZCgdwcm9qZWN0GAYgASgJQgi6SAVyA7ABARImCgR0eXBlGAcgASgOMg4uYXBpLnYxLklQVHlwZUIIukgFggECEAESFgoEdGFncxgIIAMoCUIIukgFkgECEGQSLgoKY3JlYXRlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKZGVsZXRlZF9hdBgMIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiSgoTSVBTZXJ2aWNlR2V0UmVxdWVzdBIWCgR1dWlkGAEgASgJQgi6SAVyA7ABARIbCgdwcm9qZWN0GAIgASgJQgq6SAdyBRACGIABIpgBChhJUFNlcnZpY2VBbGxvY2F0ZVJlcXVlc3QSGwoHcHJvamVjdBgCIAEoCUIKukgHcgUQAhiAARIYCgRuYW1lGAMgASgJQgq6SAdyBRACGIABEh0KC2Rlc2NyaXB0aW9uGAQgASgJQgi6SAVyAxiAARIWCgR0YWdzGAggAygJQgi6SAWSAQIQZBIOCgZzdGF0aWMYCSABKAgiTQoWSVBTZXJ2aWNlVXBkYXRlUmVxdWVzdBIbCgdwcm9qZWN0GAEgASgJQgq6SAdyBRACGIABEhYKAmlwGAIgASgLMgouYXBpLnYxLklQIjMKFElQU2VydmljZUxpc3RSZXF1ZXN0EhsKB3Byb2plY3QYAiABKAlCCrpIB3IFEAIYgAEiTQoWSVBTZXJ2aWNlRGVsZXRlUmVxdWVzdBIWCgR1dWlkGAEgASgJQgi6SAVyA7ABARIbCgdwcm9qZWN0GAIgASgJQgq6SAdyBRACGIABIi4KFElQU2VydmljZUdldFJlc3BvbnNlEhYKAmlwGAEgASgLMgouYXBpLnYxLklQIjEKF0lQU2VydmljZVVwZGF0ZVJlc3BvbnNlEhYKAmlwGAEgASgLMgouYXBpLnYxLklQIjMKGUlQU2VydmljZUFsbG9jYXRlUmVzcG9uc2USFgoCaXAYASABKAsyCi5hcGkudjEuSVAiMAoVSVBTZXJ2aWNlTGlzdFJlc3BvbnNlEhcKA2lwcxgBIAMoCzIKLmFwaS52MS5JUCIxChdJUFNlcnZpY2VEZWxldGVSZXNwb25zZRIWCgJpcBgBIAEoCzIKLmFwaS52MS5JUCpMCgZJUFR5cGUSFwoTSVBfVFlQRV9VTlNQRUNJRklFRBAAEhUKEUlQX1RZUEVfRVBIRU1FUkFMEAESEgoOSVBfVFlQRV9TVEFUSUMQAjKzAwoJSVBTZXJ2aWNlEk0KA0dldBIbLmFwaS52MS5JUFNlcnZpY2VHZXRSZXF1ZXN0GhwuYXBpLnYxLklQU2VydmljZUdldFJlc3BvbnNlIgvK8xgDAQID6PMYAhJbCghBbGxvY2F0ZRIgLmFwaS52MS5JUFNlcnZpY2VBbGxvY2F0ZVJlcXVlc3QaIS5hcGkudjEuSVBTZXJ2aWNlQWxsb2NhdGVSZXNwb25zZSIKyvMYAgEC4PMYARJVCgZVcGRhdGUSHi5hcGkudjEuSVBTZXJ2aWNlVXBkYXRlUmVxdWVzdBofLmFwaS52MS5JUFNlcnZpY2VVcGRhdGVSZXNwb25zZSIKyvMYAgEC4PMYARJQCgRMaXN0EhwuYXBpLnYxLklQU2VydmljZUxpc3RSZXF1ZXN0Gh0uYXBpLnYxLklQU2VydmljZUxpc3RSZXNwb25zZSILyvMYAwECA+jzGAISUQoGRGVsZXRlEh4uYXBpLnYxLklQU2VydmljZURlbGV0ZVJlcXVlc3QaHy5hcGkudjEuSVBTZXJ2aWNlRGVsZXRlUmVzcG9uc2UiBsrzGAIBAkKAAQoKY29tLmFwaS52MUIHSXBQcm90b1ABWjBnaXRodWIuY29tL21ldGFsLXN0YWNrLWNsb3VkL2FwaS9nby9hcGkvdjE7YXBpdjGiAgNBWFiqAgZBcGkuVjHKAgZBcGlcVjHiAhJBcGlcVjFcR1BCTWV0YWRhdGHqAgdBcGk6OlYxYgZwcm90bzM", [file_api_v1_common, file_buf_validate_validate, file_google_protobuf_timestamp]);

/**
 * IP is a ip address which can be used as loadbalancer addresses
 *
 * @generated from message api.v1.IP
 */
export type IP = Message<"api.v1.IP"> & {
  /**
   * Uuid of this ip
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Ip is either ipv4 or ipv6 address
   *
   * @generated from field: string ip = 2;
   */
  ip: string;

  /**
   * Name of this ip
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Description of this ip
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Network is the network this ip belongs to
   *
   * @generated from field: string network = 5;
   */
  network: string;

  /**
   * Project where this ip address belongs to
   *
   * @generated from field: string project = 6;
   */
  project: string;

  /**
   * Type of this ip
   *
   * @generated from field: api.v1.IPType type = 7;
   */
  type: IPType;

  /**
   * Tags on this ip
   *
   * @generated from field: repeated string tags = 8;
   */
  tags: string[];

  /**
   * CreatedAt is the date when this ip was created
   *
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * UpdatedAt is the date when this ip was updated
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  /**
   * DeletedAt is the date when this ip was deleted
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 12;
   */
  deletedAt?: Timestamp;
};

/**
 * Describes the message api.v1.IP.
 * Use `create(IPSchema)` to create a new message.
 */
export const IPSchema: GenMessage<IP> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 0);

/**
 * IPServiceGetRequest is the request payload for a ip get request
 *
 * @generated from message api.v1.IPServiceGetRequest
 */
export type IPServiceGetRequest = Message<"api.v1.IPServiceGetRequest"> & {
  /**
   * Uuid of the ip to get
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Project of the ip
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message api.v1.IPServiceGetRequest.
 * Use `create(IPServiceGetRequestSchema)` to create a new message.
 */
export const IPServiceGetRequestSchema: GenMessage<IPServiceGetRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 1);

/**
 * IPServiceGetRequest is the request payload for a ip get request
 *
 * @generated from message api.v1.IPServiceAllocateRequest
 */
export type IPServiceAllocateRequest = Message<"api.v1.IPServiceAllocateRequest"> & {
  /**
   * Project of the ip
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Name of the ip
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Description of the ip
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Tags to put onto the ip
   *
   * @generated from field: repeated string tags = 8;
   */
  tags: string[];

  /**
   * Static if set to true, this will be a Static ip
   *
   * @generated from field: bool static = 9;
   */
  static: boolean;
};

/**
 * Describes the message api.v1.IPServiceAllocateRequest.
 * Use `create(IPServiceAllocateRequestSchema)` to create a new message.
 */
export const IPServiceAllocateRequestSchema: GenMessage<IPServiceAllocateRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 2);

/**
 * IPServiceUpdateRequest is the request payload for a ip update request
 *
 * @generated from message api.v1.IPServiceUpdateRequest
 */
export type IPServiceUpdateRequest = Message<"api.v1.IPServiceUpdateRequest"> & {
  /**
   * Project of the ip
   *
   * @generated from field: string project = 1;
   */
  project: string;

  /**
   * Ip the ip to update
   *
   * @generated from field: api.v1.IP ip = 2;
   */
  ip?: IP;
};

/**
 * Describes the message api.v1.IPServiceUpdateRequest.
 * Use `create(IPServiceUpdateRequestSchema)` to create a new message.
 */
export const IPServiceUpdateRequestSchema: GenMessage<IPServiceUpdateRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 3);

/**
 * IPServiceListRequest is the request payload for a ip list request
 *
 * @generated from message api.v1.IPServiceListRequest
 */
export type IPServiceListRequest = Message<"api.v1.IPServiceListRequest"> & {
  /**
   * Project of the ips to list
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message api.v1.IPServiceListRequest.
 * Use `create(IPServiceListRequestSchema)` to create a new message.
 */
export const IPServiceListRequestSchema: GenMessage<IPServiceListRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 4);

/**
 * IPServiceDeleteRequest is the request payload for a ip delete request
 *
 * @generated from message api.v1.IPServiceDeleteRequest
 */
export type IPServiceDeleteRequest = Message<"api.v1.IPServiceDeleteRequest"> & {
  /**
   * Uuid of the ip to delete
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Project of the ip
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message api.v1.IPServiceDeleteRequest.
 * Use `create(IPServiceDeleteRequestSchema)` to create a new message.
 */
export const IPServiceDeleteRequestSchema: GenMessage<IPServiceDeleteRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 5);

/**
 * IPServiceGetResponse is the response payload for a ip get request
 *
 * @generated from message api.v1.IPServiceGetResponse
 */
export type IPServiceGetResponse = Message<"api.v1.IPServiceGetResponse"> & {
  /**
   * Ip the ip
   *
   * @generated from field: api.v1.IP ip = 1;
   */
  ip?: IP;
};

/**
 * Describes the message api.v1.IPServiceGetResponse.
 * Use `create(IPServiceGetResponseSchema)` to create a new message.
 */
export const IPServiceGetResponseSchema: GenMessage<IPServiceGetResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 6);

/**
 * IPServiceUpdateResponse is the response payload for a ip update request
 *
 * @generated from message api.v1.IPServiceUpdateResponse
 */
export type IPServiceUpdateResponse = Message<"api.v1.IPServiceUpdateResponse"> & {
  /**
   * Ip the ip
   *
   * @generated from field: api.v1.IP ip = 1;
   */
  ip?: IP;
};

/**
 * Describes the message api.v1.IPServiceUpdateResponse.
 * Use `create(IPServiceUpdateResponseSchema)` to create a new message.
 */
export const IPServiceUpdateResponseSchema: GenMessage<IPServiceUpdateResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 7);

/**
 * IPServiceAllocateResponse is the response payload for a ip allocate request
 *
 * @generated from message api.v1.IPServiceAllocateResponse
 */
export type IPServiceAllocateResponse = Message<"api.v1.IPServiceAllocateResponse"> & {
  /**
   * Ip the ip
   *
   * @generated from field: api.v1.IP ip = 1;
   */
  ip?: IP;
};

/**
 * Describes the message api.v1.IPServiceAllocateResponse.
 * Use `create(IPServiceAllocateResponseSchema)` to create a new message.
 */
export const IPServiceAllocateResponseSchema: GenMessage<IPServiceAllocateResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 8);

/**
 * IPServiceListResponse is the response payload for a ip list request
 *
 * @generated from message api.v1.IPServiceListResponse
 */
export type IPServiceListResponse = Message<"api.v1.IPServiceListResponse"> & {
  /**
   * Ips the ips
   *
   * @generated from field: repeated api.v1.IP ips = 1;
   */
  ips: IP[];
};

/**
 * Describes the message api.v1.IPServiceListResponse.
 * Use `create(IPServiceListResponseSchema)` to create a new message.
 */
export const IPServiceListResponseSchema: GenMessage<IPServiceListResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 9);

/**
 * IPServiceDeleteResponse is the response payload for a ip delete request
 *
 * @generated from message api.v1.IPServiceDeleteResponse
 */
export type IPServiceDeleteResponse = Message<"api.v1.IPServiceDeleteResponse"> & {
  /**
   * Ip the ip
   *
   * @generated from field: api.v1.IP ip = 1;
   */
  ip?: IP;
};

/**
 * Describes the message api.v1.IPServiceDeleteResponse.
 * Use `create(IPServiceDeleteResponseSchema)` to create a new message.
 */
export const IPServiceDeleteResponseSchema: GenMessage<IPServiceDeleteResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_ip, 10);

/**
 * IPType specifies different ip address types
 *
 * @generated from enum api.v1.IPType
 */
export enum IPType {
  /**
   * IP_TYPE_UNSPECIFIED is not specified
   *
   * @generated from enum value: IP_TYPE_UNSPECIFIED = 0;
   */
  IP_TYPE_UNSPECIFIED = 0,

  /**
   * IP_TYPE_EPHEMERAL defines a ephemeral ip address which is freed/deleted after usage
   *
   * @generated from enum value: IP_TYPE_EPHEMERAL = 1;
   */
  IP_TYPE_EPHEMERAL = 1,

  /**
   * IP_TYPE_STATIC defines a static ip address which must be freed/deleted explicitly
   *
   * @generated from enum value: IP_TYPE_STATIC = 2;
   */
  IP_TYPE_STATIC = 2,
}

/**
 * Describes the enum api.v1.IPType.
 */
export const IPTypeSchema: GenEnum<IPType> = /*@__PURE__*/
  enumDesc(file_api_v1_ip, 0);

/**
 * IPService serves ip address related functions
 *
 * @generated from service api.v1.IPService
 */
export const IPService: GenService<{
  /**
   * Get a ip
   *
   * @generated from rpc api.v1.IPService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof IPServiceGetRequestSchema;
    output: typeof IPServiceGetResponseSchema;
  },
  /**
   * Allocate a ip
   *
   * @generated from rpc api.v1.IPService.Allocate
   */
  allocate: {
    methodKind: "unary";
    input: typeof IPServiceAllocateRequestSchema;
    output: typeof IPServiceAllocateResponseSchema;
  },
  /**
   * Update a ip
   *
   * @generated from rpc api.v1.IPService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof IPServiceUpdateRequestSchema;
    output: typeof IPServiceUpdateResponseSchema;
  },
  /**
   * List all ips
   *
   * @generated from rpc api.v1.IPService.List
   */
  list: {
    methodKind: "unary";
    input: typeof IPServiceListRequestSchema;
    output: typeof IPServiceListResponseSchema;
  },
  /**
   * Delete a ip
   *
   * @generated from rpc api.v1.IPService.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof IPServiceDeleteRequestSchema;
    output: typeof IPServiceDeleteResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_ip, 0);

