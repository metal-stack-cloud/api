// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file api/v1/tenant.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { OAuthProvider, TenantRole } from "./common_pb";
import { file_api_v1_common } from "./common_pb";
import type { Coupon } from "./payment_pb";
import { file_api_v1_payment } from "./payment_pb";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/v1/tenant.proto.
 */
export const file_api_v1_tenant: GenFile = /*@__PURE__*/
  fileDesc("ChNhcGkvdjEvdGVuYW50LnByb3RvEgZhcGkudjEi7QMKBlRlbmFudBINCgVsb2dpbhgBIAEoCRIMCgRuYW1lGAIgASgJEg0KBWVtYWlsGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJEhIKCmF2YXRhcl91cmwYBSABKAkSLQoOb2F1dGhfcHJvdmlkZXIYBiABKA4yFS5hcGkudjEuT0F1dGhQcm92aWRlchIvCg9wYXltZW50X2RldGFpbHMYCCABKAsyFi5hcGkudjEuUGF5bWVudERldGFpbHMSEAoIYWRtaXR0ZWQYCSABKAgSFAoMcGhvbmVfbnVtYmVyGAogASgJEjgKFHRlcm1zX2FuZF9jb25kaXRpb25zGAsgASgLMhouYXBpLnYxLlRlcm1zQW5kQ29uZGl0aW9ucxIVCg1lbWFpbF9jb25zZW50GAwgASgIEhEKCW9uYm9hcmRlZBgNIAEoCBISCgpjcmVhdGVkX2J5GA8gASgJEi4KCmNyZWF0ZWRfYXQYFCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnVwZGF0ZWRfYXQYFSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCmRlbGV0ZWRfYXQYFiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIosBCgxUZW5hbnRNZW1iZXISCgoCaWQYASABKAkSKgoEcm9sZRgCIAEoDjISLmFwaS52MS5UZW5hbnRSb2xlQgi6SAWCAQIQARITCgtwcm9qZWN0X2lkcxgEIAMoCRIuCgpjcmVhdGVkX2F0GAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKRAgoMVGVuYW50SW52aXRlEg4KBnNlY3JldBgBIAEoCRIVCg10YXJnZXRfdGVuYW50GAIgASgJEioKBHJvbGUYAyABKA4yEi5hcGkudjEuVGVuYW50Um9sZUIIukgFggECEAESDgoGam9pbmVkGAQgASgIEhoKEnRhcmdldF90ZW5hbnRfbmFtZRgFIAEoCRIOCgZ0ZW5hbnQYBiABKAkSEwoLdGVuYW50X25hbWUYByABKAkSLgoKZXhwaXJlc19hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLQoJam9pbmVkX2F0GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKiAQoOUGF5bWVudERldGFpbHMSEwoLY3VzdG9tZXJfaWQYASABKAkSHgoRcGF5bWVudF9tZXRob2RfaWQYAiABKAlIAIgBARIXCg9zdWJzY3JpcHRpb25faWQYAyABKAkSHwoHY291cG9ucxgEIAMoCzIOLmFwaS52MS5Db3Vwb24SCwoDdmF0GAUgASgJQhQKEl9wYXltZW50X21ldGhvZF9pZCJQChJUZXJtc0FuZENvbmRpdGlvbnMSEAoIYWNjZXB0ZWQYASABKAgSKAoEd2hlbhgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiWQoYVGVuYW50U2VydmljZUxpc3RSZXF1ZXN0Eg8KAmlkGAEgASgJSACIAQESHAoEbmFtZRgCIAEoCUIJukgGcgQQAhhASAGIAQFCBQoDX2lkQgcKBV9uYW1lImYKF1RlbmFudFNlcnZpY2VHZXRSZXF1ZXN0Eg0KBWxvZ2luGAEgASgJEiIKFWlzX3BheW1lbnRfdmFsaWRhdGlvbhgCIAEoCEgAiAEBQhgKFl9pc19wYXltZW50X3ZhbGlkYXRpb24i8AEKGlRlbmFudFNlcnZpY2VDcmVhdGVSZXF1ZXN0EhcKBG5hbWUYASABKAlCCbpIBnIEEAIYQBIkCgtkZXNjcmlwdGlvbhgCIAEoCUIKukgHcgUQAhiABEgAiAEBEhsKBWVtYWlsGAMgASgJQge6SARyAmABSAGIAQESIQoKYXZhdGFyX3VybBgEIAEoCUIIukgFcgOIAQFIAogBARIZCgxwaG9uZV9udW1iZXIYBSABKAlIA4gBAUIOCgxfZGVzY3JpcHRpb25CCAoGX2VtYWlsQg0KC19hdmF0YXJfdXJsQg8KDV9waG9uZV9udW1iZXIihAMKGlRlbmFudFNlcnZpY2VVcGRhdGVSZXF1ZXN0Eg0KBWxvZ2luGAEgASgJEhwKBG5hbWUYAiABKAlCCbpIBnIEEAIYQEgAiAEBEhsKBWVtYWlsGAMgASgJQge6SARyAmABSAGIAQESJAoLZGVzY3JpcHRpb24YBCABKAlCCrpIB3IFEAIYgARIAogBARIhCgphdmF0YXJfdXJsGAUgASgJQgi6SAVyA4gBAUgDiAEBEhYKCW9uYm9hcmRlZBgNIAEoCEgEiAEBEigKG2FjY2VwdF90ZXJtc19hbmRfY29uZGl0aW9ucxgOIAEoCEgFiAEBQgcKBV9uYW1lQggKBl9lbWFpbEIOCgxfZGVzY3JpcHRpb25CDQoLX2F2YXRhcl91cmxCDAoKX29uYm9hcmRlZEIeChxfYWNjZXB0X3Rlcm1zX2FuZF9jb25kaXRpb25zSgQICBAJSgQICRAKUg9wYXltZW50X2RldGFpbHNSFHRlcm1zX2FuZF9jb25kaXRpb25zIisKGlRlbmFudFNlcnZpY2VEZWxldGVSZXF1ZXN0Eg0KBWxvZ2luGAEgASgJImgKGFRlbmFudFNlcnZpY2VHZXRSZXNwb25zZRIeCgZ0ZW5hbnQYASABKAsyDi5hcGkudjEuVGVuYW50EiwKDnRlbmFudF9tZW1iZXJzGAIgAygLMhQuYXBpLnYxLlRlbmFudE1lbWJlciI8ChlUZW5hbnRTZXJ2aWNlTGlzdFJlc3BvbnNlEh8KB3RlbmFudHMYASADKAsyDi5hcGkudjEuVGVuYW50Ij0KG1RlbmFudFNlcnZpY2VDcmVhdGVSZXNwb25zZRIeCgZ0ZW5hbnQYASABKAsyDi5hcGkudjEuVGVuYW50IkUKI1RlbmFudFNlcnZpY2VDcmVhdGVPclVwZGF0ZVJlc3BvbnNlEh4KBnRlbmFudBgBIAEoCzIOLmFwaS52MS5UZW5hbnQiPQobVGVuYW50U2VydmljZVVwZGF0ZVJlc3BvbnNlEh4KBnRlbmFudBgBIAEoCzIOLmFwaS52MS5UZW5hbnQiPQobVGVuYW50U2VydmljZURlbGV0ZVJlc3BvbnNlEh4KBnRlbmFudBgBIAEoCzIOLmFwaS52MS5UZW5hbnQiVwoaVGVuYW50U2VydmljZUludml0ZVJlcXVlc3QSDQoFbG9naW4YASABKAkSKgoEcm9sZRgCIAEoDjISLmFwaS52MS5UZW5hbnRSb2xlQgi6SAWCAQIQASJDChtUZW5hbnRTZXJ2aWNlSW52aXRlUmVzcG9uc2USJAoGaW52aXRlGAEgASgLMhQuYXBpLnYxLlRlbmFudEludml0ZSIwCh9UZW5hbnRTZXJ2aWNlSW52aXRlc0xpc3RSZXF1ZXN0Eg0KBWxvZ2luGAEgASgJIkkKIFRlbmFudFNlcnZpY2VJbnZpdGVzTGlzdFJlc3BvbnNlEiUKB2ludml0ZXMYASADKAsyFC5hcGkudjEuVGVuYW50SW52aXRlIi8KHVRlbmFudFNlcnZpY2VJbnZpdGVHZXRSZXF1ZXN0Eg4KBnNlY3JldBgBIAEoCSJGCh5UZW5hbnRTZXJ2aWNlSW52aXRlR2V0UmVzcG9uc2USJAoGaW52aXRlGAEgASgLMhQuYXBpLnYxLlRlbmFudEludml0ZSJECiBUZW5hbnRTZXJ2aWNlUmVtb3ZlTWVtYmVyUmVxdWVzdBINCgVsb2dpbhgBIAEoCRIRCgltZW1iZXJfaWQYAiABKAkiIwohVGVuYW50U2VydmljZVJlbW92ZU1lbWJlclJlc3BvbnNlIjIKIFRlbmFudFNlcnZpY2VJbnZpdGVBY2NlcHRSZXF1ZXN0Eg4KBnNlY3JldBgBIAEoCSJICiFUZW5hbnRTZXJ2aWNlSW52aXRlQWNjZXB0UmVzcG9uc2USDgoGdGVuYW50GAEgASgJEhMKC3RlbmFudF9uYW1lGAIgASgJIkEKIFRlbmFudFNlcnZpY2VJbnZpdGVEZWxldGVSZXF1ZXN0Eg0KBWxvZ2luGAEgASgJEg4KBnNlY3JldBgCIAEoCSIjCiFUZW5hbnRTZXJ2aWNlSW52aXRlRGVsZXRlUmVzcG9uc2UicAogVGVuYW50U2VydmljZVVwZGF0ZU1lbWJlclJlcXVlc3QSDQoFbG9naW4YASABKAkSEQoJbWVtYmVyX2lkGAIgASgJEioKBHJvbGUYAyABKA4yEi5hcGkudjEuVGVuYW50Um9sZUIIukgFggECEAEiUAohVGVuYW50U2VydmljZVVwZGF0ZU1lbWJlclJlc3BvbnNlEisKDXRlbmFudF9tZW1iZXIYASABKAsyFC5hcGkudjEuVGVuYW50TWVtYmVyIpkBCiRUZW5hbnRTZXJ2aWNlUmVxdWVzdEFkbWlzc2lvblJlcXVlc3QSDQoFbG9naW4YASABKAkSDAoEbmFtZRgCIAEoCRIWCgVlbWFpbBgDIAEoCUIHukgEcgJgARIlCh1hY2NlcHRlZF90ZXJtc19hbmRfY29uZGl0aW9ucxgEIAEoCBIVCg1lbWFpbF9jb25zZW50GAUgASgIIicKJVRlbmFudFNlcnZpY2VSZXF1ZXN0QWRtaXNzaW9uUmVzcG9uc2UyxgoKDVRlbmFudFNlcnZpY2USWwoGQ3JlYXRlEiIuYXBpLnYxLlRlbmFudFNlcnZpY2VDcmVhdGVSZXF1ZXN0GiMuYXBpLnYxLlRlbmFudFNlcnZpY2VDcmVhdGVSZXNwb25zZSII2PMYA+jzGAESVQoETGlzdBIgLmFwaS52MS5UZW5hbnRTZXJ2aWNlTGlzdFJlcXVlc3QaIS5hcGkudjEuVGVuYW50U2VydmljZUxpc3RSZXNwb25zZSII2PMYA+jzGAISVgoDR2V0Eh8uYXBpLnYxLlRlbmFudFNlcnZpY2VHZXRSZXF1ZXN0GiAuYXBpLnYxLlRlbmFudFNlcnZpY2VHZXRSZXNwb25zZSIMwvMYBAECAwTo8xgCEl0KBlVwZGF0ZRIiLmFwaS52MS5UZW5hbnRTZXJ2aWNlVXBkYXRlUmVxdWVzdBojLmFwaS52MS5UZW5hbnRTZXJ2aWNlVXBkYXRlUmVzcG9uc2UiCsLzGAIBAujzGAESXQoGRGVsZXRlEiIuYXBpLnYxLlRlbmFudFNlcnZpY2VEZWxldGVSZXF1ZXN0GiMuYXBpLnYxLlRlbmFudFNlcnZpY2VEZWxldGVSZXNwb25zZSIKwvMYAgEC6PMYARJuCgxSZW1vdmVNZW1iZXISKC5hcGkudjEuVGVuYW50U2VydmljZVJlbW92ZU1lbWJlclJlcXVlc3QaKS5hcGkudjEuVGVuYW50U2VydmljZVJlbW92ZU1lbWJlclJlc3BvbnNlIgnC8xgBAejzGAESbgoMVXBkYXRlTWVtYmVyEiguYXBpLnYxLlRlbmFudFNlcnZpY2VVcGRhdGVNZW1iZXJSZXF1ZXN0GikuYXBpLnYxLlRlbmFudFNlcnZpY2VVcGRhdGVNZW1iZXJSZXNwb25zZSIJwvMYAQHo8xgBElwKBkludml0ZRIiLmFwaS52MS5UZW5hbnRTZXJ2aWNlSW52aXRlUmVxdWVzdBojLmFwaS52MS5UZW5hbnRTZXJ2aWNlSW52aXRlUmVzcG9uc2UiCcLzGAEB6PMYARJtCgxJbnZpdGVBY2NlcHQSKC5hcGkudjEuVGVuYW50U2VydmljZUludml0ZUFjY2VwdFJlcXVlc3QaKS5hcGkudjEuVGVuYW50U2VydmljZUludml0ZUFjY2VwdFJlc3BvbnNlIgjY8xgD6PMYARJuCgxJbnZpdGVEZWxldGUSKC5hcGkudjEuVGVuYW50U2VydmljZUludml0ZURlbGV0ZVJlcXVlc3QaKS5hcGkudjEuVGVuYW50U2VydmljZUludml0ZURlbGV0ZVJlc3BvbnNlIgnC8xgBAejzGAESawoLSW52aXRlc0xpc3QSJy5hcGkudjEuVGVuYW50U2VydmljZUludml0ZXNMaXN0UmVxdWVzdBooLmFwaS52MS5UZW5hbnRTZXJ2aWNlSW52aXRlc0xpc3RSZXNwb25zZSIJwvMYAQHo8xgCEmQKCUludml0ZUdldBIlLmFwaS52MS5UZW5hbnRTZXJ2aWNlSW52aXRlR2V0UmVxdWVzdBomLmFwaS52MS5UZW5hbnRTZXJ2aWNlSW52aXRlR2V0UmVzcG9uc2UiCNjzGAPo8xgCEnsKEFJlcXVlc3RBZG1pc3Npb24SLC5hcGkudjEuVGVuYW50U2VydmljZVJlcXVlc3RBZG1pc3Npb25SZXF1ZXN0Gi0uYXBpLnYxLlRlbmFudFNlcnZpY2VSZXF1ZXN0QWRtaXNzaW9uUmVzcG9uc2UiCsLzGAIBAujzGAJChAEKCmNvbS5hcGkudjFCC1RlbmFudFByb3RvUAFaMGdpdGh1Yi5jb20vbWV0YWwtc3RhY2stY2xvdWQvYXBpL2dvL2FwaS92MTthcGl2MaICA0FYWKoCBkFwaS5WMcoCBkFwaVxWMeICEkFwaVxWMVxHUEJNZXRhZGF0YeoCB0FwaTo6VjFiBnByb3RvMw", [file_api_v1_common, file_api_v1_payment, file_buf_validate_validate, file_google_protobuf_timestamp]);

/**
 * Tenant is a customer of the platform
 *
 * @generated from message api.v1.Tenant
 */
export type Tenant = Message<"api.v1.Tenant"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;

  /**
   * Name of the tenant
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Email of the tenant
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * Description of this tenant
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * AvatarUrl of the tenant
   *
   * @generated from field: string avatar_url = 5;
   */
  avatarUrl: string;

  /**
   * OauthProvider of the tenant
   *
   * @generated from field: api.v1.OAuthProvider oauth_provider = 6;
   */
  oauthProvider: OAuthProvider;

  /**
   * PaymentDetails the tenant provides
   *
   * @generated from field: api.v1.PaymentDetails payment_details = 8;
   */
  paymentDetails?: PaymentDetails;

  /**
   * Admitted indicates if this tenant is allowed to use the platform
   *
   * @generated from field: bool admitted = 9;
   */
  admitted: boolean;

  /**
   * PhoneNumber of the tenant
   *
   * @generated from field: string phone_number = 10;
   */
  phoneNumber: string;

  /**
   * TermsAndConditions the tenant accepted
   *
   * @generated from field: api.v1.TermsAndConditions terms_and_conditions = 11;
   */
  termsAndConditions?: TermsAndConditions;

  /**
   * EmailConsent the tenant made
   *
   * @generated from field: bool email_consent = 12;
   */
  emailConsent: boolean;

  /**
   * Onboarded checks if the tenant was asked to be onboarded
   *
   * @generated from field: bool onboarded = 13;
   */
  onboarded: boolean;

  /**
   * CreatedBy stores who created this tenant
   *
   * @generated from field: string created_by = 15;
   */
  createdBy: string;

  /**
   * CreatedAt the date when this tenant was created
   *
   * @generated from field: google.protobuf.Timestamp created_at = 20;
   */
  createdAt?: Timestamp;

  /**
   * UpdatedAt the date when this tenant was updated
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 21;
   */
  updatedAt?: Timestamp;

  /**
   * DeletedAt the date when this tenant was deleted
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 22;
   */
  deletedAt?: Timestamp;
};

/**
 * Describes the message api.v1.Tenant.
 * Use `create(TenantSchema)` to create a new message.
 */
export const TenantSchema: GenMessage<Tenant> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 0);

/**
 * TenantMember defines a user that participates at a tenant
 *
 * @generated from message api.v1.TenantMember
 */
export type TenantMember = Message<"api.v1.TenantMember"> & {
  /**
   * Id is the user id of the member
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Role is the role of the member
   *
   * @generated from field: api.v1.TenantRole role = 2;
   */
  role: TenantRole;

  /**
   * ProjectIds for the projects in which a user is a direct member
   *
   * @generated from field: repeated string project_ids = 4;
   */
  projectIds: string[];

  /**
   * CreatedAt the date when the member was added to the tenant
   *
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message api.v1.TenantMember.
 * Use `create(TenantMemberSchema)` to create a new message.
 */
export const TenantMemberSchema: GenMessage<TenantMember> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 1);

/**
 * TenantInvite defines invite to tenant
 *
 * @generated from message api.v1.TenantInvite
 */
export type TenantInvite = Message<"api.v1.TenantInvite"> & {
  /**
   * Secret is the secret part of the invite, typically part of the url
   *
   * @generated from field: string secret = 1;
   */
  secret: string;

  /**
   * TargetTenant is the tenant id for which this invite was created
   *
   * @generated from field: string target_tenant = 2;
   */
  targetTenant: string;

  /**
   * Role is the role in this tenant the user will get after accepting the invitation
   *
   * @generated from field: api.v1.TenantRole role = 3;
   */
  role: TenantRole;

  /**
   * Joined is false as long as a user has not accepted the invite
   *
   * @generated from field: bool joined = 4;
   */
  joined: boolean;

  /**
   * TargetTenantName is the tenant name for which this invite was created
   *
   * @generated from field: string target_tenant_name = 5;
   */
  targetTenantName: string;

  /**
   * Tenant is the login of tenant who invites to join this tenant
   *
   * @generated from field: string tenant = 6;
   */
  tenant: string;

  /**
   * TenantName is the name of tenant who invites to join this tenant
   *
   * @generated from field: string tenant_name = 7;
   */
  tenantName: string;

  /**
   * ExpiresAt the date when this invite expires
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 10;
   */
  expiresAt?: Timestamp;

  /**
   * JoinedAt the date when the member accepted this invite
   *
   * @generated from field: google.protobuf.Timestamp joined_at = 11;
   */
  joinedAt?: Timestamp;
};

/**
 * Describes the message api.v1.TenantInvite.
 * Use `create(TenantInviteSchema)` to create a new message.
 */
export const TenantInviteSchema: GenMessage<TenantInvite> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 2);

/**
 * PaymentDetails of a tenant
 *
 * @generated from message api.v1.PaymentDetails
 */
export type PaymentDetails = Message<"api.v1.PaymentDetails"> & {
  /**
   * CustomerId at the payment processor
   *
   * @generated from field: string customer_id = 1;
   */
  customerId: string;

  /**
   * PaymentMethodId of the tenant at the payment processor
   *
   * @generated from field: optional string payment_method_id = 2;
   */
  paymentMethodId?: string;

  /**
   * SubscriptionId at the payment processor
   *
   * @generated from field: string subscription_id = 3;
   */
  subscriptionId: string;

  /**
   * Coupons a list of coupons the tenant has
   *
   * @generated from field: repeated api.v1.Coupon coupons = 4;
   */
  coupons: Coupon[];

  /**
   * Vat which applies to this tenant
   *
   * @generated from field: string vat = 5;
   */
  vat: string;
};

/**
 * Describes the message api.v1.PaymentDetails.
 * Use `create(PaymentDetailsSchema)` to create a new message.
 */
export const PaymentDetailsSchema: GenMessage<PaymentDetails> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 3);

/**
 * TermsAndConditions the tenant accepted
 *
 * @generated from message api.v1.TermsAndConditions
 */
export type TermsAndConditions = Message<"api.v1.TermsAndConditions"> & {
  /**
   * Accepted indicates if the tenant accepted the terms and conditions
   *
   * @generated from field: bool accepted = 1;
   */
  accepted: boolean;

  /**
   * When is the date when the tenant accepted the terms and conditions
   *
   * @generated from field: google.protobuf.Timestamp when = 2;
   */
  when?: Timestamp;
};

/**
 * Describes the message api.v1.TermsAndConditions.
 * Use `create(TermsAndConditionsSchema)` to create a new message.
 */
export const TermsAndConditionsSchema: GenMessage<TermsAndConditions> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 4);

/**
 * TenantServiceListRequest is the request payload of the tenant list request
 *
 * @generated from message api.v1.TenantServiceListRequest
 */
export type TenantServiceListRequest = Message<"api.v1.TenantServiceListRequest"> & {
  /**
   * Id filters tenants by id
   *
   * @generated from field: optional string id = 1;
   */
  id?: string;

  /**
   * Name filters tenants by name
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;
};

/**
 * Describes the message api.v1.TenantServiceListRequest.
 * Use `create(TenantServiceListRequestSchema)` to create a new message.
 */
export const TenantServiceListRequestSchema: GenMessage<TenantServiceListRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 5);

/**
 * TenantServiceGetRequest is the request payload of the tenant get request
 *
 * @generated from message api.v1.TenantServiceGetRequest
 */
export type TenantServiceGetRequest = Message<"api.v1.TenantServiceGetRequest"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;

  /**
   * Get Request for payment validation
   *
   * @generated from field: optional bool is_payment_validation = 2;
   */
  isPaymentValidation?: boolean;
};

/**
 * Describes the message api.v1.TenantServiceGetRequest.
 * Use `create(TenantServiceGetRequestSchema)` to create a new message.
 */
export const TenantServiceGetRequestSchema: GenMessage<TenantServiceGetRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 6);

/**
 * TenantServiceCreateRequest is the request payload of the tenant create request
 *
 * @generated from message api.v1.TenantServiceCreateRequest
 */
export type TenantServiceCreateRequest = Message<"api.v1.TenantServiceCreateRequest"> & {
  /**
   * Name of this tenant
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Description of this tenant
   *
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * Email of the tenant, if not set will be inherited from the creator
   *
   * @generated from field: optional string email = 3;
   */
  email?: string;

  /**
   * AvatarUrl of the tenant
   *
   * @generated from field: optional string avatar_url = 4;
   */
  avatarUrl?: string;

  /**
   * PhoneNumber of the tenant
   *
   * @generated from field: optional string phone_number = 5;
   */
  phoneNumber?: string;
};

/**
 * Describes the message api.v1.TenantServiceCreateRequest.
 * Use `create(TenantServiceCreateRequestSchema)` to create a new message.
 */
export const TenantServiceCreateRequestSchema: GenMessage<TenantServiceCreateRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 7);

/**
 * TenantServiceUpdateRequest is the request payload of the tenant update request
 *
 * @generated from message api.v1.TenantServiceUpdateRequest
 */
export type TenantServiceUpdateRequest = Message<"api.v1.TenantServiceUpdateRequest"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;

  /**
   * Name of the tenant
   *
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * Email of the tenant
   *
   * @generated from field: optional string email = 3;
   */
  email?: string;

  /**
   * Description of this tenant
   *
   * @generated from field: optional string description = 4;
   */
  description?: string;

  /**
   * AvatarUrl of the tenant
   *
   * @generated from field: optional string avatar_url = 5;
   */
  avatarUrl?: string;

  /**
   * Onboarded checks if the tenant was asked to be onboarded
   *
   * @generated from field: optional bool onboarded = 13;
   */
  onboarded?: boolean;

  /**
   * AcceptTermsAndConditions can be used to accept the terms and conditions
   *
   * @generated from field: optional bool accept_terms_and_conditions = 14;
   */
  acceptTermsAndConditions?: boolean;
};

/**
 * Describes the message api.v1.TenantServiceUpdateRequest.
 * Use `create(TenantServiceUpdateRequestSchema)` to create a new message.
 */
export const TenantServiceUpdateRequestSchema: GenMessage<TenantServiceUpdateRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 8);

/**
 * TenantServiceDeleteRequest is the request payload of the tenant delete request
 *
 * @generated from message api.v1.TenantServiceDeleteRequest
 */
export type TenantServiceDeleteRequest = Message<"api.v1.TenantServiceDeleteRequest"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;
};

/**
 * Describes the message api.v1.TenantServiceDeleteRequest.
 * Use `create(TenantServiceDeleteRequestSchema)` to create a new message.
 */
export const TenantServiceDeleteRequestSchema: GenMessage<TenantServiceDeleteRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 9);

/**
 * TenantServiceGetResponse is the response payload of the tenant get request
 *
 * @generated from message api.v1.TenantServiceGetResponse
 */
export type TenantServiceGetResponse = Message<"api.v1.TenantServiceGetResponse"> & {
  /**
   * Tenant is the tenant
   *
   * @generated from field: api.v1.Tenant tenant = 1;
   */
  tenant?: Tenant;

  /**
   * TenantMembers of this tenant
   *
   * @generated from field: repeated api.v1.TenantMember tenant_members = 2;
   */
  tenantMembers: TenantMember[];
};

/**
 * Describes the message api.v1.TenantServiceGetResponse.
 * Use `create(TenantServiceGetResponseSchema)` to create a new message.
 */
export const TenantServiceGetResponseSchema: GenMessage<TenantServiceGetResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 10);

/**
 * TenantServiceListResponse is the response payload of the tenant list request
 *
 * @generated from message api.v1.TenantServiceListResponse
 */
export type TenantServiceListResponse = Message<"api.v1.TenantServiceListResponse"> & {
  /**
   * Tenants is the list of tenants
   *
   * @generated from field: repeated api.v1.Tenant tenants = 1;
   */
  tenants: Tenant[];
};

/**
 * Describes the message api.v1.TenantServiceListResponse.
 * Use `create(TenantServiceListResponseSchema)` to create a new message.
 */
export const TenantServiceListResponseSchema: GenMessage<TenantServiceListResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 11);

/**
 * TenantServiceCreateResponse is the response payload of the tenant create request
 *
 * @generated from message api.v1.TenantServiceCreateResponse
 */
export type TenantServiceCreateResponse = Message<"api.v1.TenantServiceCreateResponse"> & {
  /**
   * Tenant is the tenant
   *
   * @generated from field: api.v1.Tenant tenant = 1;
   */
  tenant?: Tenant;
};

/**
 * Describes the message api.v1.TenantServiceCreateResponse.
 * Use `create(TenantServiceCreateResponseSchema)` to create a new message.
 */
export const TenantServiceCreateResponseSchema: GenMessage<TenantServiceCreateResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 12);

/**
 * TenantServiceCreateOrUpdateResponse is the response payload of the tenant create or update request
 *
 * @generated from message api.v1.TenantServiceCreateOrUpdateResponse
 */
export type TenantServiceCreateOrUpdateResponse = Message<"api.v1.TenantServiceCreateOrUpdateResponse"> & {
  /**
   * Tenant is the tenant
   *
   * @generated from field: api.v1.Tenant tenant = 1;
   */
  tenant?: Tenant;
};

/**
 * Describes the message api.v1.TenantServiceCreateOrUpdateResponse.
 * Use `create(TenantServiceCreateOrUpdateResponseSchema)` to create a new message.
 */
export const TenantServiceCreateOrUpdateResponseSchema: GenMessage<TenantServiceCreateOrUpdateResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 13);

/**
 * TenantServiceUpdateResponse is the response payload of the tenant update request
 *
 * @generated from message api.v1.TenantServiceUpdateResponse
 */
export type TenantServiceUpdateResponse = Message<"api.v1.TenantServiceUpdateResponse"> & {
  /**
   * Tenant is the tenant
   *
   * @generated from field: api.v1.Tenant tenant = 1;
   */
  tenant?: Tenant;
};

/**
 * Describes the message api.v1.TenantServiceUpdateResponse.
 * Use `create(TenantServiceUpdateResponseSchema)` to create a new message.
 */
export const TenantServiceUpdateResponseSchema: GenMessage<TenantServiceUpdateResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 14);

/**
 * TenantServiceDeleteResponse is the response payload of the tenant delete request
 *
 * @generated from message api.v1.TenantServiceDeleteResponse
 */
export type TenantServiceDeleteResponse = Message<"api.v1.TenantServiceDeleteResponse"> & {
  /**
   * Tenant is the tenant
   *
   * @generated from field: api.v1.Tenant tenant = 1;
   */
  tenant?: Tenant;
};

/**
 * Describes the message api.v1.TenantServiceDeleteResponse.
 * Use `create(TenantServiceDeleteResponseSchema)` to create a new message.
 */
export const TenantServiceDeleteResponseSchema: GenMessage<TenantServiceDeleteResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 15);

/**
 * TenantServiceInviteRequest is used to invite a member to a tenant
 *
 * @generated from message api.v1.TenantServiceInviteRequest
 */
export type TenantServiceInviteRequest = Message<"api.v1.TenantServiceInviteRequest"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;

  /**
   * Role of this user in this tenant
   *
   * @generated from field: api.v1.TenantRole role = 2;
   */
  role: TenantRole;
};

/**
 * Describes the message api.v1.TenantServiceInviteRequest.
 * Use `create(TenantServiceInviteRequestSchema)` to create a new message.
 */
export const TenantServiceInviteRequestSchema: GenMessage<TenantServiceInviteRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 16);

/**
 * TenantServiceInviteRequest is the response payload to a invite member request
 *
 * @generated from message api.v1.TenantServiceInviteResponse
 */
export type TenantServiceInviteResponse = Message<"api.v1.TenantServiceInviteResponse"> & {
  /**
   * Invite contains a secret which can be sent to a potential user
   * can be appended to the invitation endpoint at our cloud console like
   * console.metalstack.cloud/invite/<secret>
   *
   * @generated from field: api.v1.TenantInvite invite = 1;
   */
  invite?: TenantInvite;
};

/**
 * Describes the message api.v1.TenantServiceInviteResponse.
 * Use `create(TenantServiceInviteResponseSchema)` to create a new message.
 */
export const TenantServiceInviteResponseSchema: GenMessage<TenantServiceInviteResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 17);

/**
 * TenantServiceInvitesListRequest is the request payload to a list invites request
 *
 * @generated from message api.v1.TenantServiceInvitesListRequest
 */
export type TenantServiceInvitesListRequest = Message<"api.v1.TenantServiceInvitesListRequest"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;
};

/**
 * Describes the message api.v1.TenantServiceInvitesListRequest.
 * Use `create(TenantServiceInvitesListRequestSchema)` to create a new message.
 */
export const TenantServiceInvitesListRequestSchema: GenMessage<TenantServiceInvitesListRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 18);

/**
 * TenantServiceInvitesListResponse is the response payload to a list invites request
 *
 * @generated from message api.v1.TenantServiceInvitesListResponse
 */
export type TenantServiceInvitesListResponse = Message<"api.v1.TenantServiceInvitesListResponse"> & {
  /**
   * Invites not already accepted the invitation to this tenant
   *
   * @generated from field: repeated api.v1.TenantInvite invites = 1;
   */
  invites: TenantInvite[];
};

/**
 * Describes the message api.v1.TenantServiceInvitesListResponse.
 * Use `create(TenantServiceInvitesListResponseSchema)` to create a new message.
 */
export const TenantServiceInvitesListResponseSchema: GenMessage<TenantServiceInvitesListResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 19);

/**
 * TenantServiceInviteGetRequest is the request payload to get a invite
 *
 * @generated from message api.v1.TenantServiceInviteGetRequest
 */
export type TenantServiceInviteGetRequest = Message<"api.v1.TenantServiceInviteGetRequest"> & {
  /**
   * Secret of the invite to get
   *
   * @generated from field: string secret = 1;
   */
  secret: string;
};

/**
 * Describes the message api.v1.TenantServiceInviteGetRequest.
 * Use `create(TenantServiceInviteGetRequestSchema)` to create a new message.
 */
export const TenantServiceInviteGetRequestSchema: GenMessage<TenantServiceInviteGetRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 20);

/**
 * TenantServiceInviteGetResponse is the response payload to a get invite request
 *
 * @generated from message api.v1.TenantServiceInviteGetResponse
 */
export type TenantServiceInviteGetResponse = Message<"api.v1.TenantServiceInviteGetResponse"> & {
  /**
   * Invite is the invite
   *
   * @generated from field: api.v1.TenantInvite invite = 1;
   */
  invite?: TenantInvite;
};

/**
 * Describes the message api.v1.TenantServiceInviteGetResponse.
 * Use `create(TenantServiceInviteGetResponseSchema)` to create a new message.
 */
export const TenantServiceInviteGetResponseSchema: GenMessage<TenantServiceInviteGetResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 21);

/**
 * TenantServiceRemoveMemberRequest is used to remove a member from a tenant
 *
 * @generated from message api.v1.TenantServiceRemoveMemberRequest
 */
export type TenantServiceRemoveMemberRequest = Message<"api.v1.TenantServiceRemoveMemberRequest"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;

  /**
   * MemberID is the id of the member to remove from this tenant
   *
   * @generated from field: string member_id = 2;
   */
  memberId: string;
};

/**
 * Describes the message api.v1.TenantServiceRemoveMemberRequest.
 * Use `create(TenantServiceRemoveMemberRequestSchema)` to create a new message.
 */
export const TenantServiceRemoveMemberRequestSchema: GenMessage<TenantServiceRemoveMemberRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 22);

/**
 * TenantServiceRemoveMemberResponse is the response payload to a remove member request
 *
 * @generated from message api.v1.TenantServiceRemoveMemberResponse
 */
export type TenantServiceRemoveMemberResponse = Message<"api.v1.TenantServiceRemoveMemberResponse"> & {
};

/**
 * Describes the message api.v1.TenantServiceRemoveMemberResponse.
 * Use `create(TenantServiceRemoveMemberResponseSchema)` to create a new message.
 */
export const TenantServiceRemoveMemberResponseSchema: GenMessage<TenantServiceRemoveMemberResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 23);

/**
 * TenantServiceInviteAcceptRequest is the request payload to a accept invite request
 *
 * @generated from message api.v1.TenantServiceInviteAcceptRequest
 */
export type TenantServiceInviteAcceptRequest = Message<"api.v1.TenantServiceInviteAcceptRequest"> & {
  /**
   * Secret is the invitation secret part of the invitation url
   *
   * @generated from field: string secret = 1;
   */
  secret: string;
};

/**
 * Describes the message api.v1.TenantServiceInviteAcceptRequest.
 * Use `create(TenantServiceInviteAcceptRequestSchema)` to create a new message.
 */
export const TenantServiceInviteAcceptRequestSchema: GenMessage<TenantServiceInviteAcceptRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 24);

/**
 * TenantServiceInvitesListResponse is the response payload to a accept invite request
 *
 * @generated from message api.v1.TenantServiceInviteAcceptResponse
 */
export type TenantServiceInviteAcceptResponse = Message<"api.v1.TenantServiceInviteAcceptResponse"> & {
  /**
   * Tenant ID of the joined tenant
   *
   * @generated from field: string tenant = 1;
   */
  tenant: string;

  /**
   * TenantName of the joined tenant
   *
   * @generated from field: string tenant_name = 2;
   */
  tenantName: string;
};

/**
 * Describes the message api.v1.TenantServiceInviteAcceptResponse.
 * Use `create(TenantServiceInviteAcceptResponseSchema)` to create a new message.
 */
export const TenantServiceInviteAcceptResponseSchema: GenMessage<TenantServiceInviteAcceptResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 25);

/**
 * TenantServiceInviteDeleteRequest is the request payload to a delete invite
 *
 * @generated from message api.v1.TenantServiceInviteDeleteRequest
 */
export type TenantServiceInviteDeleteRequest = Message<"api.v1.TenantServiceInviteDeleteRequest"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;

  /**
   * Secret of the invite to delete
   *
   * @generated from field: string secret = 2;
   */
  secret: string;
};

/**
 * Describes the message api.v1.TenantServiceInviteDeleteRequest.
 * Use `create(TenantServiceInviteDeleteRequestSchema)` to create a new message.
 */
export const TenantServiceInviteDeleteRequestSchema: GenMessage<TenantServiceInviteDeleteRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 26);

/**
 * TenantServiceInviteDeleteResponse is the response payload of a delete invite request
 *
 * @generated from message api.v1.TenantServiceInviteDeleteResponse
 */
export type TenantServiceInviteDeleteResponse = Message<"api.v1.TenantServiceInviteDeleteResponse"> & {
};

/**
 * Describes the message api.v1.TenantServiceInviteDeleteResponse.
 * Use `create(TenantServiceInviteDeleteResponseSchema)` to create a new message.
 */
export const TenantServiceInviteDeleteResponseSchema: GenMessage<TenantServiceInviteDeleteResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 27);

/**
 * TenantServiceUpdateMemberRequest is used to update a member from a tenant
 *
 * @generated from message api.v1.TenantServiceUpdateMemberRequest
 */
export type TenantServiceUpdateMemberRequest = Message<"api.v1.TenantServiceUpdateMemberRequest"> & {
  /**
   * Login of the tenant
   *
   * @generated from field: string login = 1;
   */
  login: string;

  /**
   * MemberID is the id of the member to update in this tenant
   *
   * @generated from field: string member_id = 2;
   */
  memberId: string;

  /**
   * Role of this user in this tenant
   *
   * @generated from field: api.v1.TenantRole role = 3;
   */
  role: TenantRole;
};

/**
 * Describes the message api.v1.TenantServiceUpdateMemberRequest.
 * Use `create(TenantServiceUpdateMemberRequestSchema)` to create a new message.
 */
export const TenantServiceUpdateMemberRequestSchema: GenMessage<TenantServiceUpdateMemberRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 28);

/**
 * TenantServiceUpdateMemberResponse is the response payload to a update member request
 *
 * @generated from message api.v1.TenantServiceUpdateMemberResponse
 */
export type TenantServiceUpdateMemberResponse = Message<"api.v1.TenantServiceUpdateMemberResponse"> & {
  /**
   * TenantMember is the updated membership
   *
   * @generated from field: api.v1.TenantMember tenant_member = 1;
   */
  tenantMember?: TenantMember;
};

/**
 * Describes the message api.v1.TenantServiceUpdateMemberResponse.
 * Use `create(TenantServiceUpdateMemberResponseSchema)` to create a new message.
 */
export const TenantServiceUpdateMemberResponseSchema: GenMessage<TenantServiceUpdateMemberResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 29);

/**
 * TenantServiceRequestAdmissionRequest is used to request admission for a tenant
 *
 * @generated from message api.v1.TenantServiceRequestAdmissionRequest
 */
export type TenantServiceRequestAdmissionRequest = Message<"api.v1.TenantServiceRequestAdmissionRequest"> & {
  /**
   * Login of the tenant for whom admission is requested
   *
   * @generated from field: string login = 1;
   */
  login: string;

  /**
   * Name of the user
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Email of the user
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * AcceptedTermsAndConditions indicates if the user has accepted the terms and conditions
   *
   * @generated from field: bool accepted_terms_and_conditions = 4;
   */
  acceptedTermsAndConditions: boolean;

  /**
   * EmailConsent indicates if the user gave consent to receive emails
   *
   * @generated from field: bool email_consent = 5;
   */
  emailConsent: boolean;
};

/**
 * Describes the message api.v1.TenantServiceRequestAdmissionRequest.
 * Use `create(TenantServiceRequestAdmissionRequestSchema)` to create a new message.
 */
export const TenantServiceRequestAdmissionRequestSchema: GenMessage<TenantServiceRequestAdmissionRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 30);

/**
 * TenantServiceRequestAdmissionResponse is the response payload an admission request
 *
 * @generated from message api.v1.TenantServiceRequestAdmissionResponse
 */
export type TenantServiceRequestAdmissionResponse = Message<"api.v1.TenantServiceRequestAdmissionResponse"> & {
};

/**
 * Describes the message api.v1.TenantServiceRequestAdmissionResponse.
 * Use `create(TenantServiceRequestAdmissionResponseSchema)` to create a new message.
 */
export const TenantServiceRequestAdmissionResponseSchema: GenMessage<TenantServiceRequestAdmissionResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_tenant, 31);

/**
 * TenantService serves tenant related functions
 *
 * @generated from service api.v1.TenantService
 */
export const TenantService: GenService<{
  /**
   * Create a tenant
   *
   * @generated from rpc api.v1.TenantService.Create
   */
  create: {
    methodKind: "unary";
    input: typeof TenantServiceCreateRequestSchema;
    output: typeof TenantServiceCreateResponseSchema;
  },
  /**
   * List tenants
   *
   * @generated from rpc api.v1.TenantService.List
   */
  list: {
    methodKind: "unary";
    input: typeof TenantServiceListRequestSchema;
    output: typeof TenantServiceListResponseSchema;
  },
  /**
   * Get a tenant
   *
   * @generated from rpc api.v1.TenantService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof TenantServiceGetRequestSchema;
    output: typeof TenantServiceGetResponseSchema;
  },
  /**
   * Update a tenant
   *
   * @generated from rpc api.v1.TenantService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof TenantServiceUpdateRequestSchema;
    output: typeof TenantServiceUpdateResponseSchema;
  },
  /**
   * Delete a tenant
   *
   * @generated from rpc api.v1.TenantService.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof TenantServiceDeleteRequestSchema;
    output: typeof TenantServiceDeleteResponseSchema;
  },
  /**
   * RemoveMember remove a member of a tenant
   *
   * @generated from rpc api.v1.TenantService.RemoveMember
   */
  removeMember: {
    methodKind: "unary";
    input: typeof TenantServiceRemoveMemberRequestSchema;
    output: typeof TenantServiceRemoveMemberResponseSchema;
  },
  /**
   * UpdateMember update a member of a tenant
   *
   * @generated from rpc api.v1.TenantService.UpdateMember
   */
  updateMember: {
    methodKind: "unary";
    input: typeof TenantServiceUpdateMemberRequestSchema;
    output: typeof TenantServiceUpdateMemberResponseSchema;
  },
  /**
   * Invite a user to a tenant
   *
   * @generated from rpc api.v1.TenantService.Invite
   */
  invite: {
    methodKind: "unary";
    input: typeof TenantServiceInviteRequestSchema;
    output: typeof TenantServiceInviteResponseSchema;
  },
  /**
   * InviteAccept is called from a user to accept an invitation
   *
   * @generated from rpc api.v1.TenantService.InviteAccept
   */
  inviteAccept: {
    methodKind: "unary";
    input: typeof TenantServiceInviteAcceptRequestSchema;
    output: typeof TenantServiceInviteAcceptResponseSchema;
  },
  /**
   * InviteDelete deletes a pending invitation
   *
   * @generated from rpc api.v1.TenantService.InviteDelete
   */
  inviteDelete: {
    methodKind: "unary";
    input: typeof TenantServiceInviteDeleteRequestSchema;
    output: typeof TenantServiceInviteDeleteResponseSchema;
  },
  /**
   * InvitesList list all invites to a tenant
   *
   * @generated from rpc api.v1.TenantService.InvitesList
   */
  invitesList: {
    methodKind: "unary";
    input: typeof TenantServiceInvitesListRequestSchema;
    output: typeof TenantServiceInvitesListResponseSchema;
  },
  /**
   * InviteGet get an invite
   *
   * @generated from rpc api.v1.TenantService.InviteGet
   */
  inviteGet: {
    methodKind: "unary";
    input: typeof TenantServiceInviteGetRequestSchema;
    output: typeof TenantServiceInviteGetResponseSchema;
  },
  /**
   * RequestAdmission requests admission for a tenant to use the service
   *
   * @generated from rpc api.v1.TenantService.RequestAdmission
   */
  requestAdmission: {
    methodKind: "unary";
    input: typeof TenantServiceRequestAdmissionRequestSchema;
    output: typeof TenantServiceRequestAdmissionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_tenant, 0);

