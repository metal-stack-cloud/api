"use strict";
// @generated by protoc-gen-es v1.6.0 with parameter "target=ts"
// @generated from file api/v1/project.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectServiceGetResponse = exports.ProjectServiceGetRequest = exports.ProjectServiceListResponse = exports.ProjectServiceListRequest = exports.Project = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * Project defines a group of resources belonging to a tenant
 * a tenant can have multiple projects
 *
 * @generated from message api.v1.Project
 */
class Project extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Uuid of this project
         *
         * @generated from field: string uuid = 1;
         */
        this.uuid = "";
        /**
         * Name of this project
         *
         * @generated from field: string name = 2;
         */
        this.name = "";
        /**
         * Description of this project
         *
         * @generated from field: string description = 3;
         */
        this.description = "";
        /**
         * Tenant this project belongs to
         *
         * @generated from field: string tenant = 4;
         */
        this.tenant = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Project().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Project().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Project().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Project, a, b);
    }
}
exports.Project = Project;
Project.runtime = protobuf_1.proto3;
Project.typeName = "api.v1.Project";
Project.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tenant", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "created_at", kind: "message", T: protobuf_1.Timestamp },
    { no: 11, name: "updated_at", kind: "message", T: protobuf_1.Timestamp },
]);
/**
 * ProjectServiceListRequest is the request payload to list all projects
 *
 * @generated from message api.v1.ProjectServiceListRequest
 */
class ProjectServiceListRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProjectServiceListRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProjectServiceListRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProjectServiceListRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ProjectServiceListRequest, a, b);
    }
}
exports.ProjectServiceListRequest = ProjectServiceListRequest;
ProjectServiceListRequest.runtime = protobuf_1.proto3;
ProjectServiceListRequest.typeName = "api.v1.ProjectServiceListRequest";
ProjectServiceListRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "tenant", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
/**
 * ProjectServiceListResponse is the response payload to list all projects
 *
 * @generated from message api.v1.ProjectServiceListResponse
 */
class ProjectServiceListResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Projects is a list of all your projects
         *
         * @generated from field: repeated api.v1.Project projects = 1;
         */
        this.projects = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProjectServiceListResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProjectServiceListResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProjectServiceListResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ProjectServiceListResponse, a, b);
    }
}
exports.ProjectServiceListResponse = ProjectServiceListResponse;
ProjectServiceListResponse.runtime = protobuf_1.proto3;
ProjectServiceListResponse.typeName = "api.v1.ProjectServiceListResponse";
ProjectServiceListResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "projects", kind: "message", T: Project, repeated: true },
]);
/**
 * ProjectServiceGetRequest is the request payload to get a project
 *
 * @generated from message api.v1.ProjectServiceGetRequest
 */
class ProjectServiceGetRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Project is the uuid of the project to get
         *
         * @generated from field: string project = 1;
         */
        this.project = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProjectServiceGetRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProjectServiceGetRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProjectServiceGetRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ProjectServiceGetRequest, a, b);
    }
}
exports.ProjectServiceGetRequest = ProjectServiceGetRequest;
ProjectServiceGetRequest.runtime = protobuf_1.proto3;
ProjectServiceGetRequest.typeName = "api.v1.ProjectServiceGetRequest";
ProjectServiceGetRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * ProjectServiceGetResponse is the response payload to get a projects
 *
 * @generated from message api.v1.ProjectServiceGetResponse
 */
class ProjectServiceGetResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProjectServiceGetResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProjectServiceGetResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProjectServiceGetResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ProjectServiceGetResponse, a, b);
    }
}
exports.ProjectServiceGetResponse = ProjectServiceGetResponse;
ProjectServiceGetResponse.runtime = protobuf_1.proto3;
ProjectServiceGetResponse.typeName = "api.v1.ProjectServiceGetResponse";
ProjectServiceGetResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "message", T: Project },
]);
