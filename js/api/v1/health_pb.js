"use strict";
// @generated by protoc-gen-es v0.2.1 with parameter "target=ts"
// @generated from file api/v1/health.proto (package api.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.HealthServiceGetResponse = exports.HealthServiceGetRequest = exports.PartitionHealth = exports.HealthStatus = exports.Health = exports.Service = exports.ServiceStatus = void 0;
var protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from enum api.v1.ServiceStatus
 */
var ServiceStatus;
(function (ServiceStatus) {
    /**
     * @generated from enum value: SERVICE_STATUS_UNSPECIFIED = 0;
     */
    ServiceStatus[ServiceStatus["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: SERVICE_STATUS_DEGRADED = 1;
     */
    ServiceStatus[ServiceStatus["DEGRADED"] = 1] = "DEGRADED";
    /**
     * @generated from enum value: SERVICE_STATUS_UNHEALTHY = 2;
     */
    ServiceStatus[ServiceStatus["UNHEALTHY"] = 2] = "UNHEALTHY";
    /**
     * @generated from enum value: SERVICE_STATUS_HEALTHY = 3;
     */
    ServiceStatus[ServiceStatus["HEALTHY"] = 3] = "HEALTHY";
})(ServiceStatus = exports.ServiceStatus || (exports.ServiceStatus = {}));
// Retrieve enum metadata with: proto3.getEnumType(ServiceStatus)
protobuf_1.proto3.util.setEnumType(ServiceStatus, "api.v1.ServiceStatus", [
    { no: 0, name: "SERVICE_STATUS_UNSPECIFIED" },
    { no: 1, name: "SERVICE_STATUS_DEGRADED" },
    { no: 2, name: "SERVICE_STATUS_UNHEALTHY" },
    { no: 3, name: "SERVICE_STATUS_HEALTHY" },
]);
/**
 * @generated from enum api.v1.Service
 */
var Service;
(function (Service) {
    /**
     * @generated from enum value: SERVICE_UNSPECIFIED = 0;
     */
    Service[Service["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: SERVICE_CLUSTER = 1;
     */
    Service[Service["CLUSTER"] = 1] = "CLUSTER";
    /**
     * @generated from enum value: SERVICE_VOLUME = 2;
     */
    Service[Service["VOLUME"] = 2] = "VOLUME";
    /**
     * @generated from enum value: SERVICE_MACHINES = 3;
     */
    Service[Service["MACHINES"] = 3] = "MACHINES";
})(Service = exports.Service || (exports.Service = {}));
// Retrieve enum metadata with: proto3.getEnumType(Service)
protobuf_1.proto3.util.setEnumType(Service, "api.v1.Service", [
    { no: 0, name: "SERVICE_UNSPECIFIED" },
    { no: 1, name: "SERVICE_CLUSTER" },
    { no: 2, name: "SERVICE_VOLUME" },
    { no: 3, name: "SERVICE_MACHINES" },
]);
/**
 * @generated from message api.v1.Health
 */
var Health = /** @class */ (function (_super) {
    __extends(Health, _super);
    function Health(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: repeated api.v1.HealthStatus services = 1;
         */
        _this.services = [];
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    Health.fromBinary = function (bytes, options) {
        return new Health().fromBinary(bytes, options);
    };
    Health.fromJson = function (jsonValue, options) {
        return new Health().fromJson(jsonValue, options);
    };
    Health.fromJsonString = function (jsonString, options) {
        return new Health().fromJsonString(jsonString, options);
    };
    Health.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(Health, a, b);
    };
    Health.runtime = protobuf_1.proto3;
    Health.typeName = "api.v1.Health";
    Health.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "services", kind: "message", T: HealthStatus, repeated: true },
    ]; });
    return Health;
}(protobuf_1.Message));
exports.Health = Health;
/**
 * @generated from message api.v1.HealthStatus
 */
var HealthStatus = /** @class */ (function (_super) {
    __extends(HealthStatus, _super);
    function HealthStatus(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: api.v1.Service name = 1;
         */
        _this.name = Service.UNSPECIFIED;
        /**
         * @generated from field: api.v1.ServiceStatus status = 2;
         */
        _this.status = ServiceStatus.UNSPECIFIED;
        /**
         * @generated from field: string message = 3;
         */
        _this.message = "";
        /**
         * @generated from field: map<string, api.v1.PartitionHealth> partitions = 4;
         */
        _this.partitions = {};
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    HealthStatus.fromBinary = function (bytes, options) {
        return new HealthStatus().fromBinary(bytes, options);
    };
    HealthStatus.fromJson = function (jsonValue, options) {
        return new HealthStatus().fromJson(jsonValue, options);
    };
    HealthStatus.fromJsonString = function (jsonString, options) {
        return new HealthStatus().fromJsonString(jsonString, options);
    };
    HealthStatus.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(HealthStatus, a, b);
    };
    HealthStatus.runtime = protobuf_1.proto3;
    HealthStatus.typeName = "api.v1.HealthStatus";
    HealthStatus.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "name", kind: "enum", T: protobuf_1.proto3.getEnumType(Service) },
        { no: 2, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(ServiceStatus) },
        { no: 3, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "partitions", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "message", T: PartitionHealth } },
    ]; });
    return HealthStatus;
}(protobuf_1.Message));
exports.HealthStatus = HealthStatus;
/**
 * @generated from message api.v1.PartitionHealth
 */
var PartitionHealth = /** @class */ (function (_super) {
    __extends(PartitionHealth, _super);
    function PartitionHealth(data) {
        var _this = _super.call(this) || this;
        /**
         * @generated from field: api.v1.ServiceStatus status = 1;
         */
        _this.status = ServiceStatus.UNSPECIFIED;
        /**
         * @generated from field: string message = 2;
         */
        _this.message = "";
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    PartitionHealth.fromBinary = function (bytes, options) {
        return new PartitionHealth().fromBinary(bytes, options);
    };
    PartitionHealth.fromJson = function (jsonValue, options) {
        return new PartitionHealth().fromJson(jsonValue, options);
    };
    PartitionHealth.fromJsonString = function (jsonString, options) {
        return new PartitionHealth().fromJsonString(jsonString, options);
    };
    PartitionHealth.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(PartitionHealth, a, b);
    };
    PartitionHealth.runtime = protobuf_1.proto3;
    PartitionHealth.typeName = "api.v1.PartitionHealth";
    PartitionHealth.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(ServiceStatus) },
        { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]; });
    return PartitionHealth;
}(protobuf_1.Message));
exports.PartitionHealth = PartitionHealth;
/**
 * @generated from message api.v1.HealthServiceGetRequest
 */
var HealthServiceGetRequest = /** @class */ (function (_super) {
    __extends(HealthServiceGetRequest, _super);
    function HealthServiceGetRequest(data) {
        var _this = _super.call(this) || this;
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    HealthServiceGetRequest.fromBinary = function (bytes, options) {
        return new HealthServiceGetRequest().fromBinary(bytes, options);
    };
    HealthServiceGetRequest.fromJson = function (jsonValue, options) {
        return new HealthServiceGetRequest().fromJson(jsonValue, options);
    };
    HealthServiceGetRequest.fromJsonString = function (jsonString, options) {
        return new HealthServiceGetRequest().fromJsonString(jsonString, options);
    };
    HealthServiceGetRequest.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(HealthServiceGetRequest, a, b);
    };
    HealthServiceGetRequest.runtime = protobuf_1.proto3;
    HealthServiceGetRequest.typeName = "api.v1.HealthServiceGetRequest";
    HealthServiceGetRequest.fields = protobuf_1.proto3.util.newFieldList(function () { return []; });
    return HealthServiceGetRequest;
}(protobuf_1.Message));
exports.HealthServiceGetRequest = HealthServiceGetRequest;
/**
 * @generated from message api.v1.HealthServiceGetResponse
 */
var HealthServiceGetResponse = /** @class */ (function (_super) {
    __extends(HealthServiceGetResponse, _super);
    function HealthServiceGetResponse(data) {
        var _this = _super.call(this) || this;
        protobuf_1.proto3.util.initPartial(data, _this);
        return _this;
    }
    HealthServiceGetResponse.fromBinary = function (bytes, options) {
        return new HealthServiceGetResponse().fromBinary(bytes, options);
    };
    HealthServiceGetResponse.fromJson = function (jsonValue, options) {
        return new HealthServiceGetResponse().fromJson(jsonValue, options);
    };
    HealthServiceGetResponse.fromJsonString = function (jsonString, options) {
        return new HealthServiceGetResponse().fromJsonString(jsonString, options);
    };
    HealthServiceGetResponse.equals = function (a, b) {
        return protobuf_1.proto3.util.equals(HealthServiceGetResponse, a, b);
    };
    HealthServiceGetResponse.runtime = protobuf_1.proto3;
    HealthServiceGetResponse.typeName = "api.v1.HealthServiceGetResponse";
    HealthServiceGetResponse.fields = protobuf_1.proto3.util.newFieldList(function () { return [
        { no: 1, name: "health", kind: "message", T: Health },
    ]; });
    return HealthServiceGetResponse;
}(protobuf_1.Message));
exports.HealthServiceGetResponse = HealthServiceGetResponse;
