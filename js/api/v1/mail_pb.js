// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file api/v1/mail.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, Struct } from "@bufbuild/protobuf";
/**
 * MailType specifies the different mail types we send
 *
 * @generated from enum api.v1.MailType
 */
export var MailType;
(function (MailType) {
    /**
     * MAIL_TYPE_UNSPECIFIED the mail is unspecified
     *
     * @generated from enum value: MAIL_TYPE_UNSPECIFIED = 0;
     */
    MailType[MailType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * MAIL_TYPE_ADMITTED mail send to users when they are admitted
     *
     * @generated from enum value: MAIL_TYPE_ADMITTED = 1;
     */
    MailType[MailType["ADMITTED"] = 1] = "ADMITTED";
    /**
     * MAIL_TYPE_COUPON_PERCENTAGE_USED_WARNING mail send to users when they used a certain amount of their coupon
     *
     * @generated from enum value: MAIL_TYPE_COUPON_PERCENTAGE_USED_WARNING = 2;
     */
    MailType[MailType["COUPON_PERCENTAGE_USED_WARNING"] = 2] = "COUPON_PERCENTAGE_USED_WARNING";
    /**
     * MAIL_TYPE_COUPON_COMPLETELY_USED_WARNING mail send to users when the used their coupon completely
     *
     * @generated from enum value: MAIL_TYPE_COUPON_COMPLETELY_USED_WARNING = 3;
     */
    MailType[MailType["COUPON_COMPLETELY_USED_WARNING"] = 3] = "COUPON_COMPLETELY_USED_WARNING";
    /**
     * MAIL_TYPE_PAYMENT_UPDATED mail send to user when he updates the payment information
     *
     * @generated from enum value: MAIL_TYPE_PAYMENT_UPDATED = 4;
     */
    MailType[MailType["PAYMENT_UPDATED"] = 4] = "PAYMENT_UPDATED";
    /**
     * MAIL_TYPE_ADMISSION_REQUESTED mail send to support if a user requests the admission
     *
     * @generated from enum value: MAIL_TYPE_ADMISSION_REQUESTED = 5;
     */
    MailType[MailType["ADMISSION_REQUESTED"] = 5] = "ADMISSION_REQUESTED";
    /**
     * MAIL_TYPE_WELCOME welcome mail if a user registers
     *
     * @generated from enum value: MAIL_TYPE_WELCOME = 6;
     */
    MailType[MailType["WELCOME"] = 6] = "WELCOME";
})(MailType || (MailType = {}));
// Retrieve enum metadata with: proto3.getEnumType(MailType)
proto3.util.setEnumType(MailType, "api.v1.MailType", [
    { no: 0, name: "MAIL_TYPE_UNSPECIFIED" },
    { no: 1, name: "MAIL_TYPE_ADMITTED" },
    { no: 2, name: "MAIL_TYPE_COUPON_PERCENTAGE_USED_WARNING" },
    { no: 3, name: "MAIL_TYPE_COUPON_COMPLETELY_USED_WARNING" },
    { no: 4, name: "MAIL_TYPE_PAYMENT_UPDATED" },
    { no: 5, name: "MAIL_TYPE_ADMISSION_REQUESTED" },
    { no: 6, name: "MAIL_TYPE_WELCOME" },
]);
/**
 * MailFunction specifies how a mail should be send
 *
 * @generated from enum api.v1.MailFunction
 */
export var MailFunction;
(function (MailFunction) {
    /**
     * MAIL_FUNCTION_UNSPECIFIED the function is unspecified
     *
     * @generated from enum value: MAIL_FUNCTION_UNSPECIFIED = 0;
     */
    MailFunction[MailFunction["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * MAIL_FUNCTION_SEND send a mail with a message from code
     *
     * @generated from enum value: MAIL_FUNCTION_SEND = 1;
     */
    MailFunction[MailFunction["SEND"] = 1] = "SEND";
    /**
     * MAIL_FUNCTION_SEND_TEMPLATE send a mail template
     *
     * @generated from enum value: MAIL_FUNCTION_SEND_TEMPLATE = 2;
     */
    MailFunction[MailFunction["SEND_TEMPLATE"] = 2] = "SEND_TEMPLATE";
    /**
     * MAIL_FUNCTION_NOTIFY send a mail to our support address
     *
     * @generated from enum value: MAIL_FUNCTION_NOTIFY = 3;
     */
    MailFunction[MailFunction["NOTIFY"] = 3] = "NOTIFY";
})(MailFunction || (MailFunction = {}));
// Retrieve enum metadata with: proto3.getEnumType(MailFunction)
proto3.util.setEnumType(MailFunction, "api.v1.MailFunction", [
    { no: 0, name: "MAIL_FUNCTION_UNSPECIFIED" },
    { no: 1, name: "MAIL_FUNCTION_SEND" },
    { no: 2, name: "MAIL_FUNCTION_SEND_TEMPLATE" },
    { no: 3, name: "MAIL_FUNCTION_NOTIFY" },
]);
/**
 * Email is an email we can send from the api-server
 *
 * @generated from message api.v1.Email
 */
export class Email extends Message {
    constructor(data) {
        super();
        /**
         * to is the destination email adress(es)
         *
         * @generated from field: repeated string to = 1;
         */
        this.to = [];
        /**
         * mail_type is what mail is send
         *
         * @generated from field: api.v1.MailType mail_type = 3;
         */
        this.mailType = MailType.UNSPECIFIED;
        /**
         * mail_function is how the mail is send
         *
         * @generated from field: api.v1.MailFunction mail_function = 6;
         */
        this.mailFunction = MailFunction.UNSPECIFIED;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Email().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Email().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Email().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(Email, a, b);
    }
}
Email.runtime = proto3;
Email.typeName = "api.v1.Email";
Email.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "mail_type", kind: "enum", T: proto3.getEnumType(MailType) },
    { no: 4, name: "values", kind: "message", T: Struct },
    { no: 5, name: "msg", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "mail_function", kind: "enum", T: proto3.getEnumType(MailFunction) },
]);
