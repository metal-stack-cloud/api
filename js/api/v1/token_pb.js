"use strict";
// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file api/v1/token.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenServiceRevokeResponse = exports.TokenServiceRevokeRequest = exports.TokenServiceListResponse = exports.TokenServiceListRequest = exports.TokenServiceCreateResponse = exports.TokenRole = exports.MethodPermission = exports.TokenServiceCreateRequest = exports.Token = exports.TokenType = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from enum api.v1.TokenType
 */
var TokenType;
(function (TokenType) {
    /**
     * @generated from enum value: TOKEN_TYPE_UNSPECIFIED = 0;
     */
    TokenType[TokenType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: TOKEN_TYPE_API = 1;
     */
    TokenType[TokenType["API"] = 1] = "API";
    /**
     * @generated from enum value: TOKEN_TYPE_CONSOLE = 2;
     */
    TokenType[TokenType["CONSOLE"] = 2] = "CONSOLE";
})(TokenType || (exports.TokenType = TokenType = {}));
// Retrieve enum metadata with: proto3.getEnumType(TokenType)
protobuf_1.proto3.util.setEnumType(TokenType, "api.v1.TokenType", [
    { no: 0, name: "TOKEN_TYPE_UNSPECIFIED" },
    { no: 1, name: "TOKEN_TYPE_API" },
    { no: 2, name: "TOKEN_TYPE_CONSOLE" },
]);
/**
 * @generated from message api.v1.Token
 */
class Token extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * uuid of the jwt token
         *
         * @generated from field: string uuid = 1;
         */
        this.uuid = "";
        /**
         * user_id who created this token
         *
         * @generated from field: string user_id = 2;
         */
        this.userId = "";
        /**
         * description is a user given description of this token.
         *
         * @generated from field: string description = 3;
         */
        this.description = "";
        /**
         * @generated from field: repeated api.v1.MethodPermission permissions = 4;
         */
        this.permissions = [];
        /**
         * @generated from field: repeated api.v1.TokenRole roles = 5;
         */
        this.roles = [];
        /**
         * @generated from field: api.v1.TokenType token_type = 8;
         */
        this.tokenType = TokenType.UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Token().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Token().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Token().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Token, a, b);
    }
}
exports.Token = Token;
Token.runtime = protobuf_1.proto3;
Token.typeName = "api.v1.Token";
Token.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "permissions", kind: "message", T: MethodPermission, repeated: true },
    { no: 5, name: "roles", kind: "message", T: TokenRole, repeated: true },
    { no: 6, name: "expires", kind: "message", T: protobuf_1.Timestamp },
    { no: 7, name: "issued_at", kind: "message", T: protobuf_1.Timestamp },
    { no: 8, name: "token_type", kind: "enum", T: protobuf_1.proto3.getEnumType(TokenType) },
]);
/**
 * @generated from message api.v1.TokenServiceCreateRequest
 */
class TokenServiceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string description = 1;
         */
        this.description = "";
        /**
         * @generated from field: repeated api.v1.MethodPermission permissions = 2;
         */
        this.permissions = [];
        /**
         * @generated from field: repeated api.v1.TokenRole roles = 3;
         */
        this.roles = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TokenServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TokenServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TokenServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TokenServiceCreateRequest, a, b);
    }
}
exports.TokenServiceCreateRequest = TokenServiceCreateRequest;
TokenServiceCreateRequest.runtime = protobuf_1.proto3;
TokenServiceCreateRequest.typeName = "api.v1.TokenServiceCreateRequest";
TokenServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "permissions", kind: "message", T: MethodPermission, repeated: true },
    { no: 3, name: "roles", kind: "message", T: TokenRole, repeated: true },
    { no: 4, name: "expires", kind: "message", T: protobuf_1.Duration },
]);
/**
 * @generated from message api.v1.MethodPermission
 */
class MethodPermission extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * subject maybe either the project or the organization
         * for which the methods should be allowed
         *
         * @generated from field: string subject = 1;
         */
        this.subject = "";
        /**
         * methods which should be accessible
         *
         * @generated from field: repeated string methods = 2;
         */
        this.methods = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MethodPermission().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MethodPermission().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MethodPermission().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MethodPermission, a, b);
    }
}
exports.MethodPermission = MethodPermission;
MethodPermission.runtime = protobuf_1.proto3;
MethodPermission.typeName = "api.v1.MethodPermission";
MethodPermission.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "methods", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
]);
/**
 * @generated from message api.v1.TokenRole
 */
class TokenRole extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * subject specifies the project or organization this role applies to
         *
         * @generated from field: string subject = 1;
         */
        this.subject = "";
        /**
         * role defines the string representation of a tenantrole, projectrole or a global adminrole
         *
         * @generated from field: string role = 2;
         */
        this.role = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TokenRole().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TokenRole().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TokenRole().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TokenRole, a, b);
    }
}
exports.TokenRole = TokenRole;
TokenRole.runtime = protobuf_1.proto3;
TokenRole.typeName = "api.v1.TokenRole";
TokenRole.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message api.v1.TokenServiceCreateResponse
 */
class TokenServiceCreateResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string secret = 2;
         */
        this.secret = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TokenServiceCreateResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TokenServiceCreateResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TokenServiceCreateResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TokenServiceCreateResponse, a, b);
    }
}
exports.TokenServiceCreateResponse = TokenServiceCreateResponse;
TokenServiceCreateResponse.runtime = protobuf_1.proto3;
TokenServiceCreateResponse.typeName = "api.v1.TokenServiceCreateResponse";
TokenServiceCreateResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "message", T: Token },
    { no: 2, name: "secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message api.v1.TokenServiceListRequest
 */
class TokenServiceListRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TokenServiceListRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TokenServiceListRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TokenServiceListRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TokenServiceListRequest, a, b);
    }
}
exports.TokenServiceListRequest = TokenServiceListRequest;
TokenServiceListRequest.runtime = protobuf_1.proto3;
TokenServiceListRequest.typeName = "api.v1.TokenServiceListRequest";
TokenServiceListRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message api.v1.TokenServiceListResponse
 */
class TokenServiceListResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated api.v1.Token tokens = 1;
         */
        this.tokens = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TokenServiceListResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TokenServiceListResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TokenServiceListResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TokenServiceListResponse, a, b);
    }
}
exports.TokenServiceListResponse = TokenServiceListResponse;
TokenServiceListResponse.runtime = protobuf_1.proto3;
TokenServiceListResponse.typeName = "api.v1.TokenServiceListResponse";
TokenServiceListResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "tokens", kind: "message", T: Token, repeated: true },
]);
/**
 * @generated from message api.v1.TokenServiceRevokeRequest
 */
class TokenServiceRevokeRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string uuid = 1;
         */
        this.uuid = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TokenServiceRevokeRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TokenServiceRevokeRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TokenServiceRevokeRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TokenServiceRevokeRequest, a, b);
    }
}
exports.TokenServiceRevokeRequest = TokenServiceRevokeRequest;
TokenServiceRevokeRequest.runtime = protobuf_1.proto3;
TokenServiceRevokeRequest.typeName = "api.v1.TokenServiceRevokeRequest";
TokenServiceRevokeRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message api.v1.TokenServiceRevokeResponse
 */
class TokenServiceRevokeResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TokenServiceRevokeResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TokenServiceRevokeResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TokenServiceRevokeResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TokenServiceRevokeResponse, a, b);
    }
}
exports.TokenServiceRevokeResponse = TokenServiceRevokeResponse;
TokenServiceRevokeResponse.runtime = protobuf_1.proto3;
TokenServiceRevokeResponse.typeName = "api.v1.TokenServiceRevokeResponse";
TokenServiceRevokeResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
