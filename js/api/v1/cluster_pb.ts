// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file api/v1/cluster.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_api_v1_common } from "./common_pb";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/v1/cluster.proto.
 */
export const file_api_v1_cluster: GenFile = /*@__PURE__*/
  fileDesc("ChRhcGkvdjEvY2x1c3Rlci5wcm90bxIGYXBpLnYxIvkDCgdDbHVzdGVyEhYKBHV1aWQYASABKAlCCLpIBXIDsAEBEhcKBG5hbWUYAiABKAlCCbpIBnIEEAIYDBIbCgdwcm9qZWN0GAMgASgJQgq6SAdyBRACGIABEhEKCXBhcnRpdGlvbhgEIAEoCRIqCgprdWJlcm5ldGVzGAUgASgLMhYuYXBpLnYxLkt1YmVybmV0ZXNTcGVjEh8KB3dvcmtlcnMYBiADKAsyDi5hcGkudjEuV29ya2VyEigKC21haW50ZW5hbmNlGAcgASgLMhMuYXBpLnYxLk1haW50ZW5hbmNlEg4KBnRlbmFudBgIIAEoCRIuCgpjcmVhdGVkX2F0GAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgp1cGRhdGVkX2F0GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgpkZWxldGVkX2F0GAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIlCgZzdGF0dXMYFCABKAsyFS5hcGkudjEuQ2x1c3RlclN0YXR1cxIUCgdwdXJwb3NlGBUgASgJSACIAQESLQoKbW9uaXRvcmluZxgWIAEoCzIZLmFwaS52MS5DbHVzdGVyTW9uaXRvcmluZ0IKCghfcHVycG9zZSI/Cg5LdWJlcm5ldGVzU3BlYxItCgd2ZXJzaW9uGAEgASgJQhy6SBlyFygIMhNbMC05XSsuWzAtOV0rLlswLTldIsEBCgtNYWludGVuYW5jZRIiChVrdWJlcm5ldGVzX2F1dG91cGRhdGUYASABKAhIAIgBARIkChdtYWNoaW5laW1hZ2VfYXV0b3VwZGF0ZRgCIAEoCEgBiAEBEjIKC3RpbWVfd2luZG93GAMgASgLMh0uYXBpLnYxLk1haW50ZW5hbmNlVGltZVdpbmRvd0IYChZfa3ViZXJuZXRlc19hdXRvdXBkYXRlQhoKGF9tYWNoaW5laW1hZ2VfYXV0b3VwZGF0ZSJzChVNYWludGVuYW5jZVRpbWVXaW5kb3cSGwoFYmVnaW4YASABKAsyDC5hcGkudjEuVGltZRI9CghkdXJhdGlvbhgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkIQukgNqgEKGgMIwHAyAwiQHCJICgRUaW1lEhUKBGhvdXIYASABKA1CB7pIBCoCGBgSFwoGbWludXRlGAIgASgNQge6SAQqAhg8EhAKCHRpbWV6b25lGAMgASgJIrQBCgZXb3JrZXISGAoEbmFtZRgBIAEoCUIKukgHcgUQAhiAARIgCgxtYWNoaW5lX3R5cGUYAiABKAlCCrpIB3IFEAIYgAESGAoHbWluc2l6ZRgDIAEoDUIHukgEKgIYIBIYCgdtYXhzaXplGAQgASgNQge6SAQqAhhAEhkKCG1heHN1cmdlGAUgASgNQge6SAQqAhhAEh8KDm1heHVuYXZhaWxhYmxlGAYgASgNQge6SAQqAhhAIpwCCgxXb3JrZXJVcGRhdGUSGAoEbmFtZRgBIAEoCUIKukgHcgUQAhiAARIlCgxtYWNoaW5lX3R5cGUYAiABKAlCCrpIB3IFEAIYgAFIAIgBARIdCgdtaW5zaXplGAMgASgNQge6SAQqAhggSAGIAQESHQoHbWF4c2l6ZRgEIAEoDUIHukgEKgIYQEgCiAEBEh4KCG1heHN1cmdlGAUgASgNQge6SAQqAhhASAOIAQESJAoObWF4dW5hdmFpbGFibGUYBiABKA1CB7pIBCoCGEBIBIgBAUIPCg1fbWFjaGluZV90eXBlQgoKCF9taW5zaXplQgoKCF9tYXhzaXplQgsKCV9tYXhzdXJnZUIRCg9fbWF4dW5hdmFpbGFibGUiTwoYQ2x1c3RlclNlcnZpY2VHZXRSZXF1ZXN0EhYKBHV1aWQYASABKAlCCLpIBXIDsAEBEhsKB3Byb2plY3QYAiABKAlCCrpIB3IFEAIYgAEifwocQ2x1c3RlclNlcnZpY2VPcGVyYXRlUmVxdWVzdBIWCgR1dWlkGAEgASgJQgi6SAVyA7ABARIbCgdwcm9qZWN0GAIgASgJQgq6SAdyBRACGIABEioKB29wZXJhdGUYAyABKA4yDy5hcGkudjEuT3BlcmF0ZUIIukgFggECEAEinQEKI0NsdXN0ZXJTZXJ2aWNlR2V0Q3JlZGVudGlhbHNSZXF1ZXN0EhYKBHV1aWQYASABKAlCCLpIBXIDsAEBEhsKB3Byb2plY3QYAiABKAlCCrpIB3IFEAIYgAESMgoKZXhwaXJhdGlvbhgEIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkgAiAEBQg0KC19leHBpcmF0aW9uIjgKGUNsdXN0ZXJTZXJ2aWNlTGlzdFJlcXVlc3QSGwoHcHJvamVjdBgCIAEoCUIKukgHcgUQAhiAASLfAQobQ2x1c3RlclNlcnZpY2VDcmVhdGVSZXF1ZXN0EhkKBG5hbWUYAiABKAlCC7pICHIGEAIYDGgBEhsKB3Byb2plY3QYAyABKAlCCrpIB3IFEAIYgAESEQoJcGFydGl0aW9uGAQgASgJEioKCmt1YmVybmV0ZXMYBiABKAsyFi5hcGkudjEuS3ViZXJuZXRlc1NwZWMSHwoHd29ya2VycxgHIAMoCzIOLmFwaS52MS5Xb3JrZXISKAoLbWFpbnRlbmFuY2UYCCABKAsyEy5hcGkudjEuTWFpbnRlbmFuY2Ui+AEKG0NsdXN0ZXJTZXJ2aWNlVXBkYXRlUmVxdWVzdBIWCgR1dWlkGAEgASgJQgi6SAVyA7ABARIbCgdwcm9qZWN0GAIgASgJQgq6SAdyBRACGIABEi8KCmt1YmVybmV0ZXMYAyABKAsyFi5hcGkudjEuS3ViZXJuZXRlc1NwZWNIAIgBARIlCgd3b3JrZXJzGAQgAygLMhQuYXBpLnYxLldvcmtlclVwZGF0ZRItCgttYWludGVuYW5jZRgFIAEoCzITLmFwaS52MS5NYWludGVuYW5jZUgBiAEBQg0KC19rdWJlcm5ldGVzQg4KDF9tYWludGVuYW5jZSJSChtDbHVzdGVyU2VydmljZURlbGV0ZVJlcXVlc3QSFgoEdXVpZBgBIAEoCUIIukgFcgOwAQESGwoHcHJvamVjdBgCIAEoCUIKukgHcgUQAhiAASJlCiBDbHVzdGVyU2VydmljZVdhdGNoU3RhdHVzUmVxdWVzdBIbCgR1dWlkGAEgASgJQgi6SAVyA7ABAUgAiAEBEhsKB3Byb2plY3QYAiABKAlCCrpIB3IFEAIYgAFCBwoFX3V1aWQiogIKDUNsdXN0ZXJTdGF0dXMSDAoEdXVpZBgBIAEoCRIQCghwcm9ncmVzcxgCIAEoDRINCgVzdGF0ZRgDIAEoCRIMCgR0eXBlGAQgASgJEhgKEGFwaV9zZXJ2ZXJfcmVhZHkYCiABKAkSGwoTY29udHJvbF9wbGFuZV9yZWFkeRgLIAEoCRITCgtub2Rlc19yZWFkeRgMIAEoCRIfChdzeXN0ZW1fY29tcG9uZW50c19yZWFkeRgNIAEoCRIzCgtsYXN0X2Vycm9ycxgOIAMoCzIeLmFwaS52MS5DbHVzdGVyU3RhdHVzTGFzdEVycm9yEjIKCmNvbmRpdGlvbnMYDyADKAsyHi5hcGkudjEuQ2x1c3RlclN0YXR1c0NvbmRpdGlvbiKFAQoWQ2x1c3RlclN0YXR1c0xhc3RFcnJvchITCgtkZXNjcmlwdGlvbhgBIAEoCRIUCgd0YXNrX2lkGAIgASgJSACIAQESNAoQbGFzdF91cGRhdGVfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCCgoIX3Rhc2tfaWQizgEKFkNsdXN0ZXJTdGF0dXNDb25kaXRpb24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSDgoGcmVhc29uGAMgASgJEhYKDnN0YXR1c19tZXNzYWdlGAQgASgJEjgKFGxhc3RfdHJhbnNpdGlvbl90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0ChBsYXN0X3VwZGF0ZV90aW1lGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJJChFDbHVzdGVyTW9uaXRvcmluZxIQCgh1c2VybmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIQCghlbmRwb2ludBgDIAEoCSJAChxDbHVzdGVyU2VydmljZUNyZWF0ZVJlc3BvbnNlEiAKB2NsdXN0ZXIYASABKAsyDy5hcGkudjEuQ2x1c3RlciI9ChlDbHVzdGVyU2VydmljZUdldFJlc3BvbnNlEiAKB2NsdXN0ZXIYASABKAsyDy5hcGkudjEuQ2x1c3RlciI6CiRDbHVzdGVyU2VydmljZUdldENyZWRlbnRpYWxzUmVzcG9uc2USEgoKa3ViZWNvbmZpZxgBIAEoCSJAChxDbHVzdGVyU2VydmljZURlbGV0ZVJlc3BvbnNlEiAKB2NsdXN0ZXIYASABKAsyDy5hcGkudjEuQ2x1c3RlciJAChxDbHVzdGVyU2VydmljZVVwZGF0ZVJlc3BvbnNlEiAKB2NsdXN0ZXIYASABKAsyDy5hcGkudjEuQ2x1c3RlciI/ChpDbHVzdGVyU2VydmljZUxpc3RSZXNwb25zZRIhCghjbHVzdGVycxgBIAMoCzIPLmFwaS52MS5DbHVzdGVyIkoKIUNsdXN0ZXJTZXJ2aWNlV2F0Y2hTdGF0dXNSZXNwb25zZRIlCgZzdGF0dXMYASABKAsyFS5hcGkudjEuQ2x1c3RlclN0YXR1cyJBCh1DbHVzdGVyU2VydmljZU9wZXJhdGVSZXNwb25zZRIgCgdjbHVzdGVyGAEgASgLMg8uYXBpLnYxLkNsdXN0ZXIqYgoHT3BlcmF0ZRIXChNPUEVSQVRFX1VOU1BFQ0lGSUVEEAASFQoRT1BFUkFURV9SRUNPTkNJTEUQARIUChBPUEVSQVRFX01BSU5UQUlOEAISEQoNT1BFUkFURV9SRVRSWRADMqwGCg5DbHVzdGVyU2VydmljZRJfCgZDcmVhdGUSIy5hcGkudjEuQ2x1c3RlclNlcnZpY2VDcmVhdGVSZXF1ZXN0GiQuYXBpLnYxLkNsdXN0ZXJTZXJ2aWNlQ3JlYXRlUmVzcG9uc2UiCsrzGAIBAuDzGAESVwoDR2V0EiAuYXBpLnYxLkNsdXN0ZXJTZXJ2aWNlR2V0UmVxdWVzdBohLmFwaS52MS5DbHVzdGVyU2VydmljZUdldFJlc3BvbnNlIgvK8xgDAQID6PMYAhJaCgRMaXN0EiEuYXBpLnYxLkNsdXN0ZXJTZXJ2aWNlTGlzdFJlcXVlc3QaIi5hcGkudjEuQ2x1c3RlclNlcnZpY2VMaXN0UmVzcG9uc2UiC8rzGAMBAgPo8xgCEnEKC1dhdGNoU3RhdHVzEiguYXBpLnYxLkNsdXN0ZXJTZXJ2aWNlV2F0Y2hTdGF0dXNSZXF1ZXN0GikuYXBpLnYxLkNsdXN0ZXJTZXJ2aWNlV2F0Y2hTdGF0dXNSZXNwb25zZSILyvMYAwECA+jzGAIwARJbCgZEZWxldGUSIy5hcGkudjEuQ2x1c3RlclNlcnZpY2VEZWxldGVSZXF1ZXN0GiQuYXBpLnYxLkNsdXN0ZXJTZXJ2aWNlRGVsZXRlUmVzcG9uc2UiBsrzGAIBAhJfCgZVcGRhdGUSIy5hcGkudjEuQ2x1c3RlclNlcnZpY2VVcGRhdGVSZXF1ZXN0GiQuYXBpLnYxLkNsdXN0ZXJTZXJ2aWNlVXBkYXRlUmVzcG9uc2UiCsrzGAIBAuDzGAEScwoOR2V0Q3JlZGVudGlhbHMSKy5hcGkudjEuQ2x1c3RlclNlcnZpY2VHZXRDcmVkZW50aWFsc1JlcXVlc3QaLC5hcGkudjEuQ2x1c3RlclNlcnZpY2VHZXRDcmVkZW50aWFsc1Jlc3BvbnNlIgbK8xgCAQISXgoHT3BlcmF0ZRIkLmFwaS52MS5DbHVzdGVyU2VydmljZU9wZXJhdGVSZXF1ZXN0GiUuYXBpLnYxLkNsdXN0ZXJTZXJ2aWNlT3BlcmF0ZVJlc3BvbnNlIgbK8xgCAQJChQEKCmNvbS5hcGkudjFCDENsdXN0ZXJQcm90b1ABWjBnaXRodWIuY29tL21ldGFsLXN0YWNrLWNsb3VkL2FwaS9nby9hcGkvdjE7YXBpdjGiAgNBWFiqAgZBcGkuVjHKAgZBcGlcVjHiAhJBcGlcVjFcR1BCTWV0YWRhdGHqAgdBcGk6OlYxYgZwcm90bzM", [file_api_v1_common, file_buf_validate_validate, file_google_protobuf_duration, file_google_protobuf_timestamp]);

/**
 * Cluster describes a kubernetes cluster
 *
 * @generated from message api.v1.Cluster
 */
export type Cluster = Message<"api.v1.Cluster"> & {
  /**
   * Uuid of the cluster
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Name of the cluster
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Project where this cluster belongs to
   *
   * @generated from field: string project = 3;
   */
  project: string;

  /**
   * Partition where this cluster was created
   *
   * @generated from field: string partition = 4;
   */
  partition: string;

  /**
   * Kubernetes defines the kubernetes specifications of this cluster
   *
   * @generated from field: api.v1.KubernetesSpec kubernetes = 5;
   */
  kubernetes?: KubernetesSpec;

  /**
   * Workers defines the list of worker groups with their specification
   *
   * @generated from field: repeated api.v1.Worker workers = 6;
   */
  workers: Worker[];

  /**
   * Maintenance defines when automated actions on this cluster should be scheduled
   *
   * @generated from field: api.v1.Maintenance maintenance = 7;
   */
  maintenance?: Maintenance;

  /**
   * Tenant where this cluster belongs to
   *
   * @generated from field: string tenant = 8;
   */
  tenant: string;

  /**
   * CreatedAt defines the date when this cluster was created
   *
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * UpdatedAt defines the date when this cluster was updated
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  /**
   * DeletedAt defines the date when this cluster was deleted
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 12;
   */
  deletedAt?: Timestamp;

  /**
   * Status of this cluster
   *
   * @generated from field: api.v1.ClusterStatus status = 20;
   */
  status?: ClusterStatus;

  /**
   * Purpose of this cluster, can be for example production, development or evaluation
   *
   * @generated from field: optional string purpose = 21;
   */
  purpose?: string;

  /**
   * Monitoring details for this cluster
   *
   * @generated from field: api.v1.ClusterMonitoring monitoring = 22;
   */
  monitoring?: ClusterMonitoring;
};

/**
 * Describes the message api.v1.Cluster.
 * Use `create(ClusterSchema)` to create a new message.
 */
export const ClusterSchema: GenMessage<Cluster> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 0);

/**
 * KubernetesSpec details of kubernetes this cluster
 *
 * @generated from message api.v1.KubernetesSpec
 */
export type KubernetesSpec = Message<"api.v1.KubernetesSpec"> & {
  /**
   * Version of kubernetes
   *
   * @generated from field: string version = 1;
   */
  version: string;
};

/**
 * Describes the message api.v1.KubernetesSpec.
 * Use `create(KubernetesSpecSchema)` to create a new message.
 */
export const KubernetesSpecSchema: GenMessage<KubernetesSpec> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 1);

/**
 * Maintenance defines when automatic actions should be scheduled on this cluster
 *
 * @generated from message api.v1.Maintenance
 */
export type Maintenance = Message<"api.v1.Maintenance"> & {
  /**
   * KubernetesAutoupdate if set to true, kubernetes patch version updates will be done in the maintenance window
   *
   * @generated from field: optional bool kubernetes_autoupdate = 1;
   */
  kubernetesAutoupdate?: boolean;

  /**
   * MachineimageAutoupdate if set to true, machine images will be automatically update by rolling nodes in the maintenance window
   *
   * @generated from field: optional bool machineimage_autoupdate = 2;
   */
  machineimageAutoupdate?: boolean;

  /**
   * TimeWindow defines the start time and duration during which automatic actions will be performed
   *
   * @generated from field: api.v1.MaintenanceTimeWindow time_window = 3;
   */
  timeWindow?: MaintenanceTimeWindow;
};

/**
 * Describes the message api.v1.Maintenance.
 * Use `create(MaintenanceSchema)` to create a new message.
 */
export const MaintenanceSchema: GenMessage<Maintenance> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 2);

/**
 * MaintenanceTimeWindow defines the start time and duration during which automatic actions will be performed
 *
 * @generated from message api.v1.MaintenanceTimeWindow
 */
export type MaintenanceTimeWindow = Message<"api.v1.MaintenanceTimeWindow"> & {
  /**
   * Begin of the MaintenanceTimeWindow
   *
   * @generated from field: api.v1.Time begin = 1;
   */
  begin?: Time;

  /**
   * Duration of the MaintenanceTimeWindow
   *
   * @generated from field: google.protobuf.Duration duration = 2;
   */
  duration?: Duration;
};

/**
 * Describes the message api.v1.MaintenanceTimeWindow.
 * Use `create(MaintenanceTimeWindowSchema)` to create a new message.
 */
export const MaintenanceTimeWindowSchema: GenMessage<MaintenanceTimeWindow> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 3);

/**
 * Time of day
 *
 * @generated from message api.v1.Time
 */
export type Time = Message<"api.v1.Time"> & {
  /**
   * hour begin of the maintenance window, specified in 24 hour format.
   *
   * @generated from field: uint32 hour = 1;
   */
  hour: number;

  /**
   * hour:minute begin of the maintenance window.
   *
   * @generated from field: uint32 minute = 2;
   */
  minute: number;

  /**
   * timezone specifies for which region in the world the given hour:minute should apply.
   *
   * @generated from field: string timezone = 3;
   */
  timezone: string;
};

/**
 * Describes the message api.v1.Time.
 * Use `create(TimeSchema)` to create a new message.
 */
export const TimeSchema: GenMessage<Time> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 4);

/**
 * Worker defines a set of worker nodes with identical properties
 *
 * @generated from message api.v1.Worker
 */
export type Worker = Message<"api.v1.Worker"> & {
  /**
   * Name of this worker group
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * MachineType of machines which should be used for the worker nodes in this group
   *
   * @generated from field: string machine_type = 2;
   */
  machineType: string;

  /**
   * Minsize defines the minimum amount of machines present in this worker group
   *
   * @generated from field: uint32 minsize = 3;
   */
  minsize: number;

  /**
   * Maxsize defines the maximum amount of machines present in this worker group
   *
   * @generated from field: uint32 maxsize = 4;
   */
  maxsize: number;

  /**
   * Maxsurge defines the maximum amount of machines which are spun up in this worker group during a rolling upgrade
   *
   * @generated from field: uint32 maxsurge = 5;
   */
  maxsurge: number;

  /**
   * Maxunavailable defines the maximum amount of not available machines in this worker group during a rolling upgrade
   *
   * @generated from field: uint32 maxunavailable = 6;
   */
  maxunavailable: number;
};

/**
 * Describes the message api.v1.Worker.
 * Use `create(WorkerSchema)` to create a new message.
 */
export const WorkerSchema: GenMessage<Worker> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 5);

/**
 * WorkerUpdate is used to update a Worker group
 *
 * @generated from message api.v1.WorkerUpdate
 */
export type WorkerUpdate = Message<"api.v1.WorkerUpdate"> & {
  /**
   * Name of the worker group to update
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * MachineType to change in this worker group
   *
   * @generated from field: optional string machine_type = 2;
   */
  machineType?: string;

  /**
   * Minsize defines the minimum amount of machines present in this worker group
   *
   * @generated from field: optional uint32 minsize = 3;
   */
  minsize?: number;

  /**
   * Maxsize defines the maximum amount of machines present in this worker group
   *
   * @generated from field: optional uint32 maxsize = 4;
   */
  maxsize?: number;

  /**
   * Maxsurge defines the maximum amount of machines which are spun up in this worker group during a rolling upgrade
   *
   * @generated from field: optional uint32 maxsurge = 5;
   */
  maxsurge?: number;

  /**
   * Maxunavailable defines the maximum amount of not available machines in this worker group during a rolling upgrade
   *
   * @generated from field: optional uint32 maxunavailable = 6;
   */
  maxunavailable?: number;
};

/**
 * Describes the message api.v1.WorkerUpdate.
 * Use `create(WorkerUpdateSchema)` to create a new message.
 */
export const WorkerUpdateSchema: GenMessage<WorkerUpdate> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 6);

/**
 * ClusterServiceGetRequest is the request payload for a cluster get request
 *
 * @generated from message api.v1.ClusterServiceGetRequest
 */
export type ClusterServiceGetRequest = Message<"api.v1.ClusterServiceGetRequest"> & {
  /**
   * Uuid of the cluster
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Project of the cluster
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message api.v1.ClusterServiceGetRequest.
 * Use `create(ClusterServiceGetRequestSchema)` to create a new message.
 */
export const ClusterServiceGetRequestSchema: GenMessage<ClusterServiceGetRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 7);

/**
 * ClusterServiceOperateRequest is the request payload for the cluster operate request
 *
 * @generated from message api.v1.ClusterServiceOperateRequest
 */
export type ClusterServiceOperateRequest = Message<"api.v1.ClusterServiceOperateRequest"> & {
  /**
   * Uuid of the cluster
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Project of the cluster
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Operate is the operation which should be performed
   *
   * @generated from field: api.v1.Operate operate = 3;
   */
  operate: Operate;
};

/**
 * Describes the message api.v1.ClusterServiceOperateRequest.
 * Use `create(ClusterServiceOperateRequestSchema)` to create a new message.
 */
export const ClusterServiceOperateRequestSchema: GenMessage<ClusterServiceOperateRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 8);

/**
 * ClusterServiceGetRequest is the request payload for a cluster get request
 *
 * @generated from message api.v1.ClusterServiceGetCredentialsRequest
 */
export type ClusterServiceGetCredentialsRequest = Message<"api.v1.ClusterServiceGetCredentialsRequest"> & {
  /**
   * Uuid of the cluster
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Project of the cluster
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Expiration defines the duration after which the requested kubernetes access token can not be used anymore
   *
   * @generated from field: optional google.protobuf.Duration expiration = 4;
   */
  expiration?: Duration;
};

/**
 * Describes the message api.v1.ClusterServiceGetCredentialsRequest.
 * Use `create(ClusterServiceGetCredentialsRequestSchema)` to create a new message.
 */
export const ClusterServiceGetCredentialsRequestSchema: GenMessage<ClusterServiceGetCredentialsRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 9);

/**
 * ClusterServiceListRequest is the request payload for a cluster list request
 *
 * @generated from message api.v1.ClusterServiceListRequest
 */
export type ClusterServiceListRequest = Message<"api.v1.ClusterServiceListRequest"> & {
  /**
   * Project of the cluster
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message api.v1.ClusterServiceListRequest.
 * Use `create(ClusterServiceListRequestSchema)` to create a new message.
 */
export const ClusterServiceListRequestSchema: GenMessage<ClusterServiceListRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 10);

/**
 * ClusterServiceCreateRequest is the request payload for a cluster create request
 *
 * @generated from message api.v1.ClusterServiceCreateRequest
 */
export type ClusterServiceCreateRequest = Message<"api.v1.ClusterServiceCreateRequest"> & {
  /**
   * Name of the cluster to create
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Project of the cluster
   *
   * @generated from field: string project = 3;
   */
  project: string;

  /**
   * Partition of the cluster
   *
   * @generated from field: string partition = 4;
   */
  partition: string;

  /**
   * Kubernetes specification of the cluster
   *
   * @generated from field: api.v1.KubernetesSpec kubernetes = 6;
   */
  kubernetes?: KubernetesSpec;

  /**
   * Worker specification of the cluster
   *
   * @generated from field: repeated api.v1.Worker workers = 7;
   */
  workers: Worker[];

  /**
   * Maintenance specification of the cluster
   *
   * @generated from field: api.v1.Maintenance maintenance = 8;
   */
  maintenance?: Maintenance;
};

/**
 * Describes the message api.v1.ClusterServiceCreateRequest.
 * Use `create(ClusterServiceCreateRequestSchema)` to create a new message.
 */
export const ClusterServiceCreateRequestSchema: GenMessage<ClusterServiceCreateRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 11);

/**
 * ClusterServiceUpdateRequest is the request payload for a cluster update request
 *
 * @generated from message api.v1.ClusterServiceUpdateRequest
 */
export type ClusterServiceUpdateRequest = Message<"api.v1.ClusterServiceUpdateRequest"> & {
  /**
   * Uuid of the cluster
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Project of the cluster
   *
   * @generated from field: string project = 2;
   */
  project: string;

  /**
   * Kubernetes specification of the cluster
   *
   * @generated from field: optional api.v1.KubernetesSpec kubernetes = 3;
   */
  kubernetes?: KubernetesSpec;

  /**
   * Worker specification of the cluster
   *
   * @generated from field: repeated api.v1.WorkerUpdate workers = 4;
   */
  workers: WorkerUpdate[];

  /**
   * Maintenance specification of the cluster
   *
   * @generated from field: optional api.v1.Maintenance maintenance = 5;
   */
  maintenance?: Maintenance;
};

/**
 * Describes the message api.v1.ClusterServiceUpdateRequest.
 * Use `create(ClusterServiceUpdateRequestSchema)` to create a new message.
 */
export const ClusterServiceUpdateRequestSchema: GenMessage<ClusterServiceUpdateRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 12);

/**
 * ClusterServiceDeleteRequest is the request payload for a cluster delete request
 *
 * @generated from message api.v1.ClusterServiceDeleteRequest
 */
export type ClusterServiceDeleteRequest = Message<"api.v1.ClusterServiceDeleteRequest"> & {
  /**
   * Uuid of the cluster
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Project of the cluster
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message api.v1.ClusterServiceDeleteRequest.
 * Use `create(ClusterServiceDeleteRequestSchema)` to create a new message.
 */
export const ClusterServiceDeleteRequestSchema: GenMessage<ClusterServiceDeleteRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 13);

/**
 * ClusterServiceWatchStatusRequest is the request payload for a cluster watch status request
 *
 * @generated from message api.v1.ClusterServiceWatchStatusRequest
 */
export type ClusterServiceWatchStatusRequest = Message<"api.v1.ClusterServiceWatchStatusRequest"> & {
  /**
   * Uuid of the cluster
   *
   * @generated from field: optional string uuid = 1;
   */
  uuid?: string;

  /**
   * Project of the cluster
   *
   * @generated from field: string project = 2;
   */
  project: string;
};

/**
 * Describes the message api.v1.ClusterServiceWatchStatusRequest.
 * Use `create(ClusterServiceWatchStatusRequestSchema)` to create a new message.
 */
export const ClusterServiceWatchStatusRequestSchema: GenMessage<ClusterServiceWatchStatusRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 14);

/**
 * ClusterStatus
 *
 * @generated from message api.v1.ClusterStatus
 */
export type ClusterStatus = Message<"api.v1.ClusterStatus"> & {
  /**
   * Uuid of the cluster
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Progress of the cluster reconciliation
   *
   * @generated from field: uint32 progress = 2;
   */
  progress: number;

  /**
   * State of the cluster
   *
   * @generated from field: string state = 3;
   */
  state: string;

  /**
   * Type of the cluster status
   *
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * ApiServerReady represents the ready state of the kubernetes api server
   *
   * @generated from field: string api_server_ready = 10;
   */
  apiServerReady: string;

  /**
   * ControlPlaneReady represents the ready state of the control plane components
   *
   * @generated from field: string control_plane_ready = 11;
   */
  controlPlaneReady: string;

  /**
   * NodesReady represents the ready state of the worker nodes
   *
   * @generated from field: string nodes_ready = 12;
   */
  nodesReady: string;

  /**
   * SystemComponentsReady represents the ready state of the system components
   *
   * @generated from field: string system_components_ready = 13;
   */
  systemComponentsReady: string;

  /**
   * LastErrors is a list of the last known errors occurred during the cluster reconciliation
   *
   * @generated from field: repeated api.v1.ClusterStatusLastError last_errors = 14;
   */
  lastErrors: ClusterStatusLastError[];

  /**
   * ClusterStatusConditions is a list of status conditions of the cluster
   *
   * @generated from field: repeated api.v1.ClusterStatusCondition conditions = 15;
   */
  conditions: ClusterStatusCondition[];
};

/**
 * Describes the message api.v1.ClusterStatus.
 * Use `create(ClusterStatusSchema)` to create a new message.
 */
export const ClusterStatusSchema: GenMessage<ClusterStatus> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 15);

/**
 * ClusterStatusLastError is the last known cluster status error
 *
 * @generated from message api.v1.ClusterStatusLastError
 */
export type ClusterStatusLastError = Message<"api.v1.ClusterStatusLastError"> & {
  /**
   * Description a human readable message indicating details about the last error
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * TaskId ID of the task which caused this last error
   *
   * @generated from field: optional string task_id = 2;
   */
  taskId?: string;

  /**
   * LastUpdateTime last time the error was reported
   *
   * @generated from field: google.protobuf.Timestamp last_update_time = 4;
   */
  lastUpdateTime?: Timestamp;
};

/**
 * Describes the message api.v1.ClusterStatusLastError.
 * Use `create(ClusterStatusLastErrorSchema)` to create a new message.
 */
export const ClusterStatusLastErrorSchema: GenMessage<ClusterStatusLastError> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 16);

/**
 * ClusterStatusCondition contains status conditions of a cluster
 *
 * @generated from message api.v1.ClusterStatusCondition
 */
export type ClusterStatusCondition = Message<"api.v1.ClusterStatusCondition"> & {
  /**
   * Type is the type of the condition
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Status is the status of the condition
   *
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * Reason describes the reason for the condition's last transition
   *
   * @generated from field: string reason = 3;
   */
  reason: string;

  /**
   * StatusMessage is a human readable message indicating details about the transition
   *
   * @generated from field: string status_message = 4;
   */
  statusMessage: string;

  /**
   * LastUpdateTime last time the condition transitioned
   *
   * @generated from field: google.protobuf.Timestamp last_transition_time = 5;
   */
  lastTransitionTime?: Timestamp;

  /**
   * LastUpdateTime last time the condition was updated
   *
   * @generated from field: google.protobuf.Timestamp last_update_time = 6;
   */
  lastUpdateTime?: Timestamp;
};

/**
 * Describes the message api.v1.ClusterStatusCondition.
 * Use `create(ClusterStatusConditionSchema)` to create a new message.
 */
export const ClusterStatusConditionSchema: GenMessage<ClusterStatusCondition> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 17);

/**
 * ClusterMonitoring contains details howto access the cluster monitoring
 *
 * @generated from message api.v1.ClusterMonitoring
 */
export type ClusterMonitoring = Message<"api.v1.ClusterMonitoring"> & {
  /**
   * Username to access the monitoring
   *
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * Password to access the monitoring
   *
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * Endpoint is the url to access the monitoring
   *
   * @generated from field: string endpoint = 3;
   */
  endpoint: string;
};

/**
 * Describes the message api.v1.ClusterMonitoring.
 * Use `create(ClusterMonitoringSchema)` to create a new message.
 */
export const ClusterMonitoringSchema: GenMessage<ClusterMonitoring> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 18);

/**
 * ClusterServiceCreateResponse is the response payload of a cluster create request
 *
 * @generated from message api.v1.ClusterServiceCreateResponse
 */
export type ClusterServiceCreateResponse = Message<"api.v1.ClusterServiceCreateResponse"> & {
  /**
   * Cluster is the cluster
   *
   * @generated from field: api.v1.Cluster cluster = 1;
   */
  cluster?: Cluster;
};

/**
 * Describes the message api.v1.ClusterServiceCreateResponse.
 * Use `create(ClusterServiceCreateResponseSchema)` to create a new message.
 */
export const ClusterServiceCreateResponseSchema: GenMessage<ClusterServiceCreateResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 19);

/**
 * ClusterServiceGetResponse is the response payload of a cluster get request
 *
 * @generated from message api.v1.ClusterServiceGetResponse
 */
export type ClusterServiceGetResponse = Message<"api.v1.ClusterServiceGetResponse"> & {
  /**
   * Cluster is the cluster
   *
   * @generated from field: api.v1.Cluster cluster = 1;
   */
  cluster?: Cluster;
};

/**
 * Describes the message api.v1.ClusterServiceGetResponse.
 * Use `create(ClusterServiceGetResponseSchema)` to create a new message.
 */
export const ClusterServiceGetResponseSchema: GenMessage<ClusterServiceGetResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 20);

/**
 * ClusterServiceGetCredentialsResponse is the response payload of a cluster get credentials request
 *
 * @generated from message api.v1.ClusterServiceGetCredentialsResponse
 */
export type ClusterServiceGetCredentialsResponse = Message<"api.v1.ClusterServiceGetCredentialsResponse"> & {
  /**
   * Cluster is the cluster
   *
   * @generated from field: string kubeconfig = 1;
   */
  kubeconfig: string;
};

/**
 * Describes the message api.v1.ClusterServiceGetCredentialsResponse.
 * Use `create(ClusterServiceGetCredentialsResponseSchema)` to create a new message.
 */
export const ClusterServiceGetCredentialsResponseSchema: GenMessage<ClusterServiceGetCredentialsResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 21);

/**
 * ClusterServiceDeleteResponse is the response payload of a cluster delete request
 *
 * @generated from message api.v1.ClusterServiceDeleteResponse
 */
export type ClusterServiceDeleteResponse = Message<"api.v1.ClusterServiceDeleteResponse"> & {
  /**
   * Cluster is the cluster
   *
   * @generated from field: api.v1.Cluster cluster = 1;
   */
  cluster?: Cluster;
};

/**
 * Describes the message api.v1.ClusterServiceDeleteResponse.
 * Use `create(ClusterServiceDeleteResponseSchema)` to create a new message.
 */
export const ClusterServiceDeleteResponseSchema: GenMessage<ClusterServiceDeleteResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 22);

/**
 * ClusterServiceUpdateResponse is the response payload of a cluster update request
 *
 * @generated from message api.v1.ClusterServiceUpdateResponse
 */
export type ClusterServiceUpdateResponse = Message<"api.v1.ClusterServiceUpdateResponse"> & {
  /**
   * Cluster is the cluster
   *
   * @generated from field: api.v1.Cluster cluster = 1;
   */
  cluster?: Cluster;
};

/**
 * Describes the message api.v1.ClusterServiceUpdateResponse.
 * Use `create(ClusterServiceUpdateResponseSchema)` to create a new message.
 */
export const ClusterServiceUpdateResponseSchema: GenMessage<ClusterServiceUpdateResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 23);

/**
 * ClusterServiceListResponse is the response payload of a cluster list request
 *
 * @generated from message api.v1.ClusterServiceListResponse
 */
export type ClusterServiceListResponse = Message<"api.v1.ClusterServiceListResponse"> & {
  /**
   * Clusters a list of clusters
   *
   * @generated from field: repeated api.v1.Cluster clusters = 1;
   */
  clusters: Cluster[];
};

/**
 * Describes the message api.v1.ClusterServiceListResponse.
 * Use `create(ClusterServiceListResponseSchema)` to create a new message.
 */
export const ClusterServiceListResponseSchema: GenMessage<ClusterServiceListResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 24);

/**
 * ClusterServiceWatchStatusResponse is the response payload of a cluster watch status request
 *
 * @generated from message api.v1.ClusterServiceWatchStatusResponse
 */
export type ClusterServiceWatchStatusResponse = Message<"api.v1.ClusterServiceWatchStatusResponse"> & {
  /**
   * Status the cluster status
   *
   * @generated from field: api.v1.ClusterStatus status = 1;
   */
  status?: ClusterStatus;
};

/**
 * Describes the message api.v1.ClusterServiceWatchStatusResponse.
 * Use `create(ClusterServiceWatchStatusResponseSchema)` to create a new message.
 */
export const ClusterServiceWatchStatusResponseSchema: GenMessage<ClusterServiceWatchStatusResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 25);

/**
 * ClusterServiceOperateResponse is the response payload for the cluster operate request
 *
 * @generated from message api.v1.ClusterServiceOperateResponse
 */
export type ClusterServiceOperateResponse = Message<"api.v1.ClusterServiceOperateResponse"> & {
  /**
   * Cluster is the cluster
   *
   * @generated from field: api.v1.Cluster cluster = 1;
   */
  cluster?: Cluster;
};

/**
 * Describes the message api.v1.ClusterServiceOperateResponse.
 * Use `create(ClusterServiceOperateResponseSchema)` to create a new message.
 */
export const ClusterServiceOperateResponseSchema: GenMessage<ClusterServiceOperateResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_cluster, 26);

/**
 * Operate defines the types of reconciliation to be triggered
 *
 * @generated from enum api.v1.Operate
 */
export enum Operate {
  /**
   * OPERATE_UNSPECIFIED is not specified
   *
   * @generated from enum value: OPERATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * OPERATE_RECONCILE reconcile the cluster
   *
   * @generated from enum value: OPERATE_RECONCILE = 1;
   */
  RECONCILE = 1,

  /**
   * OPERATE_MAINTAIN maintain the cluster
   *
   * @generated from enum value: OPERATE_MAINTAIN = 2;
   */
  MAINTAIN = 2,

  /**
   * OPERATE_RETRY retry the reconciliation of the cluster
   *
   * @generated from enum value: OPERATE_RETRY = 3;
   */
  RETRY = 3,
}

/**
 * Describes the enum api.v1.Operate.
 */
export const OperateSchema: GenEnum<Operate> = /*@__PURE__*/
  enumDesc(file_api_v1_cluster, 0);

/**
 * ClusterService serves kubernetes cluster related functions
 *
 * @generated from service api.v1.ClusterService
 */
export const ClusterService: GenService<{
  /**
   * Create a cluster
   *
   * @generated from rpc api.v1.ClusterService.Create
   */
  create: {
    methodKind: "unary";
    input: typeof ClusterServiceCreateRequestSchema;
    output: typeof ClusterServiceCreateResponseSchema;
  },
  /**
   * Get a cluster
   *
   * @generated from rpc api.v1.ClusterService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof ClusterServiceGetRequestSchema;
    output: typeof ClusterServiceGetResponseSchema;
  },
  /**
   * List clusters
   *
   * @generated from rpc api.v1.ClusterService.List
   */
  list: {
    methodKind: "unary";
    input: typeof ClusterServiceListRequestSchema;
    output: typeof ClusterServiceListResponseSchema;
  },
  /**
   * WatchStatus of a cluster
   *
   * @generated from rpc api.v1.ClusterService.WatchStatus
   */
  watchStatus: {
    methodKind: "server_streaming";
    input: typeof ClusterServiceWatchStatusRequestSchema;
    output: typeof ClusterServiceWatchStatusResponseSchema;
  },
  /**
   * Delete a cluster
   *
   * @generated from rpc api.v1.ClusterService.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof ClusterServiceDeleteRequestSchema;
    output: typeof ClusterServiceDeleteResponseSchema;
  },
  /**
   * Update a cluster
   *
   * @generated from rpc api.v1.ClusterService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof ClusterServiceUpdateRequestSchema;
    output: typeof ClusterServiceUpdateResponseSchema;
  },
  /**
   * GetCredentials of a cluster
   *
   * @generated from rpc api.v1.ClusterService.GetCredentials
   */
  getCredentials: {
    methodKind: "unary";
    input: typeof ClusterServiceGetCredentialsRequestSchema;
    output: typeof ClusterServiceGetCredentialsResponseSchema;
  },
  /**
   * Operate on a cluster
   *
   * @generated from rpc api.v1.ClusterService.Operate
   */
  operate: {
    methodKind: "unary";
    input: typeof ClusterServiceOperateRequestSchema;
    output: typeof ClusterServiceOperateResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_cluster, 0);

