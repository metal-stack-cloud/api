// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file admin/v1/payment.proto (package admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Coupon, PaymentCustomer } from "../../api/v1/payment_pb.js";
/**
 * PaymentServiceListCouponsRequest is the request payload for the coupons list request
 *
 * @generated from message admin.v1.PaymentServiceListCouponsRequest
 */
export class PaymentServiceListCouponsRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PaymentServiceListCouponsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PaymentServiceListCouponsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PaymentServiceListCouponsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PaymentServiceListCouponsRequest, a, b);
    }
}
PaymentServiceListCouponsRequest.runtime = proto3;
PaymentServiceListCouponsRequest.typeName = "admin.v1.PaymentServiceListCouponsRequest";
PaymentServiceListCouponsRequest.fields = proto3.util.newFieldList(() => []);
/**
 * PaymentServiceListCouponsResponse is the response payload for the coupons list request
 *
 * @generated from message admin.v1.PaymentServiceListCouponsResponse
 */
export class PaymentServiceListCouponsResponse extends Message {
    constructor(data) {
        super();
        /**
         * Coupons is the list of all coupons
         *
         * @generated from field: repeated api.v1.Coupon coupons = 1;
         */
        this.coupons = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PaymentServiceListCouponsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PaymentServiceListCouponsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PaymentServiceListCouponsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PaymentServiceListCouponsResponse, a, b);
    }
}
PaymentServiceListCouponsResponse.runtime = proto3;
PaymentServiceListCouponsResponse.typeName = "admin.v1.PaymentServiceListCouponsResponse";
PaymentServiceListCouponsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "coupons", kind: "message", T: Coupon, repeated: true },
]);
/**
 * PaymentServiceAddBalanceToCustomerRequest is the request payload for the balance to customer request
 *
 * @generated from message admin.v1.PaymentServiceAddBalanceToCustomerRequest
 */
export class PaymentServiceAddBalanceToCustomerRequest extends Message {
    constructor(data) {
        super();
        /**
         * Tenant is the tenant
         *
         * @generated from field: string tenant_id = 1;
         */
        this.tenantId = "";
        /**
         * BalanceToAdd is the balance in euro cent which should be added to the customer
         *
         * @generated from field: uint64 balance_to_add = 2;
         */
        this.balanceToAdd = protoInt64.zero;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PaymentServiceAddBalanceToCustomerRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PaymentServiceAddBalanceToCustomerRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PaymentServiceAddBalanceToCustomerRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PaymentServiceAddBalanceToCustomerRequest, a, b);
    }
}
PaymentServiceAddBalanceToCustomerRequest.runtime = proto3;
PaymentServiceAddBalanceToCustomerRequest.typeName = "admin.v1.PaymentServiceAddBalanceToCustomerRequest";
PaymentServiceAddBalanceToCustomerRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "tenant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "balance_to_add", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 * PaymentServiceAddBalanceToCustomerResponse is the response payload for the balance to customer request
 *
 * @generated from message admin.v1.PaymentServiceAddBalanceToCustomerResponse
 */
export class PaymentServiceAddBalanceToCustomerResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PaymentServiceAddBalanceToCustomerResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PaymentServiceAddBalanceToCustomerResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PaymentServiceAddBalanceToCustomerResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PaymentServiceAddBalanceToCustomerResponse, a, b);
    }
}
PaymentServiceAddBalanceToCustomerResponse.runtime = proto3;
PaymentServiceAddBalanceToCustomerResponse.typeName = "admin.v1.PaymentServiceAddBalanceToCustomerResponse";
PaymentServiceAddBalanceToCustomerResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "customer", kind: "message", T: PaymentCustomer },
]);
