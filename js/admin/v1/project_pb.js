// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file admin/v1/project.proto (package admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3 } from "@bufbuild/protobuf";
import { Paging } from "../../api/v1/common_pb.js";
import { Project } from "../../api/v1/project_pb.js";
/**
 * ProjectServiceListRequest is the request payload for the project list request
 *
 * @generated from message admin.v1.ProjectServiceListRequest
 */
export class ProjectServiceListRequest extends Message {
    constructor(data) {
        super();
        /**
         * Annotations to filter for
         *
         * @generated from field: map<string, string> annotations = 3;
         */
        this.annotations = {};
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProjectServiceListRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProjectServiceListRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProjectServiceListRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ProjectServiceListRequest, a, b);
    }
}
ProjectServiceListRequest.runtime = proto3;
ProjectServiceListRequest.typeName = "admin.v1.ProjectServiceListRequest";
ProjectServiceListRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "paging", kind: "message", T: Paging },
    { no: 2, name: "tenant_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "annotations", kind: "map", K: 9 /* ScalarType.STRING */, V: { kind: "scalar", T: 9 /* ScalarType.STRING */ } },
]);
/**
 * ProjectServiceListResponse is the response payload for the project list request
 *
 * @generated from message admin.v1.ProjectServiceListResponse
 */
export class ProjectServiceListResponse extends Message {
    constructor(data) {
        super();
        /**
         * Projects is the list of projects that match the filters
         *
         * @generated from field: repeated api.v1.Project projects = 1;
         */
        this.projects = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProjectServiceListResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProjectServiceListResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProjectServiceListResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ProjectServiceListResponse, a, b);
    }
}
ProjectServiceListResponse.runtime = proto3;
ProjectServiceListResponse.typeName = "admin.v1.ProjectServiceListResponse";
ProjectServiceListResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "projects", kind: "message", T: Project, repeated: true },
    { no: 2, name: "next_page", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
]);
