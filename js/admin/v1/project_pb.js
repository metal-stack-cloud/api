"use strict";
// @generated by protoc-gen-es v0.3.0 with parameter "target=ts"
// @generated from file admin/v1/project.proto (package admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Project = exports.ProjectServiceListResponse = exports.ProjectServiceListRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const common_pb_js_1 = require("../../api/v1/common_pb.js");
/**
 * @generated from message admin.v1.ProjectServiceListRequest
 */
class ProjectServiceListRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProjectServiceListRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProjectServiceListRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProjectServiceListRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ProjectServiceListRequest, a, b);
    }
}
exports.ProjectServiceListRequest = ProjectServiceListRequest;
ProjectServiceListRequest.runtime = protobuf_1.proto3;
ProjectServiceListRequest.typeName = "admin.v1.ProjectServiceListRequest";
ProjectServiceListRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "tenant_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "paging", kind: "message", T: common_pb_js_1.Paging },
]);
/**
 * @generated from message admin.v1.ProjectServiceListResponse
 */
class ProjectServiceListResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated admin.v1.Project projects = 1;
         */
        this.projects = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ProjectServiceListResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ProjectServiceListResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ProjectServiceListResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ProjectServiceListResponse, a, b);
    }
}
exports.ProjectServiceListResponse = ProjectServiceListResponse;
ProjectServiceListResponse.runtime = protobuf_1.proto3;
ProjectServiceListResponse.typeName = "admin.v1.ProjectServiceListResponse";
ProjectServiceListResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "projects", kind: "message", T: Project, repeated: true },
    { no: 2, name: "next_page", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
]);
/**
 * @generated from message admin.v1.Project
 */
class Project extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string id = 1;
         */
        this.id = "";
        /**
         * @generated from field: string name = 2;
         */
        this.name = "";
        /**
         * @generated from field: string tenant = 3;
         */
        this.tenant = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Project().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Project().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Project().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Project, a, b);
    }
}
exports.Project = Project;
Project.runtime = protobuf_1.proto3;
Project.typeName = "admin.v1.Project";
Project.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tenant", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
