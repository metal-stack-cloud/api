"use strict";
// @generated by protoc-gen-es v1.1.1 with parameter "target=ts"
// @generated from file admin/v1/cluster.proto (package admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClusterServiceListResponse = exports.ClusterServiceGetCredentialsResponse = exports.ClusterServiceGetResponse = exports.ClusterServiceListRequest = exports.ClusterServiceGetCredentialsRequest = exports.ClusterServiceGetRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const cluster_pb_js_1 = require("../../api/v1/cluster_pb.js");
/**
 * @generated from message admin.v1.ClusterServiceGetRequest
 */
class ClusterServiceGetRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string uuid = 1;
         */
        this.uuid = "";
        /**
         * @generated from field: string project = 2;
         */
        this.project = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClusterServiceGetRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClusterServiceGetRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClusterServiceGetRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClusterServiceGetRequest, a, b);
    }
}
exports.ClusterServiceGetRequest = ClusterServiceGetRequest;
ClusterServiceGetRequest.runtime = protobuf_1.proto3;
ClusterServiceGetRequest.typeName = "admin.v1.ClusterServiceGetRequest";
ClusterServiceGetRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message admin.v1.ClusterServiceGetCredentialsRequest
 */
class ClusterServiceGetCredentialsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string uuid = 1;
         */
        this.uuid = "";
        /**
         * @generated from field: string project = 2;
         */
        this.project = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClusterServiceGetCredentialsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClusterServiceGetCredentialsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClusterServiceGetCredentialsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClusterServiceGetCredentialsRequest, a, b);
    }
}
exports.ClusterServiceGetCredentialsRequest = ClusterServiceGetCredentialsRequest;
ClusterServiceGetCredentialsRequest.runtime = protobuf_1.proto3;
ClusterServiceGetCredentialsRequest.typeName = "admin.v1.ClusterServiceGetCredentialsRequest";
ClusterServiceGetCredentialsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message admin.v1.ClusterServiceListRequest
 */
class ClusterServiceListRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string project = 2;
         */
        this.project = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClusterServiceListRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClusterServiceListRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClusterServiceListRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClusterServiceListRequest, a, b);
    }
}
exports.ClusterServiceListRequest = ClusterServiceListRequest;
ClusterServiceListRequest.runtime = protobuf_1.proto3;
ClusterServiceListRequest.typeName = "admin.v1.ClusterServiceListRequest";
ClusterServiceListRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 2, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message admin.v1.ClusterServiceGetResponse
 */
class ClusterServiceGetResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClusterServiceGetResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClusterServiceGetResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClusterServiceGetResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClusterServiceGetResponse, a, b);
    }
}
exports.ClusterServiceGetResponse = ClusterServiceGetResponse;
ClusterServiceGetResponse.runtime = protobuf_1.proto3;
ClusterServiceGetResponse.typeName = "admin.v1.ClusterServiceGetResponse";
ClusterServiceGetResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "cluster", kind: "message", T: cluster_pb_js_1.Cluster },
]);
/**
 * @generated from message admin.v1.ClusterServiceGetCredentialsResponse
 */
class ClusterServiceGetCredentialsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string kubeconfig = 1;
         */
        this.kubeconfig = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClusterServiceGetCredentialsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClusterServiceGetCredentialsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClusterServiceGetCredentialsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClusterServiceGetCredentialsResponse, a, b);
    }
}
exports.ClusterServiceGetCredentialsResponse = ClusterServiceGetCredentialsResponse;
ClusterServiceGetCredentialsResponse.runtime = protobuf_1.proto3;
ClusterServiceGetCredentialsResponse.typeName = "admin.v1.ClusterServiceGetCredentialsResponse";
ClusterServiceGetCredentialsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "kubeconfig", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message admin.v1.ClusterServiceListResponse
 */
class ClusterServiceListResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated api.v1.Cluster clusters = 1;
         */
        this.clusters = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClusterServiceListResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClusterServiceListResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClusterServiceListResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClusterServiceListResponse, a, b);
    }
}
exports.ClusterServiceListResponse = ClusterServiceListResponse;
ClusterServiceListResponse.runtime = protobuf_1.proto3;
ClusterServiceListResponse.typeName = "admin.v1.ClusterServiceListResponse";
ClusterServiceListResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "clusters", kind: "message", T: cluster_pb_js_1.Cluster, repeated: true },
]);
