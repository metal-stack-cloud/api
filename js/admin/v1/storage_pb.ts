// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file admin/v1/storage.proto (package admin.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_api_v1_common } from "../../api/v1/common_pb";
import type { Snapshot } from "../../api/v1/snapshot_pb";
import { file_api_v1_snapshot } from "../../api/v1/snapshot_pb";
import type { Volume } from "../../api/v1/volume_pb";
import { file_api_v1_volume } from "../../api/v1/volume_pb";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file admin/v1/storage.proto.
 */
export const file_admin_v1_storage: GenFile = /*@__PURE__*/
  fileDesc("ChZhZG1pbi92MS9zdG9yYWdlLnByb3RvEghhZG1pbi52MSJICiBTdG9yYWdlU2VydmljZUNsdXN0ZXJJbmZvUmVxdWVzdBIWCglwYXJ0aXRpb24YASABKAlIAIgBAUIMCgpfcGFydGl0aW9uIlAKIVN0b3JhZ2VTZXJ2aWNlQ2x1c3RlckluZm9SZXNwb25zZRIrCgVpbmZvcxgBIAMoCzIcLmFkbWluLnYxLlN0b3JhZ2VDbHVzdGVySW5mbyKjAwoSU3RvcmFnZUNsdXN0ZXJJbmZvEhEKCXBhcnRpdGlvbhgBIAEoCRIMCgR1dWlkGAIgASgJEhUKDXN1YnN5c3RlbV9ucW4YAyABKAkSHAoUY3VycmVudF9tYXhfcmVwbGljYXMYBCABKA0SHgoWc3VwcG9ydGVkX21heF9yZXBsaWNhcxgFIAEoDRIyCgpzdGF0aXN0aWNzGAYgASgLMh4uYWRtaW4udjEuQ2x1c3RlclN0YXRpc3RpY3NBcGkSJwoGaGVhbHRoGAcgASgLMhcuYWRtaW4udjEuQ2x1c3RlckhlYWx0aBIeChZtaW5fdmVyc2lvbl9pbl9jbHVzdGVyGAggASgJEhsKE21pbl9hbGxvd2VkX3ZlcnNpb24YCSABKAkSGwoTbWF4X2FsbG93ZWRfdmVyc2lvbhgKIAEoCRIVCg1hcGlfZW5kcG9pbnRzGAsgAygJEhsKE2Rpc2NvdmVyeV9lbmRwb2ludHMYDCADKAkSLAoHc2VydmVycxgNIAMoCzIbLmFkbWluLnYxLlN0b3JhZ2VTZXJ2ZXJJbmZvIpYBChFTdG9yYWdlU2VydmVySW5mbxIMCgR1dWlkGAEgASgJEgwKBG5hbWUYAiABKAkSIgoacmlza19vZl9zZXJ2aWNlX2xvc3Nfc3RhdGUYAyABKAkSDQoFc3RhdGUYBCABKAkSGAoQc2VydmVyX2VuZHBvaW50cxgFIAMoCRIYChBsaWdodF9vc192ZXJzaW9uGAYgASgJIpoBCg1DbHVzdGVySGVhbHRoEg0KBXN0YXRlGAEgASgJEhwKFG51bV9kZWdyYWRlZF92b2x1bWVzGAIgASgNEh0KFW51bV9yZWFkX29ubHlfdm9sdW1lcxgDIAEoDRIhChludW1fbm90X2F2YWlsYWJsZV92b2x1bWVzGAQgASgNEhoKEm51bV9pbmFjdGl2ZV9ub2RlcxgFIAEoDSKLAwoUQ2x1c3RlclN0YXRpc3RpY3NBcGkSIgoaaW5zdGFsbGVkX3BoeXNpY2FsX3N0b3JhZ2UYASABKAQSIAoYbWFuYWdlZF9waHlzaWNhbF9zdG9yYWdlGAIgASgEEiIKGmVmZmVjdGl2ZV9waHlzaWNhbF9zdG9yYWdlGAMgASgEEhcKD2xvZ2ljYWxfc3RvcmFnZRgEIAEoBBIcChRsb2dpY2FsX3VzZWRfc3RvcmFnZRgFIAEoBBIdChVwaHlzaWNhbF91c2VkX3N0b3JhZ2UYBiABKAQSLgomcGh5c2ljYWxfdXNlZF9zdG9yYWdlX2luY2x1ZGluZ19wYXJpdHkYByABKAQSHQoVZnJlZV9waHlzaWNhbF9zdG9yYWdlGAggASgEEiYKHmVzdGltYXRlZF9mcmVlX2xvZ2ljYWxfc3RvcmFnZRgJIAEoBBIhChllc3RpbWF0ZWRfbG9naWNhbF9zdG9yYWdlGAogASgEEhkKEWNvbXByZXNzaW9uX3JhdGlvGAsgASgBItgBCiBTdG9yYWdlU2VydmljZUxpc3RWb2x1bWVzUmVxdWVzdBIbCgR1dWlkGAEgASgJQgi6SAVyA7ABAUgAiAEBEiAKB3Byb2plY3QYAiABKAlCCrpIB3IFEAIYgAFIAYgBARIWCglwYXJ0aXRpb24YAyABKAlIAogBARIRCgRuYW1lGAQgASgJSAOIAQESEwoGdGVuYW50GAUgASgJSASIAQFCBwoFX3V1aWRCCgoIX3Byb2plY3RCDAoKX3BhcnRpdGlvbkIHCgVfbmFtZUIJCgdfdGVuYW50IkQKIVN0b3JhZ2VTZXJ2aWNlTGlzdFZvbHVtZXNSZXNwb25zZRIfCgd2b2x1bWVzGAEgAygLMg4uYXBpLnYxLlZvbHVtZSLaAQoiU3RvcmFnZVNlcnZpY2VMaXN0U25hcHNob3RzUmVxdWVzdBIbCgR1dWlkGAEgASgJQgi6SAVyA7ABAUgAiAEBEiAKB3Byb2plY3QYAiABKAlCCrpIB3IFEAIYgAFIAYgBARIWCglwYXJ0aXRpb24YAyABKAlIAogBARIRCgRuYW1lGAQgASgJSAOIAQESEwoGdGVuYW50GAUgASgJSASIAQFCBwoFX3V1aWRCCgoIX3Byb2plY3RCDAoKX3BhcnRpdGlvbkIHCgVfbmFtZUIJCgdfdGVuYW50IkoKI1N0b3JhZ2VTZXJ2aWNlTGlzdFNuYXBzaG90c1Jlc3BvbnNlEiMKCXNuYXBzaG90cxgBIAMoCzIQLmFwaS52MS5TbmFwc2hvdDLmAgoOU3RvcmFnZVNlcnZpY2USbgoLQ2x1c3RlckluZm8SKi5hZG1pbi52MS5TdG9yYWdlU2VydmljZUNsdXN0ZXJJbmZvUmVxdWVzdBorLmFkbWluLnYxLlN0b3JhZ2VTZXJ2aWNlQ2x1c3RlckluZm9SZXNwb25zZSIG0vMYAgECEm4KC0xpc3RWb2x1bWVzEiouYWRtaW4udjEuU3RvcmFnZVNlcnZpY2VMaXN0Vm9sdW1lc1JlcXVlc3QaKy5hZG1pbi52MS5TdG9yYWdlU2VydmljZUxpc3RWb2x1bWVzUmVzcG9uc2UiBtLzGAIBAhJ0Cg1MaXN0U25hcHNob3RzEiwuYWRtaW4udjEuU3RvcmFnZVNlcnZpY2VMaXN0U25hcHNob3RzUmVxdWVzdBotLmFkbWluLnYxLlN0b3JhZ2VTZXJ2aWNlTGlzdFNuYXBzaG90c1Jlc3BvbnNlIgbS8xgCAQJCkwEKDGNvbS5hZG1pbi52MUIMU3RvcmFnZVByb3RvUAFaNGdpdGh1Yi5jb20vbWV0YWwtc3RhY2stY2xvdWQvYXBpL2dvL2FkbWluL3YxO2FkbWludjGiAgNBWFiqAghBZG1pbi5WMcoCCEFkbWluXFYx4gIUQWRtaW5cVjFcR1BCTWV0YWRhdGHqAglBZG1pbjo6VjFiBnByb3RvMw", [file_api_v1_common, file_api_v1_snapshot, file_api_v1_volume, file_buf_validate_validate]);

/**
 * StorageServiceClusterInfoRequest is the request payload for the cluster info request
 *
 * @generated from message admin.v1.StorageServiceClusterInfoRequest
 */
export type StorageServiceClusterInfoRequest = Message<"admin.v1.StorageServiceClusterInfoRequest"> & {
  /**
   * Partition for which the cluster info should be returned
   *
   * @generated from field: optional string partition = 1;
   */
  partition?: string;
};

/**
 * Describes the message admin.v1.StorageServiceClusterInfoRequest.
 * Use `create(StorageServiceClusterInfoRequestSchema)` to create a new message.
 */
export const StorageServiceClusterInfoRequestSchema: GenMessage<StorageServiceClusterInfoRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 0);

/**
 * StorageServiceClusterInfoResponse is the response payload for the cluster info request
 *
 * @generated from message admin.v1.StorageServiceClusterInfoResponse
 */
export type StorageServiceClusterInfoResponse = Message<"admin.v1.StorageServiceClusterInfoResponse"> & {
  /**
   * Infos about the storage systems
   *
   * @generated from field: repeated admin.v1.StorageClusterInfo infos = 1;
   */
  infos: StorageClusterInfo[];
};

/**
 * Describes the message admin.v1.StorageServiceClusterInfoResponse.
 * Use `create(StorageServiceClusterInfoResponseSchema)` to create a new message.
 */
export const StorageServiceClusterInfoResponseSchema: GenMessage<StorageServiceClusterInfoResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 1);

/**
 * StorageClusterInfo represents details about a storage system
 *
 * @generated from message admin.v1.StorageClusterInfo
 */
export type StorageClusterInfo = Message<"admin.v1.StorageClusterInfo"> & {
  /**
   * Partition where this storage system is present
   *
   * @generated from field: string partition = 1;
   */
  partition: string;

  /**
   * Uuid of this storage system
   *
   * @generated from field: string uuid = 2;
   */
  uuid: string;

  /**
   * SubsystemNqn is the subsystem nqn
   *
   * @generated from field: string subsystem_nqn = 3;
   */
  subsystemNqn: string;

  /**
   * CurrentMaxReplicas defines how many replicas a volume can have currently
   *
   * @generated from field: uint32 current_max_replicas = 4;
   */
  currentMaxReplicas: number;

  /**
   * SupportedMaxReplicas defines how many replicas a volume can have at max
   *
   * @generated from field: uint32 supported_max_replicas = 5;
   */
  supportedMaxReplicas: number;

  /**
   * Statistics of the storage system
   *
   * @generated from field: admin.v1.ClusterStatisticsApi statistics = 6;
   */
  statistics?: ClusterStatisticsApi;

  /**
   * Health of the storage system
   *
   * @generated from field: admin.v1.ClusterHealth health = 7;
   */
  health?: ClusterHealth;

  /**
   * MinVersionInCluster is the minimum server version in this cluster
   *
   * @generated from field: string min_version_in_cluster = 8;
   */
  minVersionInCluster: string;

  /**
   * MinAllowedVersion is the minimum possible server version in this cluster
   *
   * @generated from field: string min_allowed_version = 9;
   */
  minAllowedVersion: string;

  /**
   * MaxAllowedVersion is the maximum possible server version in this cluster
   *
   * @generated from field: string max_allowed_version = 10;
   */
  maxAllowedVersion: string;

  /**
   * ApiEndpoints is a list of ips of all api endpoints this cluster has
   *
   * @generated from field: repeated string api_endpoints = 11;
   */
  apiEndpoints: string[];

  /**
   * DiscoveryEndpoints is a list of ips of all discovery endpoints this cluster has
   *
   * @generated from field: repeated string discovery_endpoints = 12;
   */
  discoveryEndpoints: string[];

  /**
   * Servers is a list of storage servers in this storage system
   *
   * @generated from field: repeated admin.v1.StorageServerInfo servers = 13;
   */
  servers: StorageServerInfo[];
};

/**
 * Describes the message admin.v1.StorageClusterInfo.
 * Use `create(StorageClusterInfoSchema)` to create a new message.
 */
export const StorageClusterInfoSchema: GenMessage<StorageClusterInfo> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 2);

/**
 * StorageServerInfo contains details about a single storage server
 *
 * @generated from message admin.v1.StorageServerInfo
 */
export type StorageServerInfo = Message<"admin.v1.StorageServerInfo"> & {
  /**
   * Uuid of this server
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Name of this server
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * RiskOfServiceLossState describes the risk of service loss
   *
   * @generated from field: string risk_of_service_loss_state = 3;
   */
  riskOfServiceLossState: string;

  /**
   * State of this server
   *
   * @generated from field: string state = 4;
   */
  state: string;

  /**
   * ServerEndpoints is a list of ips this server offers
   *
   * @generated from field: repeated string server_endpoints = 5;
   */
  serverEndpoints: string[];

  /**
   * LightOsVersion is the version of the storage server version
   *
   * @generated from field: string light_os_version = 6;
   */
  lightOsVersion: string;
};

/**
 * Describes the message admin.v1.StorageServerInfo.
 * Use `create(StorageServerInfoSchema)` to create a new message.
 */
export const StorageServerInfoSchema: GenMessage<StorageServerInfo> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 3);

/**
 * ClusterHealth the health of the cluster
 *
 * @generated from message admin.v1.ClusterHealth
 */
export type ClusterHealth = Message<"admin.v1.ClusterHealth"> & {
  /**
   * State of the cluster
   *
   * @generated from field: string state = 1;
   */
  state: string;

  /**
   * NumDegradedVolumes is the number of degraded volumes
   *
   * @generated from field: uint32 num_degraded_volumes = 2;
   */
  numDegradedVolumes: number;

  /**
   * NumReadonlyVolumes is the number of read only volumes
   *
   * @generated from field: uint32 num_read_only_volumes = 3;
   */
  numReadOnlyVolumes: number;

  /**
   * NumNotAvailableVolumes is the number of not available volumes
   *
   * @generated from field: uint32 num_not_available_volumes = 4;
   */
  numNotAvailableVolumes: number;

  /**
   * NumInactiveVolumes is the number of inactive volumes
   *
   * @generated from field: uint32 num_inactive_nodes = 5;
   */
  numInactiveNodes: number;
};

/**
 * Describes the message admin.v1.ClusterHealth.
 * Use `create(ClusterHealthSchema)` to create a new message.
 */
export const ClusterHealthSchema: GenMessage<ClusterHealth> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 4);

/**
 * ClusterStatisticsApi detailed statistics of the storage cluster
 *
 * @generated from message admin.v1.ClusterStatisticsApi
 */
export type ClusterStatisticsApi = Message<"admin.v1.ClusterStatisticsApi"> & {
  /**
   * Installed Physical Storage
   *
   * All installed SSDs capacities over all servers in cluster, given in bytes.
   *
   * @generated from field: uint64 installed_physical_storage = 1;
   */
  installedPhysicalStorage: bigint;

  /**
   * Total Attached Physical Storage
   *
   * Sum of all managed and healthy SSDs capacities, given in bytes.
   *
   * @generated from field: uint64 managed_physical_storage = 2;
   */
  managedPhysicalStorage: bigint;

  /**
   * Effective Physical Storage
   *
   * Effective Physical storage excluding overhead of OVP and Parity, given in bytes.
   *
   * @generated from field: uint64 effective_physical_storage = 3;
   */
  effectivePhysicalStorage: bigint;

  /**
   * Logical Storage
   *
   * Sum of capacities of all allocated volumes, given in bytes.
   *
   * @generated from field: uint64 logical_storage = 4;
   */
  logicalStorage: bigint;

  /**
   * Logical Used Storage
   *
   * Logical storage space used by all volumes (n of LBAs x 4096), given in bytes.
   *
   * @generated from field: uint64 logical_used_storage = 5;
   */
  logicalUsedStorage: bigint;

  /**
   * Physical Used Storage Excluding Parity
   *
   * Physical storage space occupied by all volumes (data only), given in bytes.
   *
   * @generated from field: uint64 physical_used_storage = 6;
   */
  physicalUsedStorage: bigint;

  /**
   * Physical Used Storage
   *
   * Physical storage space occupied by all data including Parity overhead when EC enabled (physical n*disks/(n*disks -1)), given in bytes.
   *
   * @generated from field: uint64 physical_used_storage_including_parity = 7;
   */
  physicalUsedStorageIncludingParity: bigint;

  /**
   * Free Physical Storage
   *
   * Free storage before entering to read-only mode , given in bytes.
   *
   * @generated from field: uint64 free_physical_storage = 8;
   */
  freePhysicalStorage: bigint;

  /**
   * Estimated Free Logical Storage
   *
   * Estimated free storage before entering to read-only mode assuming current compression ratio, given in bytes.
   *
   * @generated from field: uint64 estimated_free_logical_storage = 9;
   */
  estimatedFreeLogicalStorage: bigint;

  /**
   * Estimated Total Available Logical Storage
   *
   * Estimate of total available logical storage based on current compression ratio (effective * compression)
   *
   * @generated from field: uint64 estimated_logical_storage = 10;
   */
  estimatedLogicalStorage: bigint;

  /**
   * compression ratio
   *
   * compression ratio logicalUsedStorage/physicalUsedStorage
   *
   * @generated from field: double compression_ratio = 11;
   */
  compressionRatio: number;
};

/**
 * Describes the message admin.v1.ClusterStatisticsApi.
 * Use `create(ClusterStatisticsApiSchema)` to create a new message.
 */
export const ClusterStatisticsApiSchema: GenMessage<ClusterStatisticsApi> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 5);

/**
 * StorageServiceListVolumesRequest is the request payload for the volume list request
 *
 * @generated from message admin.v1.StorageServiceListVolumesRequest
 */
export type StorageServiceListVolumesRequest = Message<"admin.v1.StorageServiceListVolumesRequest"> & {
  /**
   * Uuid is the uuid of the volume to list
   *
   * @generated from field: optional string uuid = 1;
   */
  uuid?: string;

  /**
   * Project is the project of the volume to list
   *
   * @generated from field: optional string project = 2;
   */
  project?: string;

  /**
   * Partition is the partition of the volume to list
   *
   * @generated from field: optional string partition = 3;
   */
  partition?: string;

  /**
   * Name is the name of the volume to list
   *
   * @generated from field: optional string name = 4;
   */
  name?: string;

  /**
   * Tenant is the tenant of the volume to list
   *
   * @generated from field: optional string tenant = 5;
   */
  tenant?: string;
};

/**
 * Describes the message admin.v1.StorageServiceListVolumesRequest.
 * Use `create(StorageServiceListVolumesRequestSchema)` to create a new message.
 */
export const StorageServiceListVolumesRequestSchema: GenMessage<StorageServiceListVolumesRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 6);

/**
 * StorageServiceListVolumesResponse is the response payload for the volume list request
 *
 * @generated from message admin.v1.StorageServiceListVolumesResponse
 */
export type StorageServiceListVolumesResponse = Message<"admin.v1.StorageServiceListVolumesResponse"> & {
  /**
   * Volumes is the list of volumes
   *
   * @generated from field: repeated api.v1.Volume volumes = 1;
   */
  volumes: Volume[];
};

/**
 * Describes the message admin.v1.StorageServiceListVolumesResponse.
 * Use `create(StorageServiceListVolumesResponseSchema)` to create a new message.
 */
export const StorageServiceListVolumesResponseSchema: GenMessage<StorageServiceListVolumesResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 7);

/**
 * StorageServiceListVolumesRequest is the request payload for the snapshot list request
 *
 * @generated from message admin.v1.StorageServiceListSnapshotsRequest
 */
export type StorageServiceListSnapshotsRequest = Message<"admin.v1.StorageServiceListSnapshotsRequest"> & {
  /**
   * Uuid is the uuid of the snapshot to list
   *
   * @generated from field: optional string uuid = 1;
   */
  uuid?: string;

  /**
   * Project is the project of the snapshot to list
   *
   * @generated from field: optional string project = 2;
   */
  project?: string;

  /**
   * Partition is the partition of the snapshot to list
   *
   * @generated from field: optional string partition = 3;
   */
  partition?: string;

  /**
   * Name is the name of the snapshot to list
   *
   * @generated from field: optional string name = 4;
   */
  name?: string;

  /**
   * Tenant is the tenant of the snapshot to list
   *
   * @generated from field: optional string tenant = 5;
   */
  tenant?: string;
};

/**
 * Describes the message admin.v1.StorageServiceListSnapshotsRequest.
 * Use `create(StorageServiceListSnapshotsRequestSchema)` to create a new message.
 */
export const StorageServiceListSnapshotsRequestSchema: GenMessage<StorageServiceListSnapshotsRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 8);

/**
 * StorageServiceListSnapshotsResponse is the response payload for the snapshot list request
 *
 * @generated from message admin.v1.StorageServiceListSnapshotsResponse
 */
export type StorageServiceListSnapshotsResponse = Message<"admin.v1.StorageServiceListSnapshotsResponse"> & {
  /**
   * Snapshots is the list of snapshots
   *
   * @generated from field: repeated api.v1.Snapshot snapshots = 1;
   */
  snapshots: Snapshot[];
};

/**
 * Describes the message admin.v1.StorageServiceListSnapshotsResponse.
 * Use `create(StorageServiceListSnapshotsResponseSchema)` to create a new message.
 */
export const StorageServiceListSnapshotsResponseSchema: GenMessage<StorageServiceListSnapshotsResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_storage, 9);

/**
 * StorageService serves storage related functions
 *
 * @generated from service admin.v1.StorageService
 */
export const StorageService: GenService<{
  /**
   * ClusterInfo returns overall statistics of the storage system
   *
   * @generated from rpc admin.v1.StorageService.ClusterInfo
   */
  clusterInfo: {
    methodKind: "unary";
    input: typeof StorageServiceClusterInfoRequestSchema;
    output: typeof StorageServiceClusterInfoResponseSchema;
  },
  /**
   * ListVolumes list all volumes
   *
   * @generated from rpc admin.v1.StorageService.ListVolumes
   */
  listVolumes: {
    methodKind: "unary";
    input: typeof StorageServiceListVolumesRequestSchema;
    output: typeof StorageServiceListVolumesResponseSchema;
  },
  /**
   * ListSnapshots list all snapshots
   *
   * @generated from rpc admin.v1.StorageService.ListSnapshots
   */
  listSnapshots: {
    methodKind: "unary";
    input: typeof StorageServiceListSnapshotsRequestSchema;
    output: typeof StorageServiceListSnapshotsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_admin_v1_storage, 0);

