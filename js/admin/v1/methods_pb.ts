// @generated by protoc-gen-es v1.3.3 with parameter "target=ts"
// @generated from file admin/v1/methods.proto (package admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message admin.v1.MethodServiceListRequest
 */
export class MethodServiceListRequest extends Message<MethodServiceListRequest> {
  constructor(data?: PartialMessage<MethodServiceListRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "admin.v1.MethodServiceListRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MethodServiceListRequest {
    return new MethodServiceListRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MethodServiceListRequest {
    return new MethodServiceListRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MethodServiceListRequest {
    return new MethodServiceListRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MethodServiceListRequest | PlainMessage<MethodServiceListRequest> | undefined, b: MethodServiceListRequest | PlainMessage<MethodServiceListRequest> | undefined): boolean {
    return proto3.util.equals(MethodServiceListRequest, a, b);
  }
}

/**
 * @generated from message admin.v1.MethodServiceListResponse
 */
export class MethodServiceListResponse extends Message<MethodServiceListResponse> {
  /**
   * @generated from field: repeated string methods = 1;
   */
  methods: string[] = [];

  constructor(data?: PartialMessage<MethodServiceListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "admin.v1.MethodServiceListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "methods", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MethodServiceListResponse {
    return new MethodServiceListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MethodServiceListResponse {
    return new MethodServiceListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MethodServiceListResponse {
    return new MethodServiceListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MethodServiceListResponse | PlainMessage<MethodServiceListResponse> | undefined, b: MethodServiceListResponse | PlainMessage<MethodServiceListResponse> | undefined): boolean {
    return proto3.util.equals(MethodServiceListResponse, a, b);
  }
}

