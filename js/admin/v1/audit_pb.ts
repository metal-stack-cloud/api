// @generated by protoc-gen-es v2.5.0 with parameter "target=ts"
// @generated from file admin/v1/audit.proto (package admin.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { AuditPhase, AuditTrace } from "../../api/v1/audit_pb";
import { file_api_v1_audit } from "../../api/v1/audit_pb";
import { file_api_v1_common } from "../../api/v1/common_pb";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file admin/v1/audit.proto.
 */
export const file_admin_v1_audit: GenFile = /*@__PURE__*/
  fileDesc("ChRhZG1pbi92MS9hdWRpdC5wcm90bxIIYWRtaW4udjEimwQKF0F1ZGl0U2VydmljZUxpc3RSZXF1ZXN0EhsKBHV1aWQYAiABKAlCCLpIBXIDsAEBSACIAQESLQoEZnJvbRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBARIrCgJ0bxgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAogBARIdCgR1c2VyGAUgASgJQgq6SAdyBRACGIABSAOIAQESHgoHcHJvamVjdBgGIAEoCUIIukgFcgOwAQFIBIgBARIfCgZtZXRob2QYByABKAlCCrpIB3IFEAIYgAJIBYgBARIfCglzb3VyY2VfaXAYCCABKAlCB7pIBHICcAFIBogBARIhCgtyZXN1bHRfY29kZRgJIAEoBUIHukgEGgIoAEgHiAEBEh0KBGJvZHkYCiABKAlCCrpIB3IFEAIYgAJICIgBARIeCgVsaW1pdBgLIAEoBUIKukgHGgUY6AcgAEgJiAEBEjAKBXBoYXNlGAwgASgOMhIuYXBpLnYxLkF1ZGl0UGhhc2VCCLpIBYIBAhABSAqIAQFCBwoFX3V1aWRCBwoFX2Zyb21CBQoDX3RvQgcKBV91c2VyQgoKCF9wcm9qZWN0QgkKB19tZXRob2RCDAoKX3NvdXJjZV9pcEIOCgxfcmVzdWx0X2NvZGVCBwoFX2JvZHlCCAoGX2xpbWl0QggKBl9waGFzZSI+ChhBdWRpdFNlcnZpY2VMaXN0UmVzcG9uc2USIgoGdHJhY2VzGAEgAygLMhIuYXBpLnYxLkF1ZGl0VHJhY2UibAoWQXVkaXRTZXJ2aWNlR2V0UmVxdWVzdBIWCgR1dWlkGAEgASgJQgi6SAVyA7ABARIwCgVwaGFzZRgCIAEoDjISLmFwaS52MS5BdWRpdFBoYXNlQgi6SAWCAQIQAUgAiAEBQggKBl9waGFzZSI8ChdBdWRpdFNlcnZpY2VHZXRSZXNwb25zZRIhCgV0cmFjZRgBIAEoCzISLmFwaS52MS5BdWRpdFRyYWNlMrkBCgxBdWRpdFNlcnZpY2USUgoDR2V0EiAuYWRtaW4udjEuQXVkaXRTZXJ2aWNlR2V0UmVxdWVzdBohLmFkbWluLnYxLkF1ZGl0U2VydmljZUdldFJlc3BvbnNlIgbS8xgCAQISVQoETGlzdBIhLmFkbWluLnYxLkF1ZGl0U2VydmljZUxpc3RSZXF1ZXN0GiIuYWRtaW4udjEuQXVkaXRTZXJ2aWNlTGlzdFJlc3BvbnNlIgbS8xgCAQJCkQEKDGNvbS5hZG1pbi52MUIKQXVkaXRQcm90b1ABWjRnaXRodWIuY29tL21ldGFsLXN0YWNrLWNsb3VkL2FwaS9nby9hZG1pbi92MTthZG1pbnYxogIDQVhYqgIIQWRtaW4uVjHKAghBZG1pblxWMeICFEFkbWluXFYxXEdQQk1ldGFkYXRh6gIJQWRtaW46OlYxYgZwcm90bzM", [file_api_v1_audit, file_api_v1_common, file_buf_validate_validate, file_google_protobuf_timestamp]);

/**
 * AuditServiceListRequest is the request payload to list audits
 *
 * @generated from message admin.v1.AuditServiceListRequest
 */
export type AuditServiceListRequest = Message<"admin.v1.AuditServiceListRequest"> & {
  /**
   * Uuid of the audit trace
   *
   * @generated from field: optional string uuid = 2;
   */
  uuid?: string;

  /**
   * From describes the start of the time window in which to list audit traces.
   * Defaults to the last eight hours
   *
   * @generated from field: optional google.protobuf.Timestamp from = 3;
   */
  from?: Timestamp;

  /**
   * To describes the end of the time window in which to list audit traces.
   * Defaults to the time the request was issued
   *
   * @generated from field: optional google.protobuf.Timestamp to = 4;
   */
  to?: Timestamp;

  /**
   * User is the user who called the api method
   *
   * @generated from field: optional string user = 5;
   */
  user?: string;

  /**
   * Project is the project targeted by the api call
   *
   * @generated from field: optional string project = 6;
   */
  project?: string;

  /**
   * Method is the api method that was called
   *
   * @generated from field: optional string method = 7;
   */
  method?: string;

  /**
   * Source IP contains the ip address of the caller
   *
   * @generated from field: optional string source_ip = 8;
   */
  sourceIp?: string;

  /**
   * Result Code is a string describing the result of the api call
   *
   * @generated from field: optional int32 result_code = 9;
   */
  resultCode?: number;

  /**
   * Body is a string providing text-search of the body field
   *
   * @generated from field: optional string body = 10;
   */
  body?: string;

  /**
   * Limit is a number limiting the length of the response (min: 1, max: 1000,
   * defaults to 200)
   *
   * @generated from field: optional int32 limit = 11;
   */
  limit?: number;

  /**
   * Phase specifies the audit phase
   *
   * @generated from field: optional api.v1.AuditPhase phase = 12;
   */
  phase?: AuditPhase;
};

/**
 * Describes the message admin.v1.AuditServiceListRequest.
 * Use `create(AuditServiceListRequestSchema)` to create a new message.
 */
export const AuditServiceListRequestSchema: GenMessage<AuditServiceListRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_audit, 0);

/**
 * AuditServiceListResponse is the response payload of a audit list request
 *
 * @generated from message admin.v1.AuditServiceListResponse
 */
export type AuditServiceListResponse = Message<"admin.v1.AuditServiceListResponse"> & {
  /**
   * Traces is a list of audit traces
   *
   * @generated from field: repeated api.v1.AuditTrace traces = 1;
   */
  traces: AuditTrace[];
};

/**
 * Describes the message admin.v1.AuditServiceListResponse.
 * Use `create(AuditServiceListResponseSchema)` to create a new message.
 */
export const AuditServiceListResponseSchema: GenMessage<AuditServiceListResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_audit, 1);

/**
 * AuditServiceGetRequest is the request payload of a audit get request
 *
 * @generated from message admin.v1.AuditServiceGetRequest
 */
export type AuditServiceGetRequest = Message<"admin.v1.AuditServiceGetRequest"> & {
  /**
   * Uuid of the audit trace
   *
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * Phase specifies the audit phase. Defaults to request
   *
   * @generated from field: optional api.v1.AuditPhase phase = 2;
   */
  phase?: AuditPhase;
};

/**
 * Describes the message admin.v1.AuditServiceGetRequest.
 * Use `create(AuditServiceGetRequestSchema)` to create a new message.
 */
export const AuditServiceGetRequestSchema: GenMessage<AuditServiceGetRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_audit, 2);

/**
 * AuditServiceGetResponse is the response payload of a audit get request
 *
 * @generated from message admin.v1.AuditServiceGetResponse
 */
export type AuditServiceGetResponse = Message<"admin.v1.AuditServiceGetResponse"> & {
  /**
   * Trace is the audit trace
   *
   * @generated from field: api.v1.AuditTrace trace = 1;
   */
  trace?: AuditTrace;
};

/**
 * Describes the message admin.v1.AuditServiceGetResponse.
 * Use `create(AuditServiceGetResponseSchema)` to create a new message.
 */
export const AuditServiceGetResponseSchema: GenMessage<AuditServiceGetResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_audit, 3);

/**
 * AuditService serves audit related functions
 *
 * @generated from service admin.v1.AuditService
 */
export const AuditService: GenService<{
  /**
   * Get an audit trace
   *
   * @generated from rpc admin.v1.AuditService.Get
   */
  get: {
    methodKind: "unary";
    input: typeof AuditServiceGetRequestSchema;
    output: typeof AuditServiceGetResponseSchema;
  },
  /**
   * List all audit traces
   *
   * @generated from rpc admin.v1.AuditService.List
   */
  list: {
    methodKind: "unary";
    input: typeof AuditServiceListRequestSchema;
    output: typeof AuditServiceListResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_admin_v1_audit, 0);

