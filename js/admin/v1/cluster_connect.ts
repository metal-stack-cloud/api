// @generated by protoc-gen-connect-es v0.9.0 with parameter "target=ts"
// @generated from file admin/v1/cluster.proto (package admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ClusterServiceCredentialsRequest, ClusterServiceCredentialsResponse, ClusterServiceGetRequest, ClusterServiceGetResponse, ClusterServiceListRequest, ClusterServiceListResponse, ClusterServiceOperateRequest, ClusterServiceOperateResponse } from "./cluster_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service admin.v1.ClusterService
 */
export const ClusterService = {
  typeName: "admin.v1.ClusterService",
  methods: {
    /**
     * @generated from rpc admin.v1.ClusterService.Get
     */
    get: {
      name: "Get",
      I: ClusterServiceGetRequest,
      O: ClusterServiceGetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc admin.v1.ClusterService.List
     */
    list: {
      name: "List",
      I: ClusterServiceListRequest,
      O: ClusterServiceListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc admin.v1.ClusterService.Credentials
     */
    credentials: {
      name: "Credentials",
      I: ClusterServiceCredentialsRequest,
      O: ClusterServiceCredentialsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc admin.v1.ClusterService.Operate
     */
    operate: {
      name: "Operate",
      I: ClusterServiceOperateRequest,
      O: ClusterServiceOperateResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

