// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file admin/v1/project.proto (package admin.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Paging } from "../../api/v1/common_pb";
import { file_api_v1_common } from "../../api/v1/common_pb";
import type { Project } from "../../api/v1/project_pb";
import { file_api_v1_project } from "../../api/v1/project_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file admin/v1/project.proto.
 */
export const file_admin_v1_project: GenFile = /*@__PURE__*/
  fileDesc("ChZhZG1pbi92MS9wcm9qZWN0LnByb3RvEghhZG1pbi52MSLgAQoZUHJvamVjdFNlcnZpY2VMaXN0UmVxdWVzdBIeCgZwYWdpbmcYASABKAsyDi5hcGkudjEuUGFnaW5nEhYKCXRlbmFudF9pZBgCIAEoCUgAiAEBEkkKC2Fubm90YXRpb25zGAMgAygLMjQuYWRtaW4udjEuUHJvamVjdFNlcnZpY2VMaXN0UmVxdWVzdC5Bbm5vdGF0aW9uc0VudHJ5GjIKEEFubm90YXRpb25zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIMCgpfdGVuYW50X2lkImUKGlByb2plY3RTZXJ2aWNlTGlzdFJlc3BvbnNlEiEKCHByb2plY3RzGAEgAygLMg8uYXBpLnYxLlByb2plY3QSFgoJbmV4dF9wYWdlGAIgASgESACIAQFCDAoKX25leHRfcGFnZTJrCg5Qcm9qZWN0U2VydmljZRJZCgRMaXN0EiMuYWRtaW4udjEuUHJvamVjdFNlcnZpY2VMaXN0UmVxdWVzdBokLmFkbWluLnYxLlByb2plY3RTZXJ2aWNlTGlzdFJlc3BvbnNlIgbS8xgCAQJCkwEKDGNvbS5hZG1pbi52MUIMUHJvamVjdFByb3RvUAFaNGdpdGh1Yi5jb20vbWV0YWwtc3RhY2stY2xvdWQvYXBpL2dvL2FkbWluL3YxO2FkbWludjGiAgNBWFiqAghBZG1pbi5WMcoCCEFkbWluXFYx4gIUQWRtaW5cVjFcR1BCTWV0YWRhdGHqAglBZG1pbjo6VjFiBnByb3RvMw", [file_api_v1_common, file_api_v1_project]);

/**
 * ProjectServiceListRequest is the request payload for the project list request
 *
 * @generated from message admin.v1.ProjectServiceListRequest
 */
export type ProjectServiceListRequest = Message<"admin.v1.ProjectServiceListRequest"> & {
  /**
   * Paging details for the list request
   *
   * @generated from field: api.v1.Paging paging = 1;
   */
  paging?: Paging;

  /**
   * TenantId to filter for all projects
   *
   * @generated from field: optional string tenant_id = 2;
   */
  tenantId?: string;

  /**
   * Annotations to filter for
   *
   * @generated from field: map<string, string> annotations = 3;
   */
  annotations: { [key: string]: string };
};

/**
 * Describes the message admin.v1.ProjectServiceListRequest.
 * Use `create(ProjectServiceListRequestSchema)` to create a new message.
 */
export const ProjectServiceListRequestSchema: GenMessage<ProjectServiceListRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_project, 0);

/**
 * ProjectServiceListResponse is the response payload for the project list request
 *
 * @generated from message admin.v1.ProjectServiceListResponse
 */
export type ProjectServiceListResponse = Message<"admin.v1.ProjectServiceListResponse"> & {
  /**
   * Projects is the list of projects that match the filters
   *
   * @generated from field: repeated api.v1.Project projects = 1;
   */
  projects: Project[];

  /**
   * NextPage is used for pagination, returns the next page to be fetched and must then be provided in the list request.
   *
   * @generated from field: optional uint64 next_page = 2;
   */
  nextPage?: bigint;
};

/**
 * Describes the message admin.v1.ProjectServiceListResponse.
 * Use `create(ProjectServiceListResponseSchema)` to create a new message.
 */
export const ProjectServiceListResponseSchema: GenMessage<ProjectServiceListResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_project, 1);

/**
 * ProjectService serves project related functions
 *
 * @generated from service admin.v1.ProjectService
 */
export const ProjectService: GenService<{
  /**
   * List projects based on various filter criteria
   *
   * @generated from rpc admin.v1.ProjectService.List
   */
  list: {
    methodKind: "unary";
    input: typeof ProjectServiceListRequestSchema;
    output: typeof ProjectServiceListResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_admin_v1_project, 0);

