// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: api/v1/project.proto

package apiv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Project defines a group of resources belonging to a tenant
// a tenant can have multiple projects
type Project struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of this project
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Name of this project must be unique per tenant
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of this project
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Tenant this project belongs to
	Tenant string `protobuf:"bytes,4,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// IsDefaultProject is true if this is the default project of the tenant.
	IsDefaultProject bool `protobuf:"varint,5,opt,name=is_default_project,json=isDefaultProject,proto3" json:"is_default_project,omitempty"`
	// CreatedAt the date when this project was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt the date when this project was updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// AvatarUrl of the Project
	AvatarUrl     *string `protobuf:"bytes,12,opt,name=avatar_url,json=avatarUrl,proto3,oneof" json:"avatar_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_api_v1_project_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *Project) GetIsDefaultProject() bool {
	if x != nil {
		return x.IsDefaultProject
	}
	return false
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Project) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

// ProjectMember defines a user that participates at a project
type ProjectMember struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id is the user id of the member
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Role is the role of the member
	Role ProjectRole `protobuf:"varint,2,opt,name=role,proto3,enum=api.v1.ProjectRole" json:"role,omitempty"`
	// InheritedMembership indicates that this member has implicit permissions on the project through his membership within the tenant.
	// This member does not have direct project membership but gains permissions on this project from the role he has in the tenant.
	// Inherited memberships are not included in member lists for users with guest permission but only for direct tenant members.
	InheritedMembership bool `protobuf:"varint,3,opt,name=inherited_membership,json=inheritedMembership,proto3" json:"inherited_membership,omitempty"`
	// CreatedAt the date when the member was added to the project
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectMember) Reset() {
	*x = ProjectMember{}
	mi := &file_api_v1_project_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMember) ProtoMessage() {}

func (x *ProjectMember) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMember.ProtoReflect.Descriptor instead.
func (*ProjectMember) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectMember) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectMember) GetRole() ProjectRole {
	if x != nil {
		return x.Role
	}
	return ProjectRole_PROJECT_ROLE_UNSPECIFIED
}

func (x *ProjectMember) GetInheritedMembership() bool {
	if x != nil {
		return x.InheritedMembership
	}
	return false
}

func (x *ProjectMember) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// ProjectInvite defines invite to project
type ProjectInvite struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Secret is the secret part of the invite, typically part of the url
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	// Project is the project id for which this invite was created
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Role is the role in this project the user will get after accepting the invitation
	Role ProjectRole `protobuf:"varint,3,opt,name=role,proto3,enum=api.v1.ProjectRole" json:"role,omitempty"`
	// Joined is false as long as a user has not accepted the invite
	Joined bool `protobuf:"varint,4,opt,name=joined,proto3" json:"joined,omitempty"`
	// ProjectName is the project name for which this invite was created
	ProjectName string `protobuf:"bytes,5,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	// Tenant is the login of tenant who invites to join this project
	Tenant string `protobuf:"bytes,6,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// TenantName is the name of tenant who invites to join this project
	TenantName string `protobuf:"bytes,7,opt,name=tenant_name,json=tenantName,proto3" json:"tenant_name,omitempty"`
	// ExpiresAt the date when this invite expires
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// JoinedAt the date when the member accepted this invite
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectInvite) Reset() {
	*x = ProjectInvite{}
	mi := &file_api_v1_project_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInvite) ProtoMessage() {}

func (x *ProjectInvite) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInvite.ProtoReflect.Descriptor instead.
func (*ProjectInvite) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectInvite) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ProjectInvite) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectInvite) GetRole() ProjectRole {
	if x != nil {
		return x.Role
	}
	return ProjectRole_PROJECT_ROLE_UNSPECIFIED
}

func (x *ProjectInvite) GetJoined() bool {
	if x != nil {
		return x.Joined
	}
	return false
}

func (x *ProjectInvite) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ProjectInvite) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *ProjectInvite) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

func (x *ProjectInvite) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *ProjectInvite) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

// ProjectServiceListRequest is the request payload to list all projects
type ProjectServiceListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name list only projects with this name
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Tenant list only projects of this tenant
	Tenant        *string `protobuf:"bytes,2,opt,name=tenant,proto3,oneof" json:"tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceListRequest) Reset() {
	*x = ProjectServiceListRequest{}
	mi := &file_api_v1_project_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceListRequest) ProtoMessage() {}

func (x *ProjectServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceListRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectServiceListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProjectServiceListRequest) GetTenant() string {
	if x != nil && x.Tenant != nil {
		return *x.Tenant
	}
	return ""
}

// ProjectServiceListResponse is the response payload to list all projects
type ProjectServiceListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Projects is a list of all your projects
	Projects      []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceListResponse) Reset() {
	*x = ProjectServiceListResponse{}
	mi := &file_api_v1_project_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceListResponse) ProtoMessage() {}

func (x *ProjectServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceListResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectServiceListResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

// ProjectServiceGetRequest is the request payload to get a project
type ProjectServiceGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the uuid of the project to get
	Project       string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceGetRequest) Reset() {
	*x = ProjectServiceGetRequest{}
	mi := &file_api_v1_project_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceGetRequest) ProtoMessage() {}

func (x *ProjectServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceGetRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectServiceGetRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// ProjectServiceGetResponse is the response payload to get a projects
type ProjectServiceGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the project
	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// ProjectMembers in this project, projects guests will only see direct project members and not implicit memberships from tenant permissions
	ProjectMembers []*ProjectMember `protobuf:"bytes,2,rep,name=project_members,json=projectMembers,proto3" json:"project_members,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProjectServiceGetResponse) Reset() {
	*x = ProjectServiceGetResponse{}
	mi := &file_api_v1_project_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceGetResponse) ProtoMessage() {}

func (x *ProjectServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceGetResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectServiceGetResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *ProjectServiceGetResponse) GetProjectMembers() []*ProjectMember {
	if x != nil {
		return x.ProjectMembers
	}
	return nil
}

// ProjectServiceCreateRequest is the request payload to Create a project
type ProjectServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Login is the tenant of this project
	// TODO: is login really a good name?
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Name of this project, unique per tenant
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of this project
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Avatar URL of the project
	AvatarUrl     *string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3,oneof" json:"avatar_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceCreateRequest) Reset() {
	*x = ProjectServiceCreateRequest{}
	mi := &file_api_v1_project_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceCreateRequest) ProtoMessage() {}

func (x *ProjectServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{7}
}

func (x *ProjectServiceCreateRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ProjectServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectServiceCreateRequest) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

// ProjectServiceCreateResponse is the response payload of creation of a project
type ProjectServiceCreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceCreateResponse) Reset() {
	*x = ProjectServiceCreateResponse{}
	mi := &file_api_v1_project_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceCreateResponse) ProtoMessage() {}

func (x *ProjectServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectServiceCreateResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// ProjectServiceDeleteRequest is the request payload to delete a project
type ProjectServiceDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the uuid of the project to get
	Project       string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceDeleteRequest) Reset() {
	*x = ProjectServiceDeleteRequest{}
	mi := &file_api_v1_project_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDeleteRequest) ProtoMessage() {}

func (x *ProjectServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectServiceDeleteRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// ProjectServiceDeleteResponse is the response payload to delete a project
type ProjectServiceDeleteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceDeleteResponse) Reset() {
	*x = ProjectServiceDeleteResponse{}
	mi := &file_api_v1_project_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDeleteResponse) ProtoMessage() {}

func (x *ProjectServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{10}
}

func (x *ProjectServiceDeleteResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// ProjectServiceUpdateRequest is the request payload to update a project
type ProjectServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the uuid of the project to get
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Name of this project unique per tenant
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Description of this project
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Avatar URL of the project
	AvatarUrl     *string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3,oneof" json:"avatar_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceUpdateRequest) Reset() {
	*x = ProjectServiceUpdateRequest{}
	mi := &file_api_v1_project_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceUpdateRequest) ProtoMessage() {}

func (x *ProjectServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{11}
}

func (x *ProjectServiceUpdateRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectServiceUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProjectServiceUpdateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProjectServiceUpdateRequest) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

// ProjectServiceUpdateResponse is the response payload to update a project
type ProjectServiceUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the project
	Project       *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceUpdateResponse) Reset() {
	*x = ProjectServiceUpdateResponse{}
	mi := &file_api_v1_project_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceUpdateResponse) ProtoMessage() {}

func (x *ProjectServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectServiceUpdateResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// ProjectServiceInviteRequest is used to invite a member to a project
type ProjectServiceInviteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the uuid of the project
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Role of this user in this project
	Role          ProjectRole `protobuf:"varint,3,opt,name=role,proto3,enum=api.v1.ProjectRole" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInviteRequest) Reset() {
	*x = ProjectServiceInviteRequest{}
	mi := &file_api_v1_project_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInviteRequest) ProtoMessage() {}

func (x *ProjectServiceInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInviteRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{13}
}

func (x *ProjectServiceInviteRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectServiceInviteRequest) GetRole() ProjectRole {
	if x != nil {
		return x.Role
	}
	return ProjectRole_PROJECT_ROLE_UNSPECIFIED
}

// ProjectServiceInviteRequest is the response payload to a invite member request
type ProjectServiceInviteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Inviter contains a secret which can be sent to a potential user
	// can be appended to the invitation endpoint at our cloud console like
	// console.metalstack.cloud/invite/<secret>
	Invite        *ProjectInvite `protobuf:"bytes,1,opt,name=invite,proto3" json:"invite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInviteResponse) Reset() {
	*x = ProjectServiceInviteResponse{}
	mi := &file_api_v1_project_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInviteResponse) ProtoMessage() {}

func (x *ProjectServiceInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInviteResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceInviteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{14}
}

func (x *ProjectServiceInviteResponse) GetInvite() *ProjectInvite {
	if x != nil {
		return x.Invite
	}
	return nil
}

// ProjectServiceInvitesListRequest is the request payload to a list invites request
type ProjectServiceInvitesListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the uuid of the project
	Project       string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInvitesListRequest) Reset() {
	*x = ProjectServiceInvitesListRequest{}
	mi := &file_api_v1_project_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInvitesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInvitesListRequest) ProtoMessage() {}

func (x *ProjectServiceInvitesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInvitesListRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceInvitesListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{15}
}

func (x *ProjectServiceInvitesListRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// ProjectServiceInvitesListResponse is the response payload to a list invites request
type ProjectServiceInvitesListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Invites not already accepted the invitation to this project
	Invites       []*ProjectInvite `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInvitesListResponse) Reset() {
	*x = ProjectServiceInvitesListResponse{}
	mi := &file_api_v1_project_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInvitesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInvitesListResponse) ProtoMessage() {}

func (x *ProjectServiceInvitesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInvitesListResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceInvitesListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{16}
}

func (x *ProjectServiceInvitesListResponse) GetInvites() []*ProjectInvite {
	if x != nil {
		return x.Invites
	}
	return nil
}

// ProjectServiceInviteGetRequest is the request payload to get a invite
type ProjectServiceInviteGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Secret of the invite to list
	Secret        string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInviteGetRequest) Reset() {
	*x = ProjectServiceInviteGetRequest{}
	mi := &file_api_v1_project_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInviteGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInviteGetRequest) ProtoMessage() {}

func (x *ProjectServiceInviteGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInviteGetRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceInviteGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{17}
}

func (x *ProjectServiceInviteGetRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// ProjectServiceInviteGetResponse is the response payload to a get invite request
type ProjectServiceInviteGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Invite is the invite
	Invite        *ProjectInvite `protobuf:"bytes,1,opt,name=invite,proto3" json:"invite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInviteGetResponse) Reset() {
	*x = ProjectServiceInviteGetResponse{}
	mi := &file_api_v1_project_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInviteGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInviteGetResponse) ProtoMessage() {}

func (x *ProjectServiceInviteGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInviteGetResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceInviteGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{18}
}

func (x *ProjectServiceInviteGetResponse) GetInvite() *ProjectInvite {
	if x != nil {
		return x.Invite
	}
	return nil
}

// ProjectServiceRemoveMemberRequest is used to remove a member from a project
type ProjectServiceRemoveMemberRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the uuid of the project
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// MemberID is the id of the member to remove from this project
	MemberId      string `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceRemoveMemberRequest) Reset() {
	*x = ProjectServiceRemoveMemberRequest{}
	mi := &file_api_v1_project_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceRemoveMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceRemoveMemberRequest) ProtoMessage() {}

func (x *ProjectServiceRemoveMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceRemoveMemberRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceRemoveMemberRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{19}
}

func (x *ProjectServiceRemoveMemberRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectServiceRemoveMemberRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

// ProjectServiceRemoveMemberResponse is the response payload to a remove member request
type ProjectServiceRemoveMemberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceRemoveMemberResponse) Reset() {
	*x = ProjectServiceRemoveMemberResponse{}
	mi := &file_api_v1_project_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceRemoveMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceRemoveMemberResponse) ProtoMessage() {}

func (x *ProjectServiceRemoveMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceRemoveMemberResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceRemoveMemberResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{20}
}

// ProjectServiceUpdateMemberRequest is used to update a member of a project
type ProjectServiceUpdateMemberRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the uuid of the project
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// MemberID is the id of the member to remove from this project
	MemberId string `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// Role is the role in this project the user will get after the update
	Role          ProjectRole `protobuf:"varint,3,opt,name=role,proto3,enum=api.v1.ProjectRole" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceUpdateMemberRequest) Reset() {
	*x = ProjectServiceUpdateMemberRequest{}
	mi := &file_api_v1_project_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceUpdateMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceUpdateMemberRequest) ProtoMessage() {}

func (x *ProjectServiceUpdateMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceUpdateMemberRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceUpdateMemberRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{21}
}

func (x *ProjectServiceUpdateMemberRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectServiceUpdateMemberRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *ProjectServiceUpdateMemberRequest) GetRole() ProjectRole {
	if x != nil {
		return x.Role
	}
	return ProjectRole_PROJECT_ROLE_UNSPECIFIED
}

// ProjectServiceUpdateMemberResponse is the response payload to a update member request
type ProjectServiceUpdateMemberResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ProjectMember is the updated project member
	ProjectMember *ProjectMember `protobuf:"bytes,5,opt,name=project_member,json=projectMember,proto3" json:"project_member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceUpdateMemberResponse) Reset() {
	*x = ProjectServiceUpdateMemberResponse{}
	mi := &file_api_v1_project_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceUpdateMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceUpdateMemberResponse) ProtoMessage() {}

func (x *ProjectServiceUpdateMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceUpdateMemberResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceUpdateMemberResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{22}
}

func (x *ProjectServiceUpdateMemberResponse) GetProjectMember() *ProjectMember {
	if x != nil {
		return x.ProjectMember
	}
	return nil
}

// ProjectServiceInviteAcceptRequest is the request payload to a accept invite request
type ProjectServiceInviteAcceptRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Secret is the invitation secret part of the invitation url
	Secret        string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInviteAcceptRequest) Reset() {
	*x = ProjectServiceInviteAcceptRequest{}
	mi := &file_api_v1_project_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInviteAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInviteAcceptRequest) ProtoMessage() {}

func (x *ProjectServiceInviteAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInviteAcceptRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceInviteAcceptRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{23}
}

func (x *ProjectServiceInviteAcceptRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// ProjectServiceInvitesListResponse is the response payload to a accept invite request
type ProjectServiceInviteAcceptResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID of the project joined
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// ProjectName if the project joined
	ProjectName   string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInviteAcceptResponse) Reset() {
	*x = ProjectServiceInviteAcceptResponse{}
	mi := &file_api_v1_project_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInviteAcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInviteAcceptResponse) ProtoMessage() {}

func (x *ProjectServiceInviteAcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInviteAcceptResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceInviteAcceptResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{24}
}

func (x *ProjectServiceInviteAcceptResponse) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectServiceInviteAcceptResponse) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

// ProjectServiceInviteDeleteRequest is the request payload to a delete invite
type ProjectServiceInviteDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project is the uuid of the project
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Secret of the invite to delete
	Secret        string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInviteDeleteRequest) Reset() {
	*x = ProjectServiceInviteDeleteRequest{}
	mi := &file_api_v1_project_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInviteDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInviteDeleteRequest) ProtoMessage() {}

func (x *ProjectServiceInviteDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInviteDeleteRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceInviteDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{25}
}

func (x *ProjectServiceInviteDeleteRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectServiceInviteDeleteRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// ProjectServiceInviteDeleteResponse is the response payload of a delete invite request
type ProjectServiceInviteDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectServiceInviteDeleteResponse) Reset() {
	*x = ProjectServiceInviteDeleteResponse{}
	mi := &file_api_v1_project_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectServiceInviteDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceInviteDeleteResponse) ProtoMessage() {}

func (x *ProjectServiceInviteDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_project_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceInviteDeleteResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceInviteDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_project_proto_rawDescGZIP(), []int{26}
}

var File_api_v1_project_proto protoreflect.FileDescriptor

const file_api_v1_project_proto_rawDesc = "" +
	"\n" +
	"\x14api/v1/project.proto\x12\x06api.v1\x1a\x13api/v1/common.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc2\x02\n" +
	"\aProject\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06tenant\x18\x04 \x01(\tR\x06tenant\x12,\n" +
	"\x12is_default_project\x18\x05 \x01(\bR\x10isDefaultProject\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\"\n" +
	"\n" +
	"avatar_url\x18\f \x01(\tH\x00R\tavatarUrl\x88\x01\x01B\r\n" +
	"\v_avatar_url\"\xc0\x01\n" +
	"\rProjectMember\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\x04role\x18\x02 \x01(\x0e2\x13.api.v1.ProjectRoleB\b\xbaH\x05\x82\x01\x02\x10\x01R\x04role\x121\n" +
	"\x14inherited_membership\x18\x03 \x01(\bR\x13inheritedMembership\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xdc\x02\n" +
	"\rProjectInvite\x12\x16\n" +
	"\x06secret\x18\x01 \x01(\tR\x06secret\x12\x18\n" +
	"\aproject\x18\x02 \x01(\tR\aproject\x121\n" +
	"\x04role\x18\x03 \x01(\x0e2\x13.api.v1.ProjectRoleB\b\xbaH\x05\x82\x01\x02\x10\x01R\x04role\x12\x16\n" +
	"\x06joined\x18\x04 \x01(\bR\x06joined\x12!\n" +
	"\fproject_name\x18\x05 \x01(\tR\vprojectName\x12\x16\n" +
	"\x06tenant\x18\x06 \x01(\tR\x06tenant\x12\x1f\n" +
	"\vtenant_name\x18\a \x01(\tR\n" +
	"tenantName\x129\n" +
	"\n" +
	"expires_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x127\n" +
	"\tjoined_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\"}\n" +
	"\x19ProjectServiceListRequest\x12#\n" +
	"\x04name\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x04name\x88\x01\x01\x12'\n" +
	"\x06tenant\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\x06tenant\x88\x01\x01B\a\n" +
	"\x05_nameB\t\n" +
	"\a_tenant\"I\n" +
	"\x1aProjectServiceListResponse\x12+\n" +
	"\bprojects\x18\x01 \x03(\v2\x0f.api.v1.ProjectR\bprojects\">\n" +
	"\x18ProjectServiceGetRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\"\x86\x01\n" +
	"\x19ProjectServiceGetResponse\x12)\n" +
	"\aproject\x18\x01 \x01(\v2\x0f.api.v1.ProjectR\aproject\x12>\n" +
	"\x0fproject_members\x18\x02 \x03(\v2\x15.api.v1.ProjectMemberR\x0eprojectMembers\"\xbf\x01\n" +
	"\x1bProjectServiceCreateRequest\x12 \n" +
	"\x05login\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x05login\x12\x1d\n" +
	"\x04name\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x02\x18@R\x04name\x12,\n" +
	"\vdescription\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x04R\vdescription\x12\"\n" +
	"\n" +
	"avatar_url\x18\x04 \x01(\tH\x00R\tavatarUrl\x88\x01\x01B\r\n" +
	"\v_avatar_url\"I\n" +
	"\x1cProjectServiceCreateResponse\x12)\n" +
	"\aproject\x18\x01 \x01(\v2\x0f.api.v1.ProjectR\aproject\"A\n" +
	"\x1bProjectServiceDeleteRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\"I\n" +
	"\x1cProjectServiceDeleteResponse\x12)\n" +
	"\aproject\x18\x01 \x01(\v2\x0f.api.v1.ProjectR\aproject\"\xe4\x01\n" +
	"\x1bProjectServiceUpdateRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\x12\"\n" +
	"\x04name\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x02\x18@H\x00R\x04name\x88\x01\x01\x121\n" +
	"\vdescription\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x04H\x01R\vdescription\x88\x01\x01\x12\"\n" +
	"\n" +
	"avatar_url\x18\x04 \x01(\tH\x02R\tavatarUrl\x88\x01\x01B\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\r\n" +
	"\v_avatar_url\"I\n" +
	"\x1cProjectServiceUpdateResponse\x12)\n" +
	"\aproject\x18\x01 \x01(\v2\x0f.api.v1.ProjectR\aproject\"t\n" +
	"\x1bProjectServiceInviteRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\x121\n" +
	"\x04role\x18\x03 \x01(\x0e2\x13.api.v1.ProjectRoleB\b\xbaH\x05\x82\x01\x02\x10\x01R\x04role\"M\n" +
	"\x1cProjectServiceInviteResponse\x12-\n" +
	"\x06invite\x18\x01 \x01(\v2\x15.api.v1.ProjectInviteR\x06invite\"F\n" +
	" ProjectServiceInvitesListRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\"T\n" +
	"!ProjectServiceInvitesListResponse\x12/\n" +
	"\ainvites\x18\x01 \x03(\v2\x15.api.v1.ProjectInviteR\ainvites\"8\n" +
	"\x1eProjectServiceInviteGetRequest\x12\x16\n" +
	"\x06secret\x18\x01 \x01(\tR\x06secret\"P\n" +
	"\x1fProjectServiceInviteGetResponse\x12-\n" +
	"\x06invite\x18\x01 \x01(\v2\x15.api.v1.ProjectInviteR\x06invite\"d\n" +
	"!ProjectServiceRemoveMemberRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\"$\n" +
	"\"ProjectServiceRemoveMemberResponse\"\x97\x01\n" +
	"!ProjectServiceUpdateMemberRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\x121\n" +
	"\x04role\x18\x03 \x01(\x0e2\x13.api.v1.ProjectRoleB\b\xbaH\x05\x82\x01\x02\x10\x01R\x04role\"b\n" +
	"\"ProjectServiceUpdateMemberResponse\x12<\n" +
	"\x0eproject_member\x18\x05 \x01(\v2\x15.api.v1.ProjectMemberR\rprojectMember\";\n" +
	"!ProjectServiceInviteAcceptRequest\x12\x16\n" +
	"\x06secret\x18\x01 \x01(\tR\x06secret\"a\n" +
	"\"ProjectServiceInviteAcceptResponse\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12!\n" +
	"\fproject_name\x18\x02 \x01(\tR\vprojectName\"_\n" +
	"!ProjectServiceInviteDeleteRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\x12\x16\n" +
	"\x06secret\x18\x02 \x01(\tR\x06secret\"$\n" +
	"\"ProjectServiceInviteDeleteResponse2\xe2\t\n" +
	"\x0eProjectService\x12W\n" +
	"\x04List\x12!.api.v1.ProjectServiceListRequest\x1a\".api.v1.ProjectServiceListResponse\"\b\xd8\xf3\x18\x03\xe8\xf3\x18\x02\x12W\n" +
	"\x03Get\x12 .api.v1.ProjectServiceGetRequest\x1a!.api.v1.ProjectServiceGetResponse\"\v\xca\xf3\x18\x03\x01\x02\x03\xe8\xf3\x18\x02\x12_\n" +
	"\x06Create\x12#.api.v1.ProjectServiceCreateRequest\x1a$.api.v1.ProjectServiceCreateResponse\"\n" +
	"\xc2\xf3\x18\x02\x01\x02\xe8\xf3\x18\x01\x12^\n" +
	"\x06Delete\x12#.api.v1.ProjectServiceDeleteRequest\x1a$.api.v1.ProjectServiceDeleteResponse\"\t\xca\xf3\x18\x01\x01\xe8\xf3\x18\x01\x12_\n" +
	"\x06Update\x12#.api.v1.ProjectServiceUpdateRequest\x1a$.api.v1.ProjectServiceUpdateResponse\"\n" +
	"\xca\xf3\x18\x02\x01\x02\xe8\xf3\x18\x01\x12p\n" +
	"\fRemoveMember\x12).api.v1.ProjectServiceRemoveMemberRequest\x1a*.api.v1.ProjectServiceRemoveMemberResponse\"\t\xca\xf3\x18\x01\x01\xe8\xf3\x18\x01\x12p\n" +
	"\fUpdateMember\x12).api.v1.ProjectServiceUpdateMemberRequest\x1a*.api.v1.ProjectServiceUpdateMemberResponse\"\t\xca\xf3\x18\x01\x01\xe8\xf3\x18\x01\x12^\n" +
	"\x06Invite\x12#.api.v1.ProjectServiceInviteRequest\x1a$.api.v1.ProjectServiceInviteResponse\"\t\xca\xf3\x18\x01\x01\xe8\xf3\x18\x01\x12o\n" +
	"\fInviteAccept\x12).api.v1.ProjectServiceInviteAcceptRequest\x1a*.api.v1.ProjectServiceInviteAcceptResponse\"\b\xd8\xf3\x18\x03\xe8\xf3\x18\x01\x12p\n" +
	"\fInviteDelete\x12).api.v1.ProjectServiceInviteDeleteRequest\x1a*.api.v1.ProjectServiceInviteDeleteResponse\"\t\xca\xf3\x18\x01\x01\xe8\xf3\x18\x01\x12m\n" +
	"\vInvitesList\x12(.api.v1.ProjectServiceInvitesListRequest\x1a).api.v1.ProjectServiceInvitesListResponse\"\t\xca\xf3\x18\x01\x01\xe8\xf3\x18\x02\x12f\n" +
	"\tInviteGet\x12&.api.v1.ProjectServiceInviteGetRequest\x1a'.api.v1.ProjectServiceInviteGetResponse\"\b\xd8\xf3\x18\x03\xe8\xf3\x18\x02B\x85\x01\n" +
	"\n" +
	"com.api.v1B\fProjectProtoP\x01Z0github.com/metal-stack-cloud/api/go/api/v1;apiv1\xa2\x02\x03AXX\xaa\x02\x06Api.V1\xca\x02\x06Api\\V1\xe2\x02\x12Api\\V1\\GPBMetadata\xea\x02\aApi::V1b\x06proto3"

var (
	file_api_v1_project_proto_rawDescOnce sync.Once
	file_api_v1_project_proto_rawDescData []byte
)

func file_api_v1_project_proto_rawDescGZIP() []byte {
	file_api_v1_project_proto_rawDescOnce.Do(func() {
		file_api_v1_project_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_project_proto_rawDesc), len(file_api_v1_project_proto_rawDesc)))
	})
	return file_api_v1_project_proto_rawDescData
}

var file_api_v1_project_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_api_v1_project_proto_goTypes = []any{
	(*Project)(nil),                            // 0: api.v1.Project
	(*ProjectMember)(nil),                      // 1: api.v1.ProjectMember
	(*ProjectInvite)(nil),                      // 2: api.v1.ProjectInvite
	(*ProjectServiceListRequest)(nil),          // 3: api.v1.ProjectServiceListRequest
	(*ProjectServiceListResponse)(nil),         // 4: api.v1.ProjectServiceListResponse
	(*ProjectServiceGetRequest)(nil),           // 5: api.v1.ProjectServiceGetRequest
	(*ProjectServiceGetResponse)(nil),          // 6: api.v1.ProjectServiceGetResponse
	(*ProjectServiceCreateRequest)(nil),        // 7: api.v1.ProjectServiceCreateRequest
	(*ProjectServiceCreateResponse)(nil),       // 8: api.v1.ProjectServiceCreateResponse
	(*ProjectServiceDeleteRequest)(nil),        // 9: api.v1.ProjectServiceDeleteRequest
	(*ProjectServiceDeleteResponse)(nil),       // 10: api.v1.ProjectServiceDeleteResponse
	(*ProjectServiceUpdateRequest)(nil),        // 11: api.v1.ProjectServiceUpdateRequest
	(*ProjectServiceUpdateResponse)(nil),       // 12: api.v1.ProjectServiceUpdateResponse
	(*ProjectServiceInviteRequest)(nil),        // 13: api.v1.ProjectServiceInviteRequest
	(*ProjectServiceInviteResponse)(nil),       // 14: api.v1.ProjectServiceInviteResponse
	(*ProjectServiceInvitesListRequest)(nil),   // 15: api.v1.ProjectServiceInvitesListRequest
	(*ProjectServiceInvitesListResponse)(nil),  // 16: api.v1.ProjectServiceInvitesListResponse
	(*ProjectServiceInviteGetRequest)(nil),     // 17: api.v1.ProjectServiceInviteGetRequest
	(*ProjectServiceInviteGetResponse)(nil),    // 18: api.v1.ProjectServiceInviteGetResponse
	(*ProjectServiceRemoveMemberRequest)(nil),  // 19: api.v1.ProjectServiceRemoveMemberRequest
	(*ProjectServiceRemoveMemberResponse)(nil), // 20: api.v1.ProjectServiceRemoveMemberResponse
	(*ProjectServiceUpdateMemberRequest)(nil),  // 21: api.v1.ProjectServiceUpdateMemberRequest
	(*ProjectServiceUpdateMemberResponse)(nil), // 22: api.v1.ProjectServiceUpdateMemberResponse
	(*ProjectServiceInviteAcceptRequest)(nil),  // 23: api.v1.ProjectServiceInviteAcceptRequest
	(*ProjectServiceInviteAcceptResponse)(nil), // 24: api.v1.ProjectServiceInviteAcceptResponse
	(*ProjectServiceInviteDeleteRequest)(nil),  // 25: api.v1.ProjectServiceInviteDeleteRequest
	(*ProjectServiceInviteDeleteResponse)(nil), // 26: api.v1.ProjectServiceInviteDeleteResponse
	(*timestamppb.Timestamp)(nil),              // 27: google.protobuf.Timestamp
	(ProjectRole)(0),                           // 28: api.v1.ProjectRole
}
var file_api_v1_project_proto_depIdxs = []int32{
	27, // 0: api.v1.Project.created_at:type_name -> google.protobuf.Timestamp
	27, // 1: api.v1.Project.updated_at:type_name -> google.protobuf.Timestamp
	28, // 2: api.v1.ProjectMember.role:type_name -> api.v1.ProjectRole
	27, // 3: api.v1.ProjectMember.created_at:type_name -> google.protobuf.Timestamp
	28, // 4: api.v1.ProjectInvite.role:type_name -> api.v1.ProjectRole
	27, // 5: api.v1.ProjectInvite.expires_at:type_name -> google.protobuf.Timestamp
	27, // 6: api.v1.ProjectInvite.joined_at:type_name -> google.protobuf.Timestamp
	0,  // 7: api.v1.ProjectServiceListResponse.projects:type_name -> api.v1.Project
	0,  // 8: api.v1.ProjectServiceGetResponse.project:type_name -> api.v1.Project
	1,  // 9: api.v1.ProjectServiceGetResponse.project_members:type_name -> api.v1.ProjectMember
	0,  // 10: api.v1.ProjectServiceCreateResponse.project:type_name -> api.v1.Project
	0,  // 11: api.v1.ProjectServiceDeleteResponse.project:type_name -> api.v1.Project
	0,  // 12: api.v1.ProjectServiceUpdateResponse.project:type_name -> api.v1.Project
	28, // 13: api.v1.ProjectServiceInviteRequest.role:type_name -> api.v1.ProjectRole
	2,  // 14: api.v1.ProjectServiceInviteResponse.invite:type_name -> api.v1.ProjectInvite
	2,  // 15: api.v1.ProjectServiceInvitesListResponse.invites:type_name -> api.v1.ProjectInvite
	2,  // 16: api.v1.ProjectServiceInviteGetResponse.invite:type_name -> api.v1.ProjectInvite
	28, // 17: api.v1.ProjectServiceUpdateMemberRequest.role:type_name -> api.v1.ProjectRole
	1,  // 18: api.v1.ProjectServiceUpdateMemberResponse.project_member:type_name -> api.v1.ProjectMember
	3,  // 19: api.v1.ProjectService.List:input_type -> api.v1.ProjectServiceListRequest
	5,  // 20: api.v1.ProjectService.Get:input_type -> api.v1.ProjectServiceGetRequest
	7,  // 21: api.v1.ProjectService.Create:input_type -> api.v1.ProjectServiceCreateRequest
	9,  // 22: api.v1.ProjectService.Delete:input_type -> api.v1.ProjectServiceDeleteRequest
	11, // 23: api.v1.ProjectService.Update:input_type -> api.v1.ProjectServiceUpdateRequest
	19, // 24: api.v1.ProjectService.RemoveMember:input_type -> api.v1.ProjectServiceRemoveMemberRequest
	21, // 25: api.v1.ProjectService.UpdateMember:input_type -> api.v1.ProjectServiceUpdateMemberRequest
	13, // 26: api.v1.ProjectService.Invite:input_type -> api.v1.ProjectServiceInviteRequest
	23, // 27: api.v1.ProjectService.InviteAccept:input_type -> api.v1.ProjectServiceInviteAcceptRequest
	25, // 28: api.v1.ProjectService.InviteDelete:input_type -> api.v1.ProjectServiceInviteDeleteRequest
	15, // 29: api.v1.ProjectService.InvitesList:input_type -> api.v1.ProjectServiceInvitesListRequest
	17, // 30: api.v1.ProjectService.InviteGet:input_type -> api.v1.ProjectServiceInviteGetRequest
	4,  // 31: api.v1.ProjectService.List:output_type -> api.v1.ProjectServiceListResponse
	6,  // 32: api.v1.ProjectService.Get:output_type -> api.v1.ProjectServiceGetResponse
	8,  // 33: api.v1.ProjectService.Create:output_type -> api.v1.ProjectServiceCreateResponse
	10, // 34: api.v1.ProjectService.Delete:output_type -> api.v1.ProjectServiceDeleteResponse
	12, // 35: api.v1.ProjectService.Update:output_type -> api.v1.ProjectServiceUpdateResponse
	20, // 36: api.v1.ProjectService.RemoveMember:output_type -> api.v1.ProjectServiceRemoveMemberResponse
	22, // 37: api.v1.ProjectService.UpdateMember:output_type -> api.v1.ProjectServiceUpdateMemberResponse
	14, // 38: api.v1.ProjectService.Invite:output_type -> api.v1.ProjectServiceInviteResponse
	24, // 39: api.v1.ProjectService.InviteAccept:output_type -> api.v1.ProjectServiceInviteAcceptResponse
	26, // 40: api.v1.ProjectService.InviteDelete:output_type -> api.v1.ProjectServiceInviteDeleteResponse
	16, // 41: api.v1.ProjectService.InvitesList:output_type -> api.v1.ProjectServiceInvitesListResponse
	18, // 42: api.v1.ProjectService.InviteGet:output_type -> api.v1.ProjectServiceInviteGetResponse
	31, // [31:43] is the sub-list for method output_type
	19, // [19:31] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_v1_project_proto_init() }
func file_api_v1_project_proto_init() {
	if File_api_v1_project_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_project_proto_msgTypes[0].OneofWrappers = []any{}
	file_api_v1_project_proto_msgTypes[3].OneofWrappers = []any{}
	file_api_v1_project_proto_msgTypes[7].OneofWrappers = []any{}
	file_api_v1_project_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_project_proto_rawDesc), len(file_api_v1_project_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_project_proto_goTypes,
		DependencyIndexes: file_api_v1_project_proto_depIdxs,
		MessageInfos:      file_api_v1_project_proto_msgTypes,
	}.Build()
	File_api_v1_project_proto = out.File
	file_api_v1_project_proto_goTypes = nil
	file_api_v1_project_proto_depIdxs = nil
}
