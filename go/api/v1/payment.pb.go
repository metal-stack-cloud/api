// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/v1/payment.proto

package apiv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PaymentMethod indicates which way the user wants to pay
type PaymentMethod int32

const (
	// PAYMENT_METHOD_UNSPECIFIED is not specified
	PaymentMethod_PAYMENT_METHOD_UNSPECIFIED PaymentMethod = 0
	// PAYMENT_METHOD_CREDIT_CARD user wants to pay per credit card
	PaymentMethod_PAYMENT_METHOD_CREDIT_CARD PaymentMethod = 2
	// PAYMENT_METHOD_INVOICE user wants to pay per invoice
	PaymentMethod_PAYMENT_METHOD_INVOICE PaymentMethod = 3
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0: "PAYMENT_METHOD_UNSPECIFIED",
		2: "PAYMENT_METHOD_CREDIT_CARD",
		3: "PAYMENT_METHOD_INVOICE",
	}
	PaymentMethod_value = map[string]int32{
		"PAYMENT_METHOD_UNSPECIFIED": 0,
		"PAYMENT_METHOD_CREDIT_CARD": 2,
		"PAYMENT_METHOD_INVOICE":     3,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_payment_proto_enumTypes[0].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_api_v1_payment_proto_enumTypes[0]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{0}
}

// ProductType defines for which type of product a price applies
type ProductType int32

const (
	// PRODUCT_TYPE_UNSPECIFIED is unspecified
	ProductType_PRODUCT_TYPE_UNSPECIFIED ProductType = 0
	// PRODUCT_TYPE_STORAGE for storage
	ProductType_PRODUCT_TYPE_STORAGE ProductType = 1
	// PRODUCT_TYPE_COMPUTE for compute, e.g. machines
	ProductType_PRODUCT_TYPE_COMPUTE ProductType = 2
	// PRODUCT_TYPE_NETWORK for network, e.g. ips and traffic
	ProductType_PRODUCT_TYPE_NETWORK ProductType = 3
	// PRODUCT_TYPE_KUBERNETES for kubernetes, e.g. the control plane
	ProductType_PRODUCT_TYPE_KUBERNETES ProductType = 5
)

// Enum value maps for ProductType.
var (
	ProductType_name = map[int32]string{
		0: "PRODUCT_TYPE_UNSPECIFIED",
		1: "PRODUCT_TYPE_STORAGE",
		2: "PRODUCT_TYPE_COMPUTE",
		3: "PRODUCT_TYPE_NETWORK",
		5: "PRODUCT_TYPE_KUBERNETES",
	}
	ProductType_value = map[string]int32{
		"PRODUCT_TYPE_UNSPECIFIED": 0,
		"PRODUCT_TYPE_STORAGE":     1,
		"PRODUCT_TYPE_COMPUTE":     2,
		"PRODUCT_TYPE_NETWORK":     3,
		"PRODUCT_TYPE_KUBERNETES":  5,
	}
)

func (x ProductType) Enum() *ProductType {
	p := new(ProductType)
	*p = x
	return p
}

func (x ProductType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_payment_proto_enumTypes[1].Descriptor()
}

func (ProductType) Type() protoreflect.EnumType {
	return &file_api_v1_payment_proto_enumTypes[1]
}

func (x ProductType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductType.Descriptor instead.
func (ProductType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{1}
}

// PaymentCustomer is a customer at the payment processor
type PaymentCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Name of the customer
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// CustomerId id of the customer
	CustomerId *string `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3,oneof" json:"customer_id,omitempty"`
	// PaymentMethodId at the payment processor
	PaymentMethodId *string `protobuf:"bytes,4,opt,name=payment_method_id,json=paymentMethodId,proto3,oneof" json:"payment_method_id,omitempty"`
	// SubscriptionId of the customer
	SubscriptionId string `protobuf:"bytes,5,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// Email of the customer
	Email *string `protobuf:"bytes,6,opt,name=email,proto3,oneof" json:"email,omitempty"`
	// Card the customer supplied
	Card *Card `protobuf:"bytes,7,opt,name=card,proto3,oneof" json:"card,omitempty"`
	// Prices which apply to customer resources
	Prices []*Price `protobuf:"bytes,8,rep,name=prices,proto3" json:"prices,omitempty"`
	// Address is the postal address of the customer
	Address *Address `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	// Coupon details of granted coupon if any
	Coupon *Coupon `protobuf:"bytes,10,opt,name=coupon,proto3,oneof" json:"coupon,omitempty"`
	// Vat which applies to the customer
	Vat *string `protobuf:"bytes,11,opt,name=vat,proto3,oneof" json:"vat,omitempty"`
	// PhoneNumber of the customer
	PhoneNumber *string `protobuf:"bytes,12,opt,name=phone_number,json=phoneNumber,proto3,oneof" json:"phone_number,omitempty"`
	// Balance actual balance of the customer
	Balance *int64 `protobuf:"varint,13,opt,name=balance,proto3,oneof" json:"balance,omitempty"`
	// PaymentMethod indicates which way the user wants to pay
	PaymentMethod PaymentMethod `protobuf:"varint,14,opt,name=payment_method,json=paymentMethod,proto3,enum=api.v1.PaymentMethod" json:"payment_method,omitempty"`
}

func (x *PaymentCustomer) Reset() {
	*x = PaymentCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCustomer) ProtoMessage() {}

func (x *PaymentCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCustomer.ProtoReflect.Descriptor instead.
func (*PaymentCustomer) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentCustomer) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PaymentCustomer) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PaymentCustomer) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *PaymentCustomer) GetPaymentMethodId() string {
	if x != nil && x.PaymentMethodId != nil {
		return *x.PaymentMethodId
	}
	return ""
}

func (x *PaymentCustomer) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *PaymentCustomer) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *PaymentCustomer) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *PaymentCustomer) GetPrices() []*Price {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *PaymentCustomer) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *PaymentCustomer) GetCoupon() *Coupon {
	if x != nil {
		return x.Coupon
	}
	return nil
}

func (x *PaymentCustomer) GetVat() string {
	if x != nil && x.Vat != nil {
		return *x.Vat
	}
	return ""
}

func (x *PaymentCustomer) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *PaymentCustomer) GetBalance() int64 {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return 0
}

func (x *PaymentCustomer) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_PAYMENT_METHOD_UNSPECIFIED
}

// Card is the payment card the customer pays with
type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Brand of the card
	Brand string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	// Country where the card was issued
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	// ExpMonth is the month when this card expires
	ExpMonth int64 `protobuf:"varint,3,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	// ExpYear is the year when this card expires
	ExpYear int64 `protobuf:"varint,4,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	// Last4 are the 4 last digits of the card number, the full number is not stored anywhere
	Last_4 string `protobuf:"bytes,5,opt,name=last_4,json=last4,proto3" json:"last_4,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{1}
}

func (x *Card) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Card) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Card) GetExpMonth() int64 {
	if x != nil {
		return x.ExpMonth
	}
	return 0
}

func (x *Card) GetExpYear() int64 {
	if x != nil {
		return x.ExpYear
	}
	return 0
}

func (x *Card) GetLast_4() string {
	if x != nil {
		return x.Last_4
	}
	return ""
}

// Price of a product
type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the price
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// UnitAmountDecimal the value of this price
	UnitAmountDecimal float64 `protobuf:"fixed64,2,opt,name=unit_amount_decimal,json=unitAmountDecimal,proto3" json:"unit_amount_decimal,omitempty"`
	// Currency of this price
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// UnitLabel is a label which allows for searching this unit at the payment processor
	UnitLabel string `protobuf:"bytes,4,opt,name=unit_label,json=unitLabel,proto3" json:"unit_label,omitempty"`
	// ProductType this price applies to
	ProductType ProductType `protobuf:"varint,5,opt,name=product_type,json=productType,proto3,enum=api.v1.ProductType" json:"product_type,omitempty"`
	// Description of this price
	Description *string `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{2}
}

func (x *Price) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Price) GetUnitAmountDecimal() float64 {
	if x != nil {
		return x.UnitAmountDecimal
	}
	return 0
}

func (x *Price) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Price) GetUnitLabel() string {
	if x != nil {
		return x.UnitLabel
	}
	return ""
}

func (x *Price) GetProductType() ProductType {
	if x != nil {
		return x.ProductType
	}
	return ProductType_PRODUCT_TYPE_UNSPECIFIED
}

func (x *Price) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

// Address postal address of a customer
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Line1 the first address line
	Line1 string `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	// Line2 the second address line
	Line2 string `protobuf:"bytes,2,opt,name=line2,proto3" json:"line2,omitempty"`
	// PostalCode of the city or address
	PostalCode string `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// City where the customer lives
	City string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	// Sate where the customer lives
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// Country where the customer lives
	Country string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *Address) GetLine2() string {
	if x != nil {
		return x.Line2
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

// SubscriptionUsageItem details of a subscription
type SubscriptionUsageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SubscriptionItemId is the id of the subscription
	SubscriptionItemId string `protobuf:"bytes,1,opt,name=subscription_item_id,json=subscriptionItemId,proto3" json:"subscription_item_id,omitempty"`
	// SubscriptionItemName is the name of the subscription
	SubscriptionItemName string `protobuf:"bytes,2,opt,name=subscription_item_name,json=subscriptionItemName,proto3" json:"subscription_item_name,omitempty"`
	// TotalUsage of this subscription
	TotalUsage int64 `protobuf:"varint,3,opt,name=total_usage,json=totalUsage,proto3" json:"total_usage,omitempty"`
	// PeriodStart is the start date of this subscription
	PeriodStart *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	// PeriodEnd is the end date of this subscription
	PeriodEnd *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
}

func (x *SubscriptionUsageItem) Reset() {
	*x = SubscriptionUsageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionUsageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionUsageItem) ProtoMessage() {}

func (x *SubscriptionUsageItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionUsageItem.ProtoReflect.Descriptor instead.
func (*SubscriptionUsageItem) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{4}
}

func (x *SubscriptionUsageItem) GetSubscriptionItemId() string {
	if x != nil {
		return x.SubscriptionItemId
	}
	return ""
}

func (x *SubscriptionUsageItem) GetSubscriptionItemName() string {
	if x != nil {
		return x.SubscriptionItemName
	}
	return ""
}

func (x *SubscriptionUsageItem) GetTotalUsage() int64 {
	if x != nil {
		return x.TotalUsage
	}
	return 0
}

func (x *SubscriptionUsageItem) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *SubscriptionUsageItem) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

// Invoice a customer has to pay for subscription usage
type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the invoice
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// PdfDownloadUrl is the url where the customer can download this invoice in pdf format
	PdfDownloadUrl string `protobuf:"bytes,2,opt,name=pdf_download_url,json=pdfDownloadUrl,proto3" json:"pdf_download_url,omitempty"`
	// PeriodStart is the start date of this subscription
	PeriodStart *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	// PeriodEnd is the end date of this subscription
	PeriodEnd *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{5}
}

func (x *Invoice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Invoice) GetPdfDownloadUrl() string {
	if x != nil {
		return x.PdfDownloadUrl
	}
	return ""
}

func (x *Invoice) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *Invoice) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

// Coupon is a amount of free usage which can be granted to a customer
type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the coupon
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of this coupon
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// AmountOff is th amount the customer can use for free
	AmountOff int64 `protobuf:"varint,3,opt,name=amount_off,json=amountOff,proto3" json:"amount_off,omitempty"`
	// Currency of the free usage amount
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	// DurationInMonth defines how many month this coupon is valid for
	DurationInMonth int64 `protobuf:"varint,5,opt,name=duration_in_month,json=durationInMonth,proto3" json:"duration_in_month,omitempty"`
	// CreatedAt is the date the coupon was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// RedeemBy is the date when this coupon can no longer be used
	RedeemBy *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=redeem_by,json=redeemBy,proto3" json:"redeem_by,omitempty"`
	// TimesRedeemed how often this coupon was already consumed
	TimesRedeemed int64 `protobuf:"varint,8,opt,name=times_redeemed,json=timesRedeemed,proto3" json:"times_redeemed,omitempty"`
	// MaxRedemptions defines how often this coupon can be consumed
	MaxRedemptions int64 `protobuf:"varint,9,opt,name=max_redemptions,json=maxRedemptions,proto3" json:"max_redemptions,omitempty"`
	// AmountLeft how many usages are left for this coupon
	AmountLeft int64 `protobuf:"varint,10,opt,name=amount_left,json=amountLeft,proto3" json:"amount_left,omitempty"`
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{6}
}

func (x *Coupon) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Coupon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coupon) GetAmountOff() int64 {
	if x != nil {
		return x.AmountOff
	}
	return 0
}

func (x *Coupon) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Coupon) GetDurationInMonth() int64 {
	if x != nil {
		return x.DurationInMonth
	}
	return 0
}

func (x *Coupon) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Coupon) GetRedeemBy() *timestamppb.Timestamp {
	if x != nil {
		return x.RedeemBy
	}
	return nil
}

func (x *Coupon) GetTimesRedeemed() int64 {
	if x != nil {
		return x.TimesRedeemed
	}
	return 0
}

func (x *Coupon) GetMaxRedemptions() int64 {
	if x != nil {
		return x.MaxRedemptions
	}
	return 0
}

func (x *Coupon) GetAmountLeft() int64 {
	if x != nil {
		return x.AmountLeft
	}
	return 0
}

// PaymentServiceCreateOrUpdateCustomerRequest is the request payload for a payment create or update customer request
type PaymentServiceCreateOrUpdateCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Customer is the customer to modify
	Customer *PaymentCustomer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	// AcceptedTermsAndConditions indicates the modification of the terms and conditions acceptance
	AcceptedTermsAndConditions bool `protobuf:"varint,3,opt,name=accepted_terms_and_conditions,json=acceptedTermsAndConditions,proto3" json:"accepted_terms_and_conditions,omitempty"`
}

func (x *PaymentServiceCreateOrUpdateCustomerRequest) Reset() {
	*x = PaymentServiceCreateOrUpdateCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceCreateOrUpdateCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceCreateOrUpdateCustomerRequest) ProtoMessage() {}

func (x *PaymentServiceCreateOrUpdateCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceCreateOrUpdateCustomerRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceCreateOrUpdateCustomerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentServiceCreateOrUpdateCustomerRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PaymentServiceCreateOrUpdateCustomerRequest) GetCustomer() *PaymentCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *PaymentServiceCreateOrUpdateCustomerRequest) GetAcceptedTermsAndConditions() bool {
	if x != nil {
		return x.AcceptedTermsAndConditions
	}
	return false
}

// PaymentServiceCreateOrUpdateCustomerResponse is the response payload for a payment create or update customer request
type PaymentServiceCreateOrUpdateCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer is the customer
	Customer *PaymentCustomer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *PaymentServiceCreateOrUpdateCustomerResponse) Reset() {
	*x = PaymentServiceCreateOrUpdateCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceCreateOrUpdateCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceCreateOrUpdateCustomerResponse) ProtoMessage() {}

func (x *PaymentServiceCreateOrUpdateCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceCreateOrUpdateCustomerResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceCreateOrUpdateCustomerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentServiceCreateOrUpdateCustomerResponse) GetCustomer() *PaymentCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

// PaymentServiceGetCustomerRequest is the request payload for a payment get customer request
type PaymentServiceGetCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// CustomerId of the customer
	CustomerId string `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *PaymentServiceGetCustomerRequest) Reset() {
	*x = PaymentServiceGetCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetCustomerRequest) ProtoMessage() {}

func (x *PaymentServiceGetCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetCustomerRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetCustomerRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{9}
}

func (x *PaymentServiceGetCustomerRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PaymentServiceGetCustomerRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

// PaymentServiceGetCustomerResponse is the response payload for a payment get customer request
type PaymentServiceGetCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer is the customer
	Customer *PaymentCustomer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *PaymentServiceGetCustomerResponse) Reset() {
	*x = PaymentServiceGetCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetCustomerResponse) ProtoMessage() {}

func (x *PaymentServiceGetCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetCustomerResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetCustomerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{10}
}

func (x *PaymentServiceGetCustomerResponse) GetCustomer() *PaymentCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

// PaymentServiceGetCustomerWithLoginRequest is the request payload for a payment get customer request
type PaymentServiceGetCustomerWithLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *PaymentServiceGetCustomerWithLoginRequest) Reset() {
	*x = PaymentServiceGetCustomerWithLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetCustomerWithLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetCustomerWithLoginRequest) ProtoMessage() {}

func (x *PaymentServiceGetCustomerWithLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetCustomerWithLoginRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetCustomerWithLoginRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{11}
}

func (x *PaymentServiceGetCustomerWithLoginRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// PaymentServiceGetCustomerWithLoginResponse is the response payload for a payment get customer request
type PaymentServiceGetCustomerWithLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer is the customer
	Customer *PaymentCustomer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *PaymentServiceGetCustomerWithLoginResponse) Reset() {
	*x = PaymentServiceGetCustomerWithLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetCustomerWithLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetCustomerWithLoginResponse) ProtoMessage() {}

func (x *PaymentServiceGetCustomerWithLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetCustomerWithLoginResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetCustomerWithLoginResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{12}
}

func (x *PaymentServiceGetCustomerWithLoginResponse) GetCustomer() *PaymentCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

// PaymentServiceCheckIfCustomerExistsRequest is the request payload for a payment check if customer exists request
type PaymentServiceCheckIfCustomerExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *PaymentServiceCheckIfCustomerExistsRequest) Reset() {
	*x = PaymentServiceCheckIfCustomerExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceCheckIfCustomerExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceCheckIfCustomerExistsRequest) ProtoMessage() {}

func (x *PaymentServiceCheckIfCustomerExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceCheckIfCustomerExistsRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceCheckIfCustomerExistsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{13}
}

func (x *PaymentServiceCheckIfCustomerExistsRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// PaymentServiceCheckIfCustomerExistsResponse is the response payload for a payment check if customer exists request
type PaymentServiceCheckIfCustomerExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer is the customer
	Customer *PaymentCustomer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	// Exists indicates if this customer exists
	Exists bool `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *PaymentServiceCheckIfCustomerExistsResponse) Reset() {
	*x = PaymentServiceCheckIfCustomerExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceCheckIfCustomerExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceCheckIfCustomerExistsResponse) ProtoMessage() {}

func (x *PaymentServiceCheckIfCustomerExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceCheckIfCustomerExistsResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceCheckIfCustomerExistsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{14}
}

func (x *PaymentServiceCheckIfCustomerExistsResponse) GetCustomer() *PaymentCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *PaymentServiceCheckIfCustomerExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// PaymentServiceHasPaymentMethodRequest is the request payload for a has payment request
type PaymentServiceHasPaymentMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *PaymentServiceHasPaymentMethodRequest) Reset() {
	*x = PaymentServiceHasPaymentMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceHasPaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceHasPaymentMethodRequest) ProtoMessage() {}

func (x *PaymentServiceHasPaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceHasPaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceHasPaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{15}
}

func (x *PaymentServiceHasPaymentMethodRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// PaymentServiceHasPaymentMethodResponse is the response payload for a has payment request
type PaymentServiceHasPaymentMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Exists indicates if this customer has a payment method
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	// CouponLeft is true if there is still free amount on the coupon left
	CouponLeft bool `protobuf:"varint,2,opt,name=coupon_left,json=couponLeft,proto3" json:"coupon_left,omitempty"`
	// PositiveBalance indicates if the customer still has positive balance
	PositiveBalance bool `protobuf:"varint,3,opt,name=positive_balance,json=positiveBalance,proto3" json:"positive_balance,omitempty"`
}

func (x *PaymentServiceHasPaymentMethodResponse) Reset() {
	*x = PaymentServiceHasPaymentMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceHasPaymentMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceHasPaymentMethodResponse) ProtoMessage() {}

func (x *PaymentServiceHasPaymentMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceHasPaymentMethodResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceHasPaymentMethodResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{16}
}

func (x *PaymentServiceHasPaymentMethodResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *PaymentServiceHasPaymentMethodResponse) GetCouponLeft() bool {
	if x != nil {
		return x.CouponLeft
	}
	return false
}

func (x *PaymentServiceHasPaymentMethodResponse) GetPositiveBalance() bool {
	if x != nil {
		return x.PositiveBalance
	}
	return false
}

// PaymentServiceDeletePaymentMethodRequest is the request payload for a delete payment request
type PaymentServiceDeletePaymentMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *PaymentServiceDeletePaymentMethodRequest) Reset() {
	*x = PaymentServiceDeletePaymentMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceDeletePaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceDeletePaymentMethodRequest) ProtoMessage() {}

func (x *PaymentServiceDeletePaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceDeletePaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceDeletePaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{17}
}

func (x *PaymentServiceDeletePaymentMethodRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// PaymentServiceDeletePaymentMethodResponse is the response payload for a delete payment request
type PaymentServiceDeletePaymentMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaymentServiceDeletePaymentMethodResponse) Reset() {
	*x = PaymentServiceDeletePaymentMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceDeletePaymentMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceDeletePaymentMethodResponse) ProtoMessage() {}

func (x *PaymentServiceDeletePaymentMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceDeletePaymentMethodResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceDeletePaymentMethodResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{18}
}

// PaymentServiceGetSubscriptionUsageRequest is the request payload for a get subscription usage request
type PaymentServiceGetSubscriptionUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *PaymentServiceGetSubscriptionUsageRequest) Reset() {
	*x = PaymentServiceGetSubscriptionUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetSubscriptionUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetSubscriptionUsageRequest) ProtoMessage() {}

func (x *PaymentServiceGetSubscriptionUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetSubscriptionUsageRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetSubscriptionUsageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{19}
}

func (x *PaymentServiceGetSubscriptionUsageRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// PaymentServiceGetSubscriptionUsageResponse is the response payload for a get subscription usage request
type PaymentServiceGetSubscriptionUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SubscriptionUsageItems is a list of usage for all subscriptions
	SubscriptionUsageItems []*SubscriptionUsageItem `protobuf:"bytes,1,rep,name=subscription_usage_items,json=subscriptionUsageItems,proto3" json:"subscription_usage_items,omitempty"`
}

func (x *PaymentServiceGetSubscriptionUsageResponse) Reset() {
	*x = PaymentServiceGetSubscriptionUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetSubscriptionUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetSubscriptionUsageResponse) ProtoMessage() {}

func (x *PaymentServiceGetSubscriptionUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetSubscriptionUsageResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetSubscriptionUsageResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{20}
}

func (x *PaymentServiceGetSubscriptionUsageResponse) GetSubscriptionUsageItems() []*SubscriptionUsageItem {
	if x != nil {
		return x.SubscriptionUsageItems
	}
	return nil
}

// PaymentServiceHasPaymentMethodRequest is the request payload for a get invoices request
type PaymentServiceGetInvoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// CustomerId is the id of the customer
	CustomerId string `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *PaymentServiceGetInvoicesRequest) Reset() {
	*x = PaymentServiceGetInvoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetInvoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetInvoicesRequest) ProtoMessage() {}

func (x *PaymentServiceGetInvoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetInvoicesRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetInvoicesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{21}
}

func (x *PaymentServiceGetInvoicesRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PaymentServiceGetInvoicesRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

// PaymentServiceGetInvoicesResponse is the response payload for a get invoices request
type PaymentServiceGetInvoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Invoices is the list of invoices
	Invoices []*Invoice `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
}

func (x *PaymentServiceGetInvoicesResponse) Reset() {
	*x = PaymentServiceGetInvoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetInvoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetInvoicesResponse) ProtoMessage() {}

func (x *PaymentServiceGetInvoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetInvoicesResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetInvoicesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{22}
}

func (x *PaymentServiceGetInvoicesResponse) GetInvoices() []*Invoice {
	if x != nil {
		return x.Invoices
	}
	return nil
}

// PaymentServiceGetDefaultPricesRequest is the request payload for a get default prices request
type PaymentServiceGetDefaultPricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaymentServiceGetDefaultPricesRequest) Reset() {
	*x = PaymentServiceGetDefaultPricesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetDefaultPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetDefaultPricesRequest) ProtoMessage() {}

func (x *PaymentServiceGetDefaultPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetDefaultPricesRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetDefaultPricesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{23}
}

// PaymentServiceGetDefaultPricesResponse is the response payload for a get default prices request
type PaymentServiceGetDefaultPricesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Prices is the list of default prices
	Prices []*Price `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
}

func (x *PaymentServiceGetDefaultPricesResponse) Reset() {
	*x = PaymentServiceGetDefaultPricesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetDefaultPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetDefaultPricesResponse) ProtoMessage() {}

func (x *PaymentServiceGetDefaultPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetDefaultPricesResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetDefaultPricesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{24}
}

func (x *PaymentServiceGetDefaultPricesResponse) GetPrices() []*Price {
	if x != nil {
		return x.Prices
	}
	return nil
}

// PaymentServiceCheckAdmittedRequest is the request payload for a check admitted request
type PaymentServiceCheckAdmittedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *PaymentServiceCheckAdmittedRequest) Reset() {
	*x = PaymentServiceCheckAdmittedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceCheckAdmittedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceCheckAdmittedRequest) ProtoMessage() {}

func (x *PaymentServiceCheckAdmittedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceCheckAdmittedRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceCheckAdmittedRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{25}
}

func (x *PaymentServiceCheckAdmittedRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// PaymentServiceCheckAdmittedResponse is the response payload for a check admitted request
type PaymentServiceCheckAdmittedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Admitted indicates if the customer is already admitted to use the service
	Admitted bool `protobuf:"varint,1,opt,name=admitted,proto3" json:"admitted,omitempty"`
	// Requested indicates if the customer requested admittance
	Requested bool `protobuf:"varint,2,opt,name=requested,proto3" json:"requested,omitempty"`
}

func (x *PaymentServiceCheckAdmittedResponse) Reset() {
	*x = PaymentServiceCheckAdmittedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceCheckAdmittedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceCheckAdmittedResponse) ProtoMessage() {}

func (x *PaymentServiceCheckAdmittedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceCheckAdmittedResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceCheckAdmittedResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{26}
}

func (x *PaymentServiceCheckAdmittedResponse) GetAdmitted() bool {
	if x != nil {
		return x.Admitted
	}
	return false
}

func (x *PaymentServiceCheckAdmittedResponse) GetRequested() bool {
	if x != nil {
		return x.Requested
	}
	return false
}

// PaymentServiceRequestAdmissionRequest is the request payload for a admission request
type PaymentServiceRequestAdmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Customer is the customer
	Customer *PaymentCustomer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	// AcceptedTermsAndConditions indicates if the customer already accepted the terms and conditions
	AcceptedTermsAndConditions bool `protobuf:"varint,3,opt,name=accepted_terms_and_conditions,json=acceptedTermsAndConditions,proto3" json:"accepted_terms_and_conditions,omitempty"`
	// EmailConsent indicates if the customer already gave consent to email
	EmailConsent bool `protobuf:"varint,4,opt,name=email_consent,json=emailConsent,proto3" json:"email_consent,omitempty"`
}

func (x *PaymentServiceRequestAdmissionRequest) Reset() {
	*x = PaymentServiceRequestAdmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceRequestAdmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceRequestAdmissionRequest) ProtoMessage() {}

func (x *PaymentServiceRequestAdmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceRequestAdmissionRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceRequestAdmissionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{27}
}

func (x *PaymentServiceRequestAdmissionRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PaymentServiceRequestAdmissionRequest) GetCustomer() *PaymentCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *PaymentServiceRequestAdmissionRequest) GetAcceptedTermsAndConditions() bool {
	if x != nil {
		return x.AcceptedTermsAndConditions
	}
	return false
}

func (x *PaymentServiceRequestAdmissionRequest) GetEmailConsent() bool {
	if x != nil {
		return x.EmailConsent
	}
	return false
}

// PaymentServiceRequestAdmissionResponse is the response payload for a admission request
type PaymentServiceRequestAdmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaymentServiceRequestAdmissionResponse) Reset() {
	*x = PaymentServiceRequestAdmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceRequestAdmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceRequestAdmissionResponse) ProtoMessage() {}

func (x *PaymentServiceRequestAdmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceRequestAdmissionResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceRequestAdmissionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{28}
}

// PaymentServiceHasChargeableResourcesRequest is the request payload for a has chargeable request
type PaymentServiceHasChargeableResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *PaymentServiceHasChargeableResourcesRequest) Reset() {
	*x = PaymentServiceHasChargeableResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceHasChargeableResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceHasChargeableResourcesRequest) ProtoMessage() {}

func (x *PaymentServiceHasChargeableResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceHasChargeableResourcesRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceHasChargeableResourcesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{29}
}

func (x *PaymentServiceHasChargeableResourcesRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// PaymentServiceHasChargeableResourcesResponse is the response payload for a has chargeable request
type PaymentServiceHasChargeableResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HasResources indicates if the customer has actually chargable resources
	HasResources bool `protobuf:"varint,1,opt,name=has_resources,json=hasResources,proto3" json:"has_resources,omitempty"`
}

func (x *PaymentServiceHasChargeableResourcesResponse) Reset() {
	*x = PaymentServiceHasChargeableResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceHasChargeableResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceHasChargeableResourcesResponse) ProtoMessage() {}

func (x *PaymentServiceHasChargeableResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceHasChargeableResourcesResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceHasChargeableResourcesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{30}
}

func (x *PaymentServiceHasChargeableResourcesResponse) GetHasResources() bool {
	if x != nil {
		return x.HasResources
	}
	return false
}

// PayentServiceSetOnboardedRequest changes the onboarded status of the given customer
type PaymentServiceSetOnboardedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Onboarded indicates if the customer has seen the onboarde message
	Onboarded bool `protobuf:"varint,2,opt,name=onboarded,proto3" json:"onboarded,omitempty"`
}

func (x *PaymentServiceSetOnboardedRequest) Reset() {
	*x = PaymentServiceSetOnboardedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceSetOnboardedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceSetOnboardedRequest) ProtoMessage() {}

func (x *PaymentServiceSetOnboardedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceSetOnboardedRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceSetOnboardedRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{31}
}

func (x *PaymentServiceSetOnboardedRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PaymentServiceSetOnboardedRequest) GetOnboarded() bool {
	if x != nil {
		return x.Onboarded
	}
	return false
}

// PaymentServiceSetOnboardedResponse respond to the changed status of the given customer
type PaymentServiceSetOnboardedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Onboarded indicates if the customer has seen the onboarded message
	Onboarded bool `protobuf:"varint,1,opt,name=onboarded,proto3" json:"onboarded,omitempty"`
}

func (x *PaymentServiceSetOnboardedResponse) Reset() {
	*x = PaymentServiceSetOnboardedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceSetOnboardedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceSetOnboardedResponse) ProtoMessage() {}

func (x *PaymentServiceSetOnboardedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceSetOnboardedResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceSetOnboardedResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{32}
}

func (x *PaymentServiceSetOnboardedResponse) GetOnboarded() bool {
	if x != nil {
		return x.Onboarded
	}
	return false
}

// PaymentServiceGetOnboardedRequest check the onboarded status
type PaymentServiceGetOnboardedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the customer
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *PaymentServiceGetOnboardedRequest) Reset() {
	*x = PaymentServiceGetOnboardedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetOnboardedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetOnboardedRequest) ProtoMessage() {}

func (x *PaymentServiceGetOnboardedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetOnboardedRequest.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetOnboardedRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{33}
}

func (x *PaymentServiceGetOnboardedRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// PaymentServiceGetOnboardedRequest returns the onboarded status
type PaymentServiceGetOnboardedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Onboarded indicates if the customer has seen the onboarded message
	Onboarded bool `protobuf:"varint,1,opt,name=onboarded,proto3" json:"onboarded,omitempty"`
}

func (x *PaymentServiceGetOnboardedResponse) Reset() {
	*x = PaymentServiceGetOnboardedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_payment_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentServiceGetOnboardedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentServiceGetOnboardedResponse) ProtoMessage() {}

func (x *PaymentServiceGetOnboardedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_payment_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentServiceGetOnboardedResponse.ProtoReflect.Descriptor instead.
func (*PaymentServiceGetOnboardedResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_payment_proto_rawDescGZIP(), []int{34}
}

func (x *PaymentServiceGetOnboardedResponse) GetOnboarded() bool {
	if x != nil {
		return x.Onboarded
	}
	return false
}

var File_api_v1_payment_proto protoreflect.FileDescriptor

var file_api_v1_payment_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x13,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x05,
	0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x48, 0x03, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x48, 0x04, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x06, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a,
	0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x48, 0x05, 0x52,
	0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x76, 0x61,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x03, 0x76, 0x61, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x76, 0x61, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x78, 0x70, 0x59, 0x65, 0x61, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x73, 0x74, 0x34,
	0x22, 0x81, 0x02, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x75, 0x6e, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x6e, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18,
	0xf4, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x9a, 0x02, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x16, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x22, 0xbd,
	0x01, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x64,
	0x66, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x64, 0x66, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x22, 0xf8,
	0x02, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x66, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x37, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x2b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x02, 0x18, 0x80, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x33, 0x0a, 0x08, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x41, 0x0a, 0x1d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x2c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x20, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x02, 0x18, 0x80, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x58, 0x0a, 0x21, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x29, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0x80,
	0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x61, 0x0a, 0x2a, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x2a, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x66, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x02, 0x18, 0x80, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x7a, 0x0a, 0x2b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x66, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x25, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x61, 0x73, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0x80, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x26, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x61, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x4c, 0x0a, 0x28, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0x80, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22,
	0x2b, 0x0a, 0x29, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x29,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x02, 0x18, 0x80, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x2a,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x18, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x16, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x70, 0x0a, 0x20, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18,
	0x80, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x12, 0x18, 0x12, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x21, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x08, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x25, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x4f, 0x0a, 0x26, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x22, 0x3a, 0x0a, 0x22, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x5f, 0x0a,
	0x23, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0xda,
	0x01, 0x0a, 0x25, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x33,
	0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x1d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x64, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x26, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x2b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x61, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x53, 0x0a, 0x2c, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x61, 0x73, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22,
	0x57, 0x0a, 0x21, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x22, 0x42, 0x0a, 0x22, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x22, 0x39, 0x0a, 0x21,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x42, 0x0a, 0x22, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x2a, 0x6b, 0x0a, 0x0d, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x1a,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x43,
	0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x49,
	0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x03, 0x2a, 0x96, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f,
	0x52, 0x4b, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4b, 0x55, 0x42, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x45, 0x53, 0x10,
	0x05, 0x32, 0x84, 0x0e, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12,
	0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x05, 0xc2, 0xf3, 0x18, 0x01,
	0x01, 0x12, 0x6d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0xc2, 0xf3, 0x18, 0x01, 0x01, 0xe8, 0xf3, 0x18, 0x02,
	0x12, 0x84, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x05, 0xc2, 0xf3, 0x18, 0x01, 0x01, 0x12, 0x8b, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x66, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x66, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0xc2, 0xf3, 0x18, 0x01,
	0x01, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x7f, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x48, 0x61, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x48, 0x61, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xc2, 0xf3, 0x18, 0x04, 0x01, 0x02,
	0x03, 0x04, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x81, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x05, 0xc2, 0xf3, 0x18, 0x01, 0x01, 0x12, 0x88, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0xc2, 0xf3, 0x18, 0x01,
	0x01, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x6d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0xc2, 0xf3, 0x18, 0x01, 0x01,
	0xe8, 0xf3, 0x18, 0x02, 0x12, 0x7b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd8, 0xf3, 0x18, 0x01, 0xe8, 0xf3, 0x18,
	0x02, 0x12, 0x76, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xc2, 0xf3, 0x18,
	0x04, 0x01, 0x02, 0x03, 0x04, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x7d, 0x0a, 0x10, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0xc2, 0xf3,
	0x18, 0x02, 0x01, 0x02, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x91, 0x01, 0x0a, 0x16, 0x48, 0x61, 0x73,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x61, 0x73, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x48, 0x61, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c,
	0xc2, 0xf3, 0x18, 0x04, 0x01, 0x02, 0x03, 0x04, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x6c, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x05, 0xc2, 0xf3, 0x18, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x05, 0xc2, 0xf3, 0x18, 0x01, 0x01, 0x42, 0x85, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa,
	0x02, 0x06, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x70, 0x69, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x12, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_payment_proto_rawDescOnce sync.Once
	file_api_v1_payment_proto_rawDescData = file_api_v1_payment_proto_rawDesc
)

func file_api_v1_payment_proto_rawDescGZIP() []byte {
	file_api_v1_payment_proto_rawDescOnce.Do(func() {
		file_api_v1_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_payment_proto_rawDescData)
	})
	return file_api_v1_payment_proto_rawDescData
}

var file_api_v1_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_api_v1_payment_proto_goTypes = []interface{}{
	(PaymentMethod)(0),            // 0: api.v1.PaymentMethod
	(ProductType)(0),              // 1: api.v1.ProductType
	(*PaymentCustomer)(nil),       // 2: api.v1.PaymentCustomer
	(*Card)(nil),                  // 3: api.v1.Card
	(*Price)(nil),                 // 4: api.v1.Price
	(*Address)(nil),               // 5: api.v1.Address
	(*SubscriptionUsageItem)(nil), // 6: api.v1.SubscriptionUsageItem
	(*Invoice)(nil),               // 7: api.v1.Invoice
	(*Coupon)(nil),                // 8: api.v1.Coupon
	(*PaymentServiceCreateOrUpdateCustomerRequest)(nil),  // 9: api.v1.PaymentServiceCreateOrUpdateCustomerRequest
	(*PaymentServiceCreateOrUpdateCustomerResponse)(nil), // 10: api.v1.PaymentServiceCreateOrUpdateCustomerResponse
	(*PaymentServiceGetCustomerRequest)(nil),             // 11: api.v1.PaymentServiceGetCustomerRequest
	(*PaymentServiceGetCustomerResponse)(nil),            // 12: api.v1.PaymentServiceGetCustomerResponse
	(*PaymentServiceGetCustomerWithLoginRequest)(nil),    // 13: api.v1.PaymentServiceGetCustomerWithLoginRequest
	(*PaymentServiceGetCustomerWithLoginResponse)(nil),   // 14: api.v1.PaymentServiceGetCustomerWithLoginResponse
	(*PaymentServiceCheckIfCustomerExistsRequest)(nil),   // 15: api.v1.PaymentServiceCheckIfCustomerExistsRequest
	(*PaymentServiceCheckIfCustomerExistsResponse)(nil),  // 16: api.v1.PaymentServiceCheckIfCustomerExistsResponse
	(*PaymentServiceHasPaymentMethodRequest)(nil),        // 17: api.v1.PaymentServiceHasPaymentMethodRequest
	(*PaymentServiceHasPaymentMethodResponse)(nil),       // 18: api.v1.PaymentServiceHasPaymentMethodResponse
	(*PaymentServiceDeletePaymentMethodRequest)(nil),     // 19: api.v1.PaymentServiceDeletePaymentMethodRequest
	(*PaymentServiceDeletePaymentMethodResponse)(nil),    // 20: api.v1.PaymentServiceDeletePaymentMethodResponse
	(*PaymentServiceGetSubscriptionUsageRequest)(nil),    // 21: api.v1.PaymentServiceGetSubscriptionUsageRequest
	(*PaymentServiceGetSubscriptionUsageResponse)(nil),   // 22: api.v1.PaymentServiceGetSubscriptionUsageResponse
	(*PaymentServiceGetInvoicesRequest)(nil),             // 23: api.v1.PaymentServiceGetInvoicesRequest
	(*PaymentServiceGetInvoicesResponse)(nil),            // 24: api.v1.PaymentServiceGetInvoicesResponse
	(*PaymentServiceGetDefaultPricesRequest)(nil),        // 25: api.v1.PaymentServiceGetDefaultPricesRequest
	(*PaymentServiceGetDefaultPricesResponse)(nil),       // 26: api.v1.PaymentServiceGetDefaultPricesResponse
	(*PaymentServiceCheckAdmittedRequest)(nil),           // 27: api.v1.PaymentServiceCheckAdmittedRequest
	(*PaymentServiceCheckAdmittedResponse)(nil),          // 28: api.v1.PaymentServiceCheckAdmittedResponse
	(*PaymentServiceRequestAdmissionRequest)(nil),        // 29: api.v1.PaymentServiceRequestAdmissionRequest
	(*PaymentServiceRequestAdmissionResponse)(nil),       // 30: api.v1.PaymentServiceRequestAdmissionResponse
	(*PaymentServiceHasChargeableResourcesRequest)(nil),  // 31: api.v1.PaymentServiceHasChargeableResourcesRequest
	(*PaymentServiceHasChargeableResourcesResponse)(nil), // 32: api.v1.PaymentServiceHasChargeableResourcesResponse
	(*PaymentServiceSetOnboardedRequest)(nil),            // 33: api.v1.PaymentServiceSetOnboardedRequest
	(*PaymentServiceSetOnboardedResponse)(nil),           // 34: api.v1.PaymentServiceSetOnboardedResponse
	(*PaymentServiceGetOnboardedRequest)(nil),            // 35: api.v1.PaymentServiceGetOnboardedRequest
	(*PaymentServiceGetOnboardedResponse)(nil),           // 36: api.v1.PaymentServiceGetOnboardedResponse
	(*timestamppb.Timestamp)(nil),                        // 37: google.protobuf.Timestamp
}
var file_api_v1_payment_proto_depIdxs = []int32{
	3,  // 0: api.v1.PaymentCustomer.card:type_name -> api.v1.Card
	4,  // 1: api.v1.PaymentCustomer.prices:type_name -> api.v1.Price
	5,  // 2: api.v1.PaymentCustomer.address:type_name -> api.v1.Address
	8,  // 3: api.v1.PaymentCustomer.coupon:type_name -> api.v1.Coupon
	0,  // 4: api.v1.PaymentCustomer.payment_method:type_name -> api.v1.PaymentMethod
	1,  // 5: api.v1.Price.product_type:type_name -> api.v1.ProductType
	37, // 6: api.v1.SubscriptionUsageItem.period_start:type_name -> google.protobuf.Timestamp
	37, // 7: api.v1.SubscriptionUsageItem.period_end:type_name -> google.protobuf.Timestamp
	37, // 8: api.v1.Invoice.period_start:type_name -> google.protobuf.Timestamp
	37, // 9: api.v1.Invoice.period_end:type_name -> google.protobuf.Timestamp
	37, // 10: api.v1.Coupon.created_at:type_name -> google.protobuf.Timestamp
	37, // 11: api.v1.Coupon.redeem_by:type_name -> google.protobuf.Timestamp
	2,  // 12: api.v1.PaymentServiceCreateOrUpdateCustomerRequest.customer:type_name -> api.v1.PaymentCustomer
	2,  // 13: api.v1.PaymentServiceCreateOrUpdateCustomerResponse.customer:type_name -> api.v1.PaymentCustomer
	2,  // 14: api.v1.PaymentServiceGetCustomerResponse.customer:type_name -> api.v1.PaymentCustomer
	2,  // 15: api.v1.PaymentServiceGetCustomerWithLoginResponse.customer:type_name -> api.v1.PaymentCustomer
	2,  // 16: api.v1.PaymentServiceCheckIfCustomerExistsResponse.customer:type_name -> api.v1.PaymentCustomer
	6,  // 17: api.v1.PaymentServiceGetSubscriptionUsageResponse.subscription_usage_items:type_name -> api.v1.SubscriptionUsageItem
	7,  // 18: api.v1.PaymentServiceGetInvoicesResponse.invoices:type_name -> api.v1.Invoice
	4,  // 19: api.v1.PaymentServiceGetDefaultPricesResponse.prices:type_name -> api.v1.Price
	2,  // 20: api.v1.PaymentServiceRequestAdmissionRequest.customer:type_name -> api.v1.PaymentCustomer
	9,  // 21: api.v1.PaymentService.CreateOrUpdateCustomer:input_type -> api.v1.PaymentServiceCreateOrUpdateCustomerRequest
	11, // 22: api.v1.PaymentService.GetCustomer:input_type -> api.v1.PaymentServiceGetCustomerRequest
	13, // 23: api.v1.PaymentService.GetCustomerWithLogin:input_type -> api.v1.PaymentServiceGetCustomerWithLoginRequest
	15, // 24: api.v1.PaymentService.CheckIfCustomerExists:input_type -> api.v1.PaymentServiceCheckIfCustomerExistsRequest
	17, // 25: api.v1.PaymentService.HasPaymentMethod:input_type -> api.v1.PaymentServiceHasPaymentMethodRequest
	19, // 26: api.v1.PaymentService.DeletePaymentMethod:input_type -> api.v1.PaymentServiceDeletePaymentMethodRequest
	21, // 27: api.v1.PaymentService.GetSubscriptionUsage:input_type -> api.v1.PaymentServiceGetSubscriptionUsageRequest
	23, // 28: api.v1.PaymentService.GetInvoices:input_type -> api.v1.PaymentServiceGetInvoicesRequest
	25, // 29: api.v1.PaymentService.GetDefaultPrices:input_type -> api.v1.PaymentServiceGetDefaultPricesRequest
	27, // 30: api.v1.PaymentService.CheckAdmitted:input_type -> api.v1.PaymentServiceCheckAdmittedRequest
	29, // 31: api.v1.PaymentService.RequestAdmission:input_type -> api.v1.PaymentServiceRequestAdmissionRequest
	31, // 32: api.v1.PaymentService.HasChargeableResources:input_type -> api.v1.PaymentServiceHasChargeableResourcesRequest
	33, // 33: api.v1.PaymentService.SetOnboarded:input_type -> api.v1.PaymentServiceSetOnboardedRequest
	35, // 34: api.v1.PaymentService.GetOnboarded:input_type -> api.v1.PaymentServiceGetOnboardedRequest
	10, // 35: api.v1.PaymentService.CreateOrUpdateCustomer:output_type -> api.v1.PaymentServiceCreateOrUpdateCustomerResponse
	12, // 36: api.v1.PaymentService.GetCustomer:output_type -> api.v1.PaymentServiceGetCustomerResponse
	14, // 37: api.v1.PaymentService.GetCustomerWithLogin:output_type -> api.v1.PaymentServiceGetCustomerWithLoginResponse
	16, // 38: api.v1.PaymentService.CheckIfCustomerExists:output_type -> api.v1.PaymentServiceCheckIfCustomerExistsResponse
	18, // 39: api.v1.PaymentService.HasPaymentMethod:output_type -> api.v1.PaymentServiceHasPaymentMethodResponse
	20, // 40: api.v1.PaymentService.DeletePaymentMethod:output_type -> api.v1.PaymentServiceDeletePaymentMethodResponse
	22, // 41: api.v1.PaymentService.GetSubscriptionUsage:output_type -> api.v1.PaymentServiceGetSubscriptionUsageResponse
	24, // 42: api.v1.PaymentService.GetInvoices:output_type -> api.v1.PaymentServiceGetInvoicesResponse
	26, // 43: api.v1.PaymentService.GetDefaultPrices:output_type -> api.v1.PaymentServiceGetDefaultPricesResponse
	28, // 44: api.v1.PaymentService.CheckAdmitted:output_type -> api.v1.PaymentServiceCheckAdmittedResponse
	30, // 45: api.v1.PaymentService.RequestAdmission:output_type -> api.v1.PaymentServiceRequestAdmissionResponse
	32, // 46: api.v1.PaymentService.HasChargeableResources:output_type -> api.v1.PaymentServiceHasChargeableResourcesResponse
	34, // 47: api.v1.PaymentService.SetOnboarded:output_type -> api.v1.PaymentServiceSetOnboardedResponse
	36, // 48: api.v1.PaymentService.GetOnboarded:output_type -> api.v1.PaymentServiceGetOnboardedResponse
	35, // [35:49] is the sub-list for method output_type
	21, // [21:35] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_api_v1_payment_proto_init() }
func file_api_v1_payment_proto_init() {
	if File_api_v1_payment_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionUsageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceCreateOrUpdateCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceCreateOrUpdateCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetCustomerWithLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetCustomerWithLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceCheckIfCustomerExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceCheckIfCustomerExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceHasPaymentMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceHasPaymentMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceDeletePaymentMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceDeletePaymentMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetSubscriptionUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetSubscriptionUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetInvoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetInvoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetDefaultPricesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetDefaultPricesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceCheckAdmittedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceCheckAdmittedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceRequestAdmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceRequestAdmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceHasChargeableResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceHasChargeableResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceSetOnboardedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceSetOnboardedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetOnboardedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_payment_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentServiceGetOnboardedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_payment_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_api_v1_payment_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_payment_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_payment_proto_goTypes,
		DependencyIndexes: file_api_v1_payment_proto_depIdxs,
		EnumInfos:         file_api_v1_payment_proto_enumTypes,
		MessageInfos:      file_api_v1_payment_proto_msgTypes,
	}.Build()
	File_api_v1_payment_proto = out.File
	file_api_v1_payment_proto_rawDesc = nil
	file_api_v1_payment_proto_goTypes = nil
	file_api_v1_payment_proto_depIdxs = nil
}
