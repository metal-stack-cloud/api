// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: api/v1/tenant.proto

package apiv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Tenant is a customer of the platform
type Tenant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Name of the tenant
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Email of the tenant
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Description of this tenant
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// AvatarUrl of the tenant
	AvatarUrl string `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// OauthProvider of the tenant
	OauthProvider OAuthProvider `protobuf:"varint,6,opt,name=oauth_provider,json=oauthProvider,proto3,enum=api.v1.OAuthProvider" json:"oauth_provider,omitempty"`
	// PaymentDetails the tenant provides
	PaymentDetails *PaymentDetails `protobuf:"bytes,8,opt,name=payment_details,json=paymentDetails,proto3" json:"payment_details,omitempty"`
	// Admitted indicates if this tenant is allowed to use the platform
	Admitted bool `protobuf:"varint,9,opt,name=admitted,proto3" json:"admitted,omitempty"`
	// PhoneNumber of the tenant
	PhoneNumber string `protobuf:"bytes,10,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// TermsAndConditions the tenant accepted
	TermsAndConditions *TermsAndConditions `protobuf:"bytes,11,opt,name=terms_and_conditions,json=termsAndConditions,proto3" json:"terms_and_conditions,omitempty"`
	// EmailConsent the tenant made
	EmailConsent bool `protobuf:"varint,12,opt,name=email_consent,json=emailConsent,proto3" json:"email_consent,omitempty"`
	// Onboarded checks if the tenant was asked to be onboarded
	Onboarded bool `protobuf:"varint,13,opt,name=onboarded,proto3" json:"onboarded,omitempty"`
	// CreatedBy stores who created this tenant
	CreatedBy string `protobuf:"bytes,15,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// CreatedAt the date when this tenant was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt the date when this tenant was updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// DeletedAt the date when this tenant was deleted
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tenant.ProtoReflect.Descriptor instead.
func (*Tenant) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{0}
}

func (x *Tenant) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Tenant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tenant) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Tenant) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tenant) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Tenant) GetOauthProvider() OAuthProvider {
	if x != nil {
		return x.OauthProvider
	}
	return OAuthProvider_O_AUTH_PROVIDER_UNSPECIFIED
}

func (x *Tenant) GetPaymentDetails() *PaymentDetails {
	if x != nil {
		return x.PaymentDetails
	}
	return nil
}

func (x *Tenant) GetAdmitted() bool {
	if x != nil {
		return x.Admitted
	}
	return false
}

func (x *Tenant) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Tenant) GetTermsAndConditions() *TermsAndConditions {
	if x != nil {
		return x.TermsAndConditions
	}
	return nil
}

func (x *Tenant) GetEmailConsent() bool {
	if x != nil {
		return x.EmailConsent
	}
	return false
}

func (x *Tenant) GetOnboarded() bool {
	if x != nil {
		return x.Onboarded
	}
	return false
}

func (x *Tenant) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Tenant) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Tenant) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Tenant) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// TenantMember defines a user that participates at a tenant
type TenantMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id is the user id of the member
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Role is the role of the member
	Role TenantRole `protobuf:"varint,2,opt,name=role,proto3,enum=api.v1.TenantRole" json:"role,omitempty"`
	// CreatedAt the date when the member was added to the tenant
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *TenantMember) Reset() {
	*x = TenantMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantMember) ProtoMessage() {}

func (x *TenantMember) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantMember.ProtoReflect.Descriptor instead.
func (*TenantMember) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{1}
}

func (x *TenantMember) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TenantMember) GetRole() TenantRole {
	if x != nil {
		return x.Role
	}
	return TenantRole_TENANT_ROLE_UNSPECIFIED
}

func (x *TenantMember) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// TenantInvite defines invite to tenant
type TenantInvite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secret is the secret part of the invite, typically part of the url
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	// TargetTenant is the tenant id for which this invite was created
	TargetTenant string `protobuf:"bytes,2,opt,name=target_tenant,json=targetTenant,proto3" json:"target_tenant,omitempty"`
	// Role is the role in this tenant the user will get after accepting the invitation
	Role TenantRole `protobuf:"varint,3,opt,name=role,proto3,enum=api.v1.TenantRole" json:"role,omitempty"`
	// Joined is false as long as a user has not accepted the invite
	Joined bool `protobuf:"varint,4,opt,name=joined,proto3" json:"joined,omitempty"`
	// TargetTenantName is the tenant name for which this invite was created
	TargetTenantName string `protobuf:"bytes,5,opt,name=target_tenant_name,json=targetTenantName,proto3" json:"target_tenant_name,omitempty"`
	// Tenant is the login of tenant who invites to join this tenant
	Tenant string `protobuf:"bytes,6,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// TenantName is the name of tenant who invites to join this tenant
	TenantName string `protobuf:"bytes,7,opt,name=tenant_name,json=tenantName,proto3" json:"tenant_name,omitempty"`
	// ExpiresAt the date when this invite expires
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// JoinedAt the date when the member accepted this invite
	JoinedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
}

func (x *TenantInvite) Reset() {
	*x = TenantInvite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInvite) ProtoMessage() {}

func (x *TenantInvite) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInvite.ProtoReflect.Descriptor instead.
func (*TenantInvite) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{2}
}

func (x *TenantInvite) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *TenantInvite) GetTargetTenant() string {
	if x != nil {
		return x.TargetTenant
	}
	return ""
}

func (x *TenantInvite) GetRole() TenantRole {
	if x != nil {
		return x.Role
	}
	return TenantRole_TENANT_ROLE_UNSPECIFIED
}

func (x *TenantInvite) GetJoined() bool {
	if x != nil {
		return x.Joined
	}
	return false
}

func (x *TenantInvite) GetTargetTenantName() string {
	if x != nil {
		return x.TargetTenantName
	}
	return ""
}

func (x *TenantInvite) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *TenantInvite) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

func (x *TenantInvite) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *TenantInvite) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

// PaymentDetails of a tenant
type PaymentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CustomerId at the payment processor
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// PaymentMethodId of the tenant at the payment processor
	PaymentMethodId *string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3,oneof" json:"payment_method_id,omitempty"`
	// SubscriptionId at the payment processor
	SubscriptionId string `protobuf:"bytes,3,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// Coupons a list of coupons the tenant has
	Coupons []*Coupon `protobuf:"bytes,4,rep,name=coupons,proto3" json:"coupons,omitempty"`
	// Vat which applies to this tenant
	Vat string `protobuf:"bytes,5,opt,name=vat,proto3" json:"vat,omitempty"`
}

func (x *PaymentDetails) Reset() {
	*x = PaymentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentDetails) ProtoMessage() {}

func (x *PaymentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentDetails.ProtoReflect.Descriptor instead.
func (*PaymentDetails) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentDetails) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *PaymentDetails) GetPaymentMethodId() string {
	if x != nil && x.PaymentMethodId != nil {
		return *x.PaymentMethodId
	}
	return ""
}

func (x *PaymentDetails) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *PaymentDetails) GetCoupons() []*Coupon {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *PaymentDetails) GetVat() string {
	if x != nil {
		return x.Vat
	}
	return ""
}

// PaymentDetailsUpdate is used to update PaymentDetails
type PaymentDetailsUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CustomerId at the payment processor
	CustomerId *string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3,oneof" json:"customer_id,omitempty"`
	// PaymentMethodId of the tenant at the payment processor
	PaymentMethodId *string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3,oneof" json:"payment_method_id,omitempty"`
	// SubscriptionId at the payment processor
	SubscriptionId *string `protobuf:"bytes,3,opt,name=subscription_id,json=subscriptionId,proto3,oneof" json:"subscription_id,omitempty"`
	// Vat which applies to this tenant
	Vat *string `protobuf:"bytes,4,opt,name=vat,proto3,oneof" json:"vat,omitempty"`
}

func (x *PaymentDetailsUpdate) Reset() {
	*x = PaymentDetailsUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentDetailsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentDetailsUpdate) ProtoMessage() {}

func (x *PaymentDetailsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentDetailsUpdate.ProtoReflect.Descriptor instead.
func (*PaymentDetailsUpdate) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentDetailsUpdate) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *PaymentDetailsUpdate) GetPaymentMethodId() string {
	if x != nil && x.PaymentMethodId != nil {
		return *x.PaymentMethodId
	}
	return ""
}

func (x *PaymentDetailsUpdate) GetSubscriptionId() string {
	if x != nil && x.SubscriptionId != nil {
		return *x.SubscriptionId
	}
	return ""
}

func (x *PaymentDetailsUpdate) GetVat() string {
	if x != nil && x.Vat != nil {
		return *x.Vat
	}
	return ""
}

// TermsAndConditions the tenant accepted
type TermsAndConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Accepted indicates if the tenant accepted the terms and conditions
	Accepted bool `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	// When is the date when the tenant accepted the terms and conditions
	When *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
}

func (x *TermsAndConditions) Reset() {
	*x = TermsAndConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermsAndConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermsAndConditions) ProtoMessage() {}

func (x *TermsAndConditions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermsAndConditions.ProtoReflect.Descriptor instead.
func (*TermsAndConditions) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{5}
}

func (x *TermsAndConditions) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *TermsAndConditions) GetWhen() *timestamppb.Timestamp {
	if x != nil {
		return x.When
	}
	return nil
}

// TermsAndConditionsUpdate
type TermsAndConditionsUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Accepted indicates if the tenant accepted the terms and conditions
	Accepted *bool `protobuf:"varint,1,opt,name=accepted,proto3,oneof" json:"accepted,omitempty"`
	// When is the date when the tenant accepted the terms and conditions
	When *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=when,proto3,oneof" json:"when,omitempty"`
}

func (x *TermsAndConditionsUpdate) Reset() {
	*x = TermsAndConditionsUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermsAndConditionsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermsAndConditionsUpdate) ProtoMessage() {}

func (x *TermsAndConditionsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermsAndConditionsUpdate.ProtoReflect.Descriptor instead.
func (*TermsAndConditionsUpdate) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{6}
}

func (x *TermsAndConditionsUpdate) GetAccepted() bool {
	if x != nil && x.Accepted != nil {
		return *x.Accepted
	}
	return false
}

func (x *TermsAndConditionsUpdate) GetWhen() *timestamppb.Timestamp {
	if x != nil {
		return x.When
	}
	return nil
}

// TenantServiceListRequest is the request payload of the tenant list request
type TenantServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id filters tenants by id
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Name filters tenants by name
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *TenantServiceListRequest) Reset() {
	*x = TenantServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceListRequest) ProtoMessage() {}

func (x *TenantServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceListRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{7}
}

func (x *TenantServiceListRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *TenantServiceListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// TenantServiceGetRequest is the request payload of the tenant get request
type TenantServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *TenantServiceGetRequest) Reset() {
	*x = TenantServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceGetRequest) ProtoMessage() {}

func (x *TenantServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceGetRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{8}
}

func (x *TenantServiceGetRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// TenantServiceCreateRequest is the request payload of the tenant create request
type TenantServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of this tenant
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of this tenant
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Email of the tenant, if not set will be inherited from the creator
	Email *string `protobuf:"bytes,3,opt,name=email,proto3,oneof" json:"email,omitempty"`
	// AvatarUrl of the tenant
	AvatarUrl *string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3,oneof" json:"avatar_url,omitempty"`
	// PhoneNumber of the tenant
	PhoneNumber *string `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3,oneof" json:"phone_number,omitempty"`
}

func (x *TenantServiceCreateRequest) Reset() {
	*x = TenantServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceCreateRequest) ProtoMessage() {}

func (x *TenantServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{9}
}

func (x *TenantServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TenantServiceCreateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *TenantServiceCreateRequest) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *TenantServiceCreateRequest) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *TenantServiceCreateRequest) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

// TenantServiceCreateOrUpdateRequest is the request payload of the tenant create or update request
type TenantServiceCreateOrUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tenant the tenant to create or update
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *TenantServiceCreateOrUpdateRequest) Reset() {
	*x = TenantServiceCreateOrUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceCreateOrUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceCreateOrUpdateRequest) ProtoMessage() {}

func (x *TenantServiceCreateOrUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceCreateOrUpdateRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceCreateOrUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{10}
}

func (x *TenantServiceCreateOrUpdateRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// TenantServiceUpdateRequest is the request payload of the tenant update request
type TenantServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Name of the tenant
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Email of the tenant
	Email *string `protobuf:"bytes,3,opt,name=email,proto3,oneof" json:"email,omitempty"`
	// Description of this tenant
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// AvatarUrl of the tenant
	AvatarUrl *string `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3,oneof" json:"avatar_url,omitempty"`
	// PaymentDetails of the tenant
	PaymentDetails *PaymentDetailsUpdate `protobuf:"bytes,8,opt,name=payment_details,json=paymentDetails,proto3,oneof" json:"payment_details,omitempty"`
	// TermsAndConditions of the tenant
	TermsAndConditions *TermsAndConditionsUpdate `protobuf:"bytes,9,opt,name=terms_and_conditions,json=termsAndConditions,proto3,oneof" json:"terms_and_conditions,omitempty"`
	// Onboarded checks if the tenant was asked to be onboarded
	Onboarded *bool `protobuf:"varint,13,opt,name=onboarded,proto3,oneof" json:"onboarded,omitempty"`
}

func (x *TenantServiceUpdateRequest) Reset() {
	*x = TenantServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceUpdateRequest) ProtoMessage() {}

func (x *TenantServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{11}
}

func (x *TenantServiceUpdateRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *TenantServiceUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TenantServiceUpdateRequest) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *TenantServiceUpdateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *TenantServiceUpdateRequest) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *TenantServiceUpdateRequest) GetPaymentDetails() *PaymentDetailsUpdate {
	if x != nil {
		return x.PaymentDetails
	}
	return nil
}

func (x *TenantServiceUpdateRequest) GetTermsAndConditions() *TermsAndConditionsUpdate {
	if x != nil {
		return x.TermsAndConditions
	}
	return nil
}

func (x *TenantServiceUpdateRequest) GetOnboarded() bool {
	if x != nil && x.Onboarded != nil {
		return *x.Onboarded
	}
	return false
}

// TenantServiceDeleteRequest is the request payload of the tenant delete request
type TenantServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *TenantServiceDeleteRequest) Reset() {
	*x = TenantServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceDeleteRequest) ProtoMessage() {}

func (x *TenantServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{12}
}

func (x *TenantServiceDeleteRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// TenantServiceGetResponse is the response payload of the tenant get request
type TenantServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tenant is the tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// TenantMembers of this tenant
	TenantMembers []*TenantMember `protobuf:"bytes,2,rep,name=tenant_members,json=tenantMembers,proto3" json:"tenant_members,omitempty"`
}

func (x *TenantServiceGetResponse) Reset() {
	*x = TenantServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceGetResponse) ProtoMessage() {}

func (x *TenantServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceGetResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{13}
}

func (x *TenantServiceGetResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *TenantServiceGetResponse) GetTenantMembers() []*TenantMember {
	if x != nil {
		return x.TenantMembers
	}
	return nil
}

// TenantServiceListResponse is the response payload of the tenant list request
type TenantServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tenants is the list of tenants
	Tenants []*Tenant `protobuf:"bytes,1,rep,name=tenants,proto3" json:"tenants,omitempty"`
}

func (x *TenantServiceListResponse) Reset() {
	*x = TenantServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceListResponse) ProtoMessage() {}

func (x *TenantServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceListResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{14}
}

func (x *TenantServiceListResponse) GetTenants() []*Tenant {
	if x != nil {
		return x.Tenants
	}
	return nil
}

// TenantServiceCreateResponse is the response payload of the tenant create request
type TenantServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tenant is the tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *TenantServiceCreateResponse) Reset() {
	*x = TenantServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceCreateResponse) ProtoMessage() {}

func (x *TenantServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{15}
}

func (x *TenantServiceCreateResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// TenantServiceCreateOrUpdateResponse is the response payload of the tenant create or update request
type TenantServiceCreateOrUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tenant is the tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *TenantServiceCreateOrUpdateResponse) Reset() {
	*x = TenantServiceCreateOrUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceCreateOrUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceCreateOrUpdateResponse) ProtoMessage() {}

func (x *TenantServiceCreateOrUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceCreateOrUpdateResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceCreateOrUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{16}
}

func (x *TenantServiceCreateOrUpdateResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// TenantServiceUpdateResponse is the response payload of the tenant update request
type TenantServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tenant is the tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *TenantServiceUpdateResponse) Reset() {
	*x = TenantServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceUpdateResponse) ProtoMessage() {}

func (x *TenantServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{17}
}

func (x *TenantServiceUpdateResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// TenantServiceDeleteResponse is the response payload of the tenant delete request
type TenantServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tenant is the tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *TenantServiceDeleteResponse) Reset() {
	*x = TenantServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceDeleteResponse) ProtoMessage() {}

func (x *TenantServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{18}
}

func (x *TenantServiceDeleteResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// TenantServiceInviteRequest is used to invite a member to a tenant
type TenantServiceInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Role of this user in this tenant
	Role TenantRole `protobuf:"varint,2,opt,name=role,proto3,enum=api.v1.TenantRole" json:"role,omitempty"`
}

func (x *TenantServiceInviteRequest) Reset() {
	*x = TenantServiceInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInviteRequest) ProtoMessage() {}

func (x *TenantServiceInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInviteRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceInviteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{19}
}

func (x *TenantServiceInviteRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *TenantServiceInviteRequest) GetRole() TenantRole {
	if x != nil {
		return x.Role
	}
	return TenantRole_TENANT_ROLE_UNSPECIFIED
}

// TenantServiceInviteRequest is the response payload to a invite member request
type TenantServiceInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Invite contains a secret which can be sent to a potential user
	// can be appended to the invitation endpoint at our cloud console like
	// console.metalstack.cloud/invite/<secret>
	Invite *TenantInvite `protobuf:"bytes,1,opt,name=invite,proto3" json:"invite,omitempty"`
}

func (x *TenantServiceInviteResponse) Reset() {
	*x = TenantServiceInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInviteResponse) ProtoMessage() {}

func (x *TenantServiceInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInviteResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceInviteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{20}
}

func (x *TenantServiceInviteResponse) GetInvite() *TenantInvite {
	if x != nil {
		return x.Invite
	}
	return nil
}

// TenantServiceInvitesListRequest is the request payload to a list invites request
type TenantServiceInvitesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
}

func (x *TenantServiceInvitesListRequest) Reset() {
	*x = TenantServiceInvitesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInvitesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInvitesListRequest) ProtoMessage() {}

func (x *TenantServiceInvitesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInvitesListRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceInvitesListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{21}
}

func (x *TenantServiceInvitesListRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// TenantServiceInvitesListResponse is the response payload to a list invites request
type TenantServiceInvitesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Invites not already accepted the invitation to this tenant
	Invites []*TenantInvite `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
}

func (x *TenantServiceInvitesListResponse) Reset() {
	*x = TenantServiceInvitesListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInvitesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInvitesListResponse) ProtoMessage() {}

func (x *TenantServiceInvitesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInvitesListResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceInvitesListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{22}
}

func (x *TenantServiceInvitesListResponse) GetInvites() []*TenantInvite {
	if x != nil {
		return x.Invites
	}
	return nil
}

// TenantServiceInviteGetRequest is the request payload to get a invite
type TenantServiceInviteGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secret of the invite to get
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *TenantServiceInviteGetRequest) Reset() {
	*x = TenantServiceInviteGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInviteGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInviteGetRequest) ProtoMessage() {}

func (x *TenantServiceInviteGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInviteGetRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceInviteGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{23}
}

func (x *TenantServiceInviteGetRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// TenantServiceInviteGetResponse is the response payload to a get invite request
type TenantServiceInviteGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Invite is the invite
	Invite *TenantInvite `protobuf:"bytes,1,opt,name=invite,proto3" json:"invite,omitempty"`
}

func (x *TenantServiceInviteGetResponse) Reset() {
	*x = TenantServiceInviteGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInviteGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInviteGetResponse) ProtoMessage() {}

func (x *TenantServiceInviteGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInviteGetResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceInviteGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{24}
}

func (x *TenantServiceInviteGetResponse) GetInvite() *TenantInvite {
	if x != nil {
		return x.Invite
	}
	return nil
}

// TenantServiceRemoveMemberRequest is used to remove a member from a tenant
type TenantServiceRemoveMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// MemberID is the id of the member to remove from this tenant
	MemberId string `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *TenantServiceRemoveMemberRequest) Reset() {
	*x = TenantServiceRemoveMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceRemoveMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceRemoveMemberRequest) ProtoMessage() {}

func (x *TenantServiceRemoveMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceRemoveMemberRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceRemoveMemberRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{25}
}

func (x *TenantServiceRemoveMemberRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *TenantServiceRemoveMemberRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

// TenantServiceRemoveMemberResponse is the response payload to a remove member request
type TenantServiceRemoveMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TenantServiceRemoveMemberResponse) Reset() {
	*x = TenantServiceRemoveMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceRemoveMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceRemoveMemberResponse) ProtoMessage() {}

func (x *TenantServiceRemoveMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceRemoveMemberResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceRemoveMemberResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{26}
}

// TenantServiceInviteAcceptRequest is the request payload to a accept invite request
type TenantServiceInviteAcceptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secret is the invitation secret part of the invitation url
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *TenantServiceInviteAcceptRequest) Reset() {
	*x = TenantServiceInviteAcceptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInviteAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInviteAcceptRequest) ProtoMessage() {}

func (x *TenantServiceInviteAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInviteAcceptRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceInviteAcceptRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{27}
}

func (x *TenantServiceInviteAcceptRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// TenantServiceInvitesListResponse is the response payload to a accept invite request
type TenantServiceInviteAcceptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Tenant ID of the joined tenant
	Tenant string `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// TenantName of the joined tenant
	TenantName string `protobuf:"bytes,2,opt,name=tenant_name,json=tenantName,proto3" json:"tenant_name,omitempty"`
}

func (x *TenantServiceInviteAcceptResponse) Reset() {
	*x = TenantServiceInviteAcceptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInviteAcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInviteAcceptResponse) ProtoMessage() {}

func (x *TenantServiceInviteAcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInviteAcceptResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceInviteAcceptResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{28}
}

func (x *TenantServiceInviteAcceptResponse) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *TenantServiceInviteAcceptResponse) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

// TenantServiceInviteDeleteRequest is the request payload to a delete invite
type TenantServiceInviteDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// Secret of the invite to delete
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *TenantServiceInviteDeleteRequest) Reset() {
	*x = TenantServiceInviteDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInviteDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInviteDeleteRequest) ProtoMessage() {}

func (x *TenantServiceInviteDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInviteDeleteRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceInviteDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{29}
}

func (x *TenantServiceInviteDeleteRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *TenantServiceInviteDeleteRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// TenantServiceInviteDeleteResponse is the response payload of a delete invite request
type TenantServiceInviteDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TenantServiceInviteDeleteResponse) Reset() {
	*x = TenantServiceInviteDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceInviteDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceInviteDeleteResponse) ProtoMessage() {}

func (x *TenantServiceInviteDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceInviteDeleteResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceInviteDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{30}
}

// TenantServiceUpdateMemberRequest is used to update a member from a tenant
type TenantServiceUpdateMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login of the tenant
	Login string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	// MemberID is the id of the member to update in this tenant
	MemberId string `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// Role of this user in this tenant
	Role TenantRole `protobuf:"varint,3,opt,name=role,proto3,enum=api.v1.TenantRole" json:"role,omitempty"`
}

func (x *TenantServiceUpdateMemberRequest) Reset() {
	*x = TenantServiceUpdateMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceUpdateMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceUpdateMemberRequest) ProtoMessage() {}

func (x *TenantServiceUpdateMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceUpdateMemberRequest.ProtoReflect.Descriptor instead.
func (*TenantServiceUpdateMemberRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{31}
}

func (x *TenantServiceUpdateMemberRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *TenantServiceUpdateMemberRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *TenantServiceUpdateMemberRequest) GetRole() TenantRole {
	if x != nil {
		return x.Role
	}
	return TenantRole_TENANT_ROLE_UNSPECIFIED
}

// TenantServiceUpdateMemberResponse is the response payload to a update member request
type TenantServiceUpdateMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TenantMember is the updated membership
	TenantMember *TenantMember `protobuf:"bytes,1,opt,name=tenant_member,json=tenantMember,proto3" json:"tenant_member,omitempty"`
}

func (x *TenantServiceUpdateMemberResponse) Reset() {
	*x = TenantServiceUpdateMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_tenant_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantServiceUpdateMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantServiceUpdateMemberResponse) ProtoMessage() {}

func (x *TenantServiceUpdateMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tenant_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantServiceUpdateMemberResponse.ProtoReflect.Descriptor instead.
func (*TenantServiceUpdateMemberResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tenant_proto_rawDescGZIP(), []int{32}
}

func (x *TenantServiceUpdateMemberResponse) GetTenantMember() *TenantMember {
	if x != nil {
		return x.TenantMember
	}
	return nil
}

var File_api_v1_tenant_proto protoreflect.FileDescriptor

var file_api_v1_tenant_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x13, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa8, 0x05, 0x0a, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x3c,
	0x0a, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x6f,
	0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x14,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x12, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x81, 0x01,
	0x0a, 0x0c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xe6, 0x02, 0x0a, 0x0c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41,
	0x74, 0x12, 0x37, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x0e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x76, 0x61, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x14, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x76, 0x61, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x76, 0x61,
	0x74, 0x22, 0x60, 0x0a, 0x12, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x77,
	0x68, 0x65, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x33, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x04, 0x77,
	0x68, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x22, 0x63, 0x0a, 0x18,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x10, 0x02, 0x18, 0x40, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x2f, 0x0a, 0x17, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x22, 0x98, 0x02, 0x0a, 0x1a, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x02, 0x18, 0x40, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0x80,
	0x04, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x48, 0x01, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4c, 0x0a,
	0x22, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x86, 0x04, 0x0a, 0x1a,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x02, 0x18, 0x40, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x48, 0x01, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0x80, 0x04, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x4a, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x04, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x14, 0x74,
	0x65, 0x72, 0x6d, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x05, 0x52, 0x12, 0x74,
	0x65, 0x72, 0x6d, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x09, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x17, 0x0a,
	0x15, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x1a, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x7f, 0x0a, 0x18, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x45, 0x0a, 0x19, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73,
	0x22, 0x45, 0x0a, 0x1b, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x23, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x1b, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x45, 0x0a,
	0x1b, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x1a, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0x4b, 0x0a, 0x1b, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x22, 0x37, 0x0a,
	0x1f, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x52, 0x0a, 0x20, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0x4e, 0x0a, 0x1e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x06, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x22, 0x55, 0x0a, 0x20, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3a, 0x0a, 0x20, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x5c, 0x0a, 0x21, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x20, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x7d, 0x0a, 0x20, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x5e, 0x0a, 0x21, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0c, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32,
	0xc1, 0x0a, 0x0a, 0x0d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd8, 0xf3, 0x18, 0x03, 0xe8, 0xf3, 0x18, 0x01, 0x12, 0x6f,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04, 0xd8, 0xf3, 0x18, 0x02, 0x12,
	0x55, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd8, 0xf3,
	0x18, 0x03, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x5e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x14, 0xc0, 0xf3, 0x18, 0x01, 0xc0, 0xf3, 0x18, 0x02, 0xc0, 0xf3, 0x18, 0x03, 0xc0, 0xf3,
	0x18, 0x04, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x5f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xc0, 0xf3, 0x18, 0x01, 0xc0,
	0xf3, 0x18, 0x02, 0xe8, 0xf3, 0x18, 0x01, 0x12, 0x5f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0xc0, 0xf3, 0x18, 0x01,
	0xc0, 0xf3, 0x18, 0x02, 0xe8, 0xf3, 0x18, 0x01, 0x12, 0x6d, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xc0,
	0xf3, 0x18, 0x01, 0xe8, 0xf3, 0x18, 0x01, 0x12, 0x6d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xc0, 0xf3,
	0x18, 0x01, 0xe8, 0xf3, 0x18, 0x01, 0x12, 0x5b, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xc0, 0xf3, 0x18, 0x01, 0xe8,
	0xf3, 0x18, 0x01, 0x12, 0x6d, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd8, 0xf3, 0x18, 0x03, 0xe8, 0xf3,
	0x18, 0x01, 0x12, 0x6d, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xc0, 0xf3, 0x18, 0x01, 0xe8, 0xf3, 0x18,
	0x01, 0x12, 0x6a, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x08, 0xc0, 0xf3, 0x18, 0x01, 0xe8, 0xf3, 0x18, 0x02, 0x12, 0x64, 0x0a,
	0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xd8, 0xf3, 0x18, 0x03, 0xe8,
	0xf3, 0x18, 0x02, 0x42, 0x84, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x42, 0x0b, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x6c, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70,
	0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x41, 0x70, 0x69, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x06, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12, 0x41, 0x70,
	0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x07, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_v1_tenant_proto_rawDescOnce sync.Once
	file_api_v1_tenant_proto_rawDescData = file_api_v1_tenant_proto_rawDesc
)

func file_api_v1_tenant_proto_rawDescGZIP() []byte {
	file_api_v1_tenant_proto_rawDescOnce.Do(func() {
		file_api_v1_tenant_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_tenant_proto_rawDescData)
	})
	return file_api_v1_tenant_proto_rawDescData
}

var file_api_v1_tenant_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_api_v1_tenant_proto_goTypes = []interface{}{
	(*Tenant)(nil),                              // 0: api.v1.Tenant
	(*TenantMember)(nil),                        // 1: api.v1.TenantMember
	(*TenantInvite)(nil),                        // 2: api.v1.TenantInvite
	(*PaymentDetails)(nil),                      // 3: api.v1.PaymentDetails
	(*PaymentDetailsUpdate)(nil),                // 4: api.v1.PaymentDetailsUpdate
	(*TermsAndConditions)(nil),                  // 5: api.v1.TermsAndConditions
	(*TermsAndConditionsUpdate)(nil),            // 6: api.v1.TermsAndConditionsUpdate
	(*TenantServiceListRequest)(nil),            // 7: api.v1.TenantServiceListRequest
	(*TenantServiceGetRequest)(nil),             // 8: api.v1.TenantServiceGetRequest
	(*TenantServiceCreateRequest)(nil),          // 9: api.v1.TenantServiceCreateRequest
	(*TenantServiceCreateOrUpdateRequest)(nil),  // 10: api.v1.TenantServiceCreateOrUpdateRequest
	(*TenantServiceUpdateRequest)(nil),          // 11: api.v1.TenantServiceUpdateRequest
	(*TenantServiceDeleteRequest)(nil),          // 12: api.v1.TenantServiceDeleteRequest
	(*TenantServiceGetResponse)(nil),            // 13: api.v1.TenantServiceGetResponse
	(*TenantServiceListResponse)(nil),           // 14: api.v1.TenantServiceListResponse
	(*TenantServiceCreateResponse)(nil),         // 15: api.v1.TenantServiceCreateResponse
	(*TenantServiceCreateOrUpdateResponse)(nil), // 16: api.v1.TenantServiceCreateOrUpdateResponse
	(*TenantServiceUpdateResponse)(nil),         // 17: api.v1.TenantServiceUpdateResponse
	(*TenantServiceDeleteResponse)(nil),         // 18: api.v1.TenantServiceDeleteResponse
	(*TenantServiceInviteRequest)(nil),          // 19: api.v1.TenantServiceInviteRequest
	(*TenantServiceInviteResponse)(nil),         // 20: api.v1.TenantServiceInviteResponse
	(*TenantServiceInvitesListRequest)(nil),     // 21: api.v1.TenantServiceInvitesListRequest
	(*TenantServiceInvitesListResponse)(nil),    // 22: api.v1.TenantServiceInvitesListResponse
	(*TenantServiceInviteGetRequest)(nil),       // 23: api.v1.TenantServiceInviteGetRequest
	(*TenantServiceInviteGetResponse)(nil),      // 24: api.v1.TenantServiceInviteGetResponse
	(*TenantServiceRemoveMemberRequest)(nil),    // 25: api.v1.TenantServiceRemoveMemberRequest
	(*TenantServiceRemoveMemberResponse)(nil),   // 26: api.v1.TenantServiceRemoveMemberResponse
	(*TenantServiceInviteAcceptRequest)(nil),    // 27: api.v1.TenantServiceInviteAcceptRequest
	(*TenantServiceInviteAcceptResponse)(nil),   // 28: api.v1.TenantServiceInviteAcceptResponse
	(*TenantServiceInviteDeleteRequest)(nil),    // 29: api.v1.TenantServiceInviteDeleteRequest
	(*TenantServiceInviteDeleteResponse)(nil),   // 30: api.v1.TenantServiceInviteDeleteResponse
	(*TenantServiceUpdateMemberRequest)(nil),    // 31: api.v1.TenantServiceUpdateMemberRequest
	(*TenantServiceUpdateMemberResponse)(nil),   // 32: api.v1.TenantServiceUpdateMemberResponse
	(OAuthProvider)(0),                          // 33: api.v1.OAuthProvider
	(*timestamppb.Timestamp)(nil),               // 34: google.protobuf.Timestamp
	(TenantRole)(0),                             // 35: api.v1.TenantRole
	(*Coupon)(nil),                              // 36: api.v1.Coupon
}
var file_api_v1_tenant_proto_depIdxs = []int32{
	33, // 0: api.v1.Tenant.oauth_provider:type_name -> api.v1.OAuthProvider
	3,  // 1: api.v1.Tenant.payment_details:type_name -> api.v1.PaymentDetails
	5,  // 2: api.v1.Tenant.terms_and_conditions:type_name -> api.v1.TermsAndConditions
	34, // 3: api.v1.Tenant.created_at:type_name -> google.protobuf.Timestamp
	34, // 4: api.v1.Tenant.updated_at:type_name -> google.protobuf.Timestamp
	34, // 5: api.v1.Tenant.deleted_at:type_name -> google.protobuf.Timestamp
	35, // 6: api.v1.TenantMember.role:type_name -> api.v1.TenantRole
	34, // 7: api.v1.TenantMember.created_at:type_name -> google.protobuf.Timestamp
	35, // 8: api.v1.TenantInvite.role:type_name -> api.v1.TenantRole
	34, // 9: api.v1.TenantInvite.expires_at:type_name -> google.protobuf.Timestamp
	34, // 10: api.v1.TenantInvite.joined_at:type_name -> google.protobuf.Timestamp
	36, // 11: api.v1.PaymentDetails.coupons:type_name -> api.v1.Coupon
	34, // 12: api.v1.TermsAndConditions.when:type_name -> google.protobuf.Timestamp
	34, // 13: api.v1.TermsAndConditionsUpdate.when:type_name -> google.protobuf.Timestamp
	0,  // 14: api.v1.TenantServiceCreateOrUpdateRequest.tenant:type_name -> api.v1.Tenant
	4,  // 15: api.v1.TenantServiceUpdateRequest.payment_details:type_name -> api.v1.PaymentDetailsUpdate
	6,  // 16: api.v1.TenantServiceUpdateRequest.terms_and_conditions:type_name -> api.v1.TermsAndConditionsUpdate
	0,  // 17: api.v1.TenantServiceGetResponse.tenant:type_name -> api.v1.Tenant
	1,  // 18: api.v1.TenantServiceGetResponse.tenant_members:type_name -> api.v1.TenantMember
	0,  // 19: api.v1.TenantServiceListResponse.tenants:type_name -> api.v1.Tenant
	0,  // 20: api.v1.TenantServiceCreateResponse.tenant:type_name -> api.v1.Tenant
	0,  // 21: api.v1.TenantServiceCreateOrUpdateResponse.tenant:type_name -> api.v1.Tenant
	0,  // 22: api.v1.TenantServiceUpdateResponse.tenant:type_name -> api.v1.Tenant
	0,  // 23: api.v1.TenantServiceDeleteResponse.tenant:type_name -> api.v1.Tenant
	35, // 24: api.v1.TenantServiceInviteRequest.role:type_name -> api.v1.TenantRole
	2,  // 25: api.v1.TenantServiceInviteResponse.invite:type_name -> api.v1.TenantInvite
	2,  // 26: api.v1.TenantServiceInvitesListResponse.invites:type_name -> api.v1.TenantInvite
	2,  // 27: api.v1.TenantServiceInviteGetResponse.invite:type_name -> api.v1.TenantInvite
	35, // 28: api.v1.TenantServiceUpdateMemberRequest.role:type_name -> api.v1.TenantRole
	1,  // 29: api.v1.TenantServiceUpdateMemberResponse.tenant_member:type_name -> api.v1.TenantMember
	9,  // 30: api.v1.TenantService.Create:input_type -> api.v1.TenantServiceCreateRequest
	10, // 31: api.v1.TenantService.CreateOrUpdate:input_type -> api.v1.TenantServiceCreateOrUpdateRequest
	7,  // 32: api.v1.TenantService.List:input_type -> api.v1.TenantServiceListRequest
	8,  // 33: api.v1.TenantService.Get:input_type -> api.v1.TenantServiceGetRequest
	11, // 34: api.v1.TenantService.Update:input_type -> api.v1.TenantServiceUpdateRequest
	12, // 35: api.v1.TenantService.Delete:input_type -> api.v1.TenantServiceDeleteRequest
	25, // 36: api.v1.TenantService.RemoveMember:input_type -> api.v1.TenantServiceRemoveMemberRequest
	31, // 37: api.v1.TenantService.UpdateMember:input_type -> api.v1.TenantServiceUpdateMemberRequest
	19, // 38: api.v1.TenantService.Invite:input_type -> api.v1.TenantServiceInviteRequest
	27, // 39: api.v1.TenantService.InviteAccept:input_type -> api.v1.TenantServiceInviteAcceptRequest
	29, // 40: api.v1.TenantService.InviteDelete:input_type -> api.v1.TenantServiceInviteDeleteRequest
	21, // 41: api.v1.TenantService.InvitesList:input_type -> api.v1.TenantServiceInvitesListRequest
	23, // 42: api.v1.TenantService.InviteGet:input_type -> api.v1.TenantServiceInviteGetRequest
	15, // 43: api.v1.TenantService.Create:output_type -> api.v1.TenantServiceCreateResponse
	16, // 44: api.v1.TenantService.CreateOrUpdate:output_type -> api.v1.TenantServiceCreateOrUpdateResponse
	14, // 45: api.v1.TenantService.List:output_type -> api.v1.TenantServiceListResponse
	13, // 46: api.v1.TenantService.Get:output_type -> api.v1.TenantServiceGetResponse
	17, // 47: api.v1.TenantService.Update:output_type -> api.v1.TenantServiceUpdateResponse
	18, // 48: api.v1.TenantService.Delete:output_type -> api.v1.TenantServiceDeleteResponse
	26, // 49: api.v1.TenantService.RemoveMember:output_type -> api.v1.TenantServiceRemoveMemberResponse
	32, // 50: api.v1.TenantService.UpdateMember:output_type -> api.v1.TenantServiceUpdateMemberResponse
	20, // 51: api.v1.TenantService.Invite:output_type -> api.v1.TenantServiceInviteResponse
	28, // 52: api.v1.TenantService.InviteAccept:output_type -> api.v1.TenantServiceInviteAcceptResponse
	30, // 53: api.v1.TenantService.InviteDelete:output_type -> api.v1.TenantServiceInviteDeleteResponse
	22, // 54: api.v1.TenantService.InvitesList:output_type -> api.v1.TenantServiceInvitesListResponse
	24, // 55: api.v1.TenantService.InviteGet:output_type -> api.v1.TenantServiceInviteGetResponse
	43, // [43:56] is the sub-list for method output_type
	30, // [30:43] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_v1_tenant_proto_init() }
func file_api_v1_tenant_proto_init() {
	if File_api_v1_tenant_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_payment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_tenant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tenant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInvite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentDetailsUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermsAndConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermsAndConditionsUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceCreateOrUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceCreateOrUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInvitesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInvitesListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInviteGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInviteGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceRemoveMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceRemoveMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInviteAcceptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInviteAcceptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInviteDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceInviteDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceUpdateMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_tenant_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantServiceUpdateMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_tenant_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_api_v1_tenant_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_api_v1_tenant_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_api_v1_tenant_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_api_v1_tenant_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_api_v1_tenant_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_tenant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_tenant_proto_goTypes,
		DependencyIndexes: file_api_v1_tenant_proto_depIdxs,
		MessageInfos:      file_api_v1_tenant_proto_msgTypes,
	}.Build()
	File_api_v1_tenant_proto = out.File
	file_api_v1_tenant_proto_rawDesc = nil
	file_api_v1_tenant_proto_goTypes = nil
	file_api_v1_tenant_proto_depIdxs = nil
}
