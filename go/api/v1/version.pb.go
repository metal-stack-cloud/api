// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: api/v1/version.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Version of the application
type Version struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of the application
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Revision of the application
	Revision string `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	// GitSHA1 of the application
	GitSha1 string `protobuf:"bytes,3,opt,name=git_sha1,json=gitSha1,proto3" json:"git_sha1,omitempty"`
	// BuildDate of the application
	BuildDate     string `protobuf:"bytes,4,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_api_v1_version_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_version_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_api_v1_version_proto_rawDescGZIP(), []int{0}
}

func (x *Version) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Version) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *Version) GetGitSha1() string {
	if x != nil {
		return x.GitSha1
	}
	return ""
}

func (x *Version) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

// VersionServiceGetRequest is the request payload to get the version
type VersionServiceGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionServiceGetRequest) Reset() {
	*x = VersionServiceGetRequest{}
	mi := &file_api_v1_version_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionServiceGetRequest) ProtoMessage() {}

func (x *VersionServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_version_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionServiceGetRequest.ProtoReflect.Descriptor instead.
func (*VersionServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_version_proto_rawDescGZIP(), []int{1}
}

// VersionServiceGetResponse is the response payload with the version
type VersionServiceGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of the application
	Version       *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionServiceGetResponse) Reset() {
	*x = VersionServiceGetResponse{}
	mi := &file_api_v1_version_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionServiceGetResponse) ProtoMessage() {}

func (x *VersionServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_version_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionServiceGetResponse.ProtoReflect.Descriptor instead.
func (*VersionServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_version_proto_rawDescGZIP(), []int{2}
}

func (x *VersionServiceGetResponse) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

var File_api_v1_version_proto protoreflect.FileDescriptor

const file_api_v1_version_proto_rawDesc = "" +
	"\n" +
	"\x14api/v1/version.proto\x12\x06api.v1\x1a\x13api/v1/common.proto\"y\n" +
	"\aVersion\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1a\n" +
	"\brevision\x18\x02 \x01(\tR\brevision\x12\x19\n" +
	"\bgit_sha1\x18\x03 \x01(\tR\agitSha1\x12\x1d\n" +
	"\n" +
	"build_date\x18\x04 \x01(\tR\tbuildDate\"\x1a\n" +
	"\x18VersionServiceGetRequest\"F\n" +
	"\x19VersionServiceGetResponse\x12)\n" +
	"\aversion\x18\x01 \x01(\v2\x0f.api.v1.VersionR\aversion2f\n" +
	"\x0eVersionService\x12T\n" +
	"\x03Get\x12 .api.v1.VersionServiceGetRequest\x1a!.api.v1.VersionServiceGetResponse\"\b\xd8\xf3\x18\x01\xe8\xf3\x18\x02B\x85\x01\n" +
	"\n" +
	"com.api.v1B\fVersionProtoP\x01Z0github.com/metal-stack-cloud/api/go/api/v1;apiv1\xa2\x02\x03AXX\xaa\x02\x06Api.V1\xca\x02\x06Api\\V1\xe2\x02\x12Api\\V1\\GPBMetadata\xea\x02\aApi::V1b\x06proto3"

var (
	file_api_v1_version_proto_rawDescOnce sync.Once
	file_api_v1_version_proto_rawDescData []byte
)

func file_api_v1_version_proto_rawDescGZIP() []byte {
	file_api_v1_version_proto_rawDescOnce.Do(func() {
		file_api_v1_version_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_version_proto_rawDesc), len(file_api_v1_version_proto_rawDesc)))
	})
	return file_api_v1_version_proto_rawDescData
}

var file_api_v1_version_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_v1_version_proto_goTypes = []any{
	(*Version)(nil),                   // 0: api.v1.Version
	(*VersionServiceGetRequest)(nil),  // 1: api.v1.VersionServiceGetRequest
	(*VersionServiceGetResponse)(nil), // 2: api.v1.VersionServiceGetResponse
}
var file_api_v1_version_proto_depIdxs = []int32{
	0, // 0: api.v1.VersionServiceGetResponse.version:type_name -> api.v1.Version
	1, // 1: api.v1.VersionService.Get:input_type -> api.v1.VersionServiceGetRequest
	2, // 2: api.v1.VersionService.Get:output_type -> api.v1.VersionServiceGetResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_v1_version_proto_init() }
func file_api_v1_version_proto_init() {
	if File_api_v1_version_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_version_proto_rawDesc), len(file_api_v1_version_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_version_proto_goTypes,
		DependencyIndexes: file_api_v1_version_proto_depIdxs,
		MessageInfos:      file_api_v1_version_proto_msgTypes,
	}.Build()
	File_api_v1_version_proto = out.File
	file_api_v1_version_proto_goTypes = nil
	file_api_v1_version_proto_depIdxs = nil
}
