// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1/cluster.proto

package apiv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Operate defines the types of reconciliation to be triggered
type Operate int32

const (
	// OPERATE_UNSPECIFIED is not specified
	Operate_OPERATE_UNSPECIFIED Operate = 0
	// OPERATE_RECONCILE reconcile the cluster
	Operate_OPERATE_RECONCILE Operate = 1
	// OPERATE_MAINTAIN maintain the cluster
	Operate_OPERATE_MAINTAIN Operate = 2
	// OPERATE_RETRY retry the reconciliation of the cluster
	Operate_OPERATE_RETRY Operate = 3
)

// Enum value maps for Operate.
var (
	Operate_name = map[int32]string{
		0: "OPERATE_UNSPECIFIED",
		1: "OPERATE_RECONCILE",
		2: "OPERATE_MAINTAIN",
		3: "OPERATE_RETRY",
	}
	Operate_value = map[string]int32{
		"OPERATE_UNSPECIFIED": 0,
		"OPERATE_RECONCILE":   1,
		"OPERATE_MAINTAIN":    2,
		"OPERATE_RETRY":       3,
	}
)

func (x Operate) Enum() *Operate {
	p := new(Operate)
	*p = x
	return p
}

func (x Operate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operate) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_cluster_proto_enumTypes[0].Descriptor()
}

func (Operate) Type() protoreflect.EnumType {
	return &file_api_v1_cluster_proto_enumTypes[0]
}

func (x Operate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operate.Descriptor instead.
func (Operate) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{0}
}

// Cluster describes a kubernetes cluster
type Cluster struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Name of the cluster
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Project where this cluster belongs to
	Project string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	// Partition where this cluster was created
	Partition string `protobuf:"bytes,4,opt,name=partition,proto3" json:"partition,omitempty"`
	// Kubernetes defines the kubernetes specifications of this cluster
	Kubernetes *KubernetesSpec `protobuf:"bytes,5,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	// Workers defines the list of worker groups with their specification
	Workers []*Worker `protobuf:"bytes,6,rep,name=workers,proto3" json:"workers,omitempty"`
	// Maintenance defines when automated actions on this cluster should be scheduled
	Maintenance *Maintenance `protobuf:"bytes,7,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	// Tenant where this cluster belongs to
	Tenant string `protobuf:"bytes,8,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// CreatedAt defines the date when this cluster was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt defines the date when this cluster was updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// DeletedAt defines the date when this cluster was deleted
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// Status of this cluster
	Status *ClusterStatus `protobuf:"bytes,20,opt,name=status,proto3" json:"status,omitempty"`
	// Purpose of this cluster, can be for example production, development or evaluation
	Purpose *string `protobuf:"bytes,21,opt,name=purpose,proto3,oneof" json:"purpose,omitempty"`
	// Monitoring details for this cluster
	Monitoring    *ClusterMonitoring `protobuf:"bytes,22,opt,name=monitoring,proto3" json:"monitoring,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_api_v1_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *Cluster) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Cluster) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *Cluster) GetKubernetes() *KubernetesSpec {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *Cluster) GetWorkers() []*Worker {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *Cluster) GetMaintenance() *Maintenance {
	if x != nil {
		return x.Maintenance
	}
	return nil
}

func (x *Cluster) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *Cluster) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Cluster) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Cluster) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Cluster) GetStatus() *ClusterStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Cluster) GetPurpose() string {
	if x != nil && x.Purpose != nil {
		return *x.Purpose
	}
	return ""
}

func (x *Cluster) GetMonitoring() *ClusterMonitoring {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

// KubernetesSpec details of kubernetes this cluster
type KubernetesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of kubernetes
	Version       string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesSpec) Reset() {
	*x = KubernetesSpec{}
	mi := &file_api_v1_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesSpec) ProtoMessage() {}

func (x *KubernetesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesSpec.ProtoReflect.Descriptor instead.
func (*KubernetesSpec) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *KubernetesSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Maintenance defines when automatic actions should be scheduled on this cluster
type Maintenance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// KubernetesAutoupdate if set to true, kubernetes patch version updates will be done in the maintenance window
	KubernetesAutoupdate *bool `protobuf:"varint,1,opt,name=kubernetes_autoupdate,json=kubernetesAutoupdate,proto3,oneof" json:"kubernetes_autoupdate,omitempty"`
	// MachineimageAutoupdate if set to true, machine images will be automatically update by rolling nodes in the maintenance window
	MachineimageAutoupdate *bool `protobuf:"varint,2,opt,name=machineimage_autoupdate,json=machineimageAutoupdate,proto3,oneof" json:"machineimage_autoupdate,omitempty"`
	// TimeWindow defines the start time and duration during which automatic actions will be performed
	TimeWindow    *MaintenanceTimeWindow `protobuf:"bytes,3,opt,name=time_window,json=timeWindow,proto3" json:"time_window,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Maintenance) Reset() {
	*x = Maintenance{}
	mi := &file_api_v1_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Maintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Maintenance) ProtoMessage() {}

func (x *Maintenance) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Maintenance.ProtoReflect.Descriptor instead.
func (*Maintenance) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *Maintenance) GetKubernetesAutoupdate() bool {
	if x != nil && x.KubernetesAutoupdate != nil {
		return *x.KubernetesAutoupdate
	}
	return false
}

func (x *Maintenance) GetMachineimageAutoupdate() bool {
	if x != nil && x.MachineimageAutoupdate != nil {
		return *x.MachineimageAutoupdate
	}
	return false
}

func (x *Maintenance) GetTimeWindow() *MaintenanceTimeWindow {
	if x != nil {
		return x.TimeWindow
	}
	return nil
}

// MaintenanceTimeWindow defines the start time and duration during which automatic actions will be performed
type MaintenanceTimeWindow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Begin of the MaintenanceTimeWindow
	Begin *Time `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	// Duration of the MaintenanceTimeWindow
	Duration      *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaintenanceTimeWindow) Reset() {
	*x = MaintenanceTimeWindow{}
	mi := &file_api_v1_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaintenanceTimeWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintenanceTimeWindow) ProtoMessage() {}

func (x *MaintenanceTimeWindow) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintenanceTimeWindow.ProtoReflect.Descriptor instead.
func (*MaintenanceTimeWindow) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *MaintenanceTimeWindow) GetBegin() *Time {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *MaintenanceTimeWindow) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

// Time of day
type Time struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// hour begin of the maintenance window, specified in 24 hour format.
	Hour uint32 `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	// hour:minute begin of the maintenance window.
	Minute uint32 `protobuf:"varint,2,opt,name=minute,proto3" json:"minute,omitempty"`
	// timezone specifies for which region in the world the given hour:minute should apply.
	Timezone      string `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Time) Reset() {
	*x = Time{}
	mi := &file_api_v1_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *Time) GetHour() uint32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *Time) GetMinute() uint32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *Time) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

// Worker defines a set of worker nodes with identical properties
type Worker struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of this worker group
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// MachineType of machines which should be used for the worker nodes in this group
	MachineType string `protobuf:"bytes,2,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
	// Minsize defines the minimum amount of machines present in this worker group
	Minsize uint32 `protobuf:"varint,3,opt,name=minsize,proto3" json:"minsize,omitempty"`
	// Maxsize defines the maximum amount of machines present in this worker group
	Maxsize uint32 `protobuf:"varint,4,opt,name=maxsize,proto3" json:"maxsize,omitempty"`
	// Maxsurge defines the maximum amount of machines which are spun up in this worker group during a rolling upgrade
	Maxsurge uint32 `protobuf:"varint,5,opt,name=maxsurge,proto3" json:"maxsurge,omitempty"`
	// Maxunavailable defines the maximum amount of not available machines in this worker group during a rolling upgrade
	Maxunavailable uint32 `protobuf:"varint,6,opt,name=maxunavailable,proto3" json:"maxunavailable,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Worker) Reset() {
	*x = Worker{}
	mi := &file_api_v1_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Worker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worker) ProtoMessage() {}

func (x *Worker) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worker.ProtoReflect.Descriptor instead.
func (*Worker) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *Worker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Worker) GetMachineType() string {
	if x != nil {
		return x.MachineType
	}
	return ""
}

func (x *Worker) GetMinsize() uint32 {
	if x != nil {
		return x.Minsize
	}
	return 0
}

func (x *Worker) GetMaxsize() uint32 {
	if x != nil {
		return x.Maxsize
	}
	return 0
}

func (x *Worker) GetMaxsurge() uint32 {
	if x != nil {
		return x.Maxsurge
	}
	return 0
}

func (x *Worker) GetMaxunavailable() uint32 {
	if x != nil {
		return x.Maxunavailable
	}
	return 0
}

// WorkerUpdate is used to update a Worker group
type WorkerUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the worker group to update
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// MachineType to change in this worker group
	MachineType *string `protobuf:"bytes,2,opt,name=machine_type,json=machineType,proto3,oneof" json:"machine_type,omitempty"`
	// Minsize defines the minimum amount of machines present in this worker group
	Minsize *uint32 `protobuf:"varint,3,opt,name=minsize,proto3,oneof" json:"minsize,omitempty"`
	// Maxsize defines the maximum amount of machines present in this worker group
	Maxsize *uint32 `protobuf:"varint,4,opt,name=maxsize,proto3,oneof" json:"maxsize,omitempty"`
	// Maxsurge defines the maximum amount of machines which are spun up in this worker group during a rolling upgrade
	Maxsurge *uint32 `protobuf:"varint,5,opt,name=maxsurge,proto3,oneof" json:"maxsurge,omitempty"`
	// Maxunavailable defines the maximum amount of not available machines in this worker group during a rolling upgrade
	Maxunavailable *uint32 `protobuf:"varint,6,opt,name=maxunavailable,proto3,oneof" json:"maxunavailable,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkerUpdate) Reset() {
	*x = WorkerUpdate{}
	mi := &file_api_v1_cluster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerUpdate) ProtoMessage() {}

func (x *WorkerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerUpdate.ProtoReflect.Descriptor instead.
func (*WorkerUpdate) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *WorkerUpdate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkerUpdate) GetMachineType() string {
	if x != nil && x.MachineType != nil {
		return *x.MachineType
	}
	return ""
}

func (x *WorkerUpdate) GetMinsize() uint32 {
	if x != nil && x.Minsize != nil {
		return *x.Minsize
	}
	return 0
}

func (x *WorkerUpdate) GetMaxsize() uint32 {
	if x != nil && x.Maxsize != nil {
		return *x.Maxsize
	}
	return 0
}

func (x *WorkerUpdate) GetMaxsurge() uint32 {
	if x != nil && x.Maxsurge != nil {
		return *x.Maxsurge
	}
	return 0
}

func (x *WorkerUpdate) GetMaxunavailable() uint32 {
	if x != nil && x.Maxunavailable != nil {
		return *x.Maxunavailable
	}
	return 0
}

// ClusterServiceGetRequest is the request payload for a cluster get request
type ClusterServiceGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Project of the cluster
	Project       string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceGetRequest) Reset() {
	*x = ClusterServiceGetRequest{}
	mi := &file_api_v1_cluster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceGetRequest) ProtoMessage() {}

func (x *ClusterServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceGetRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *ClusterServiceGetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ClusterServiceGetRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// ClusterServiceOperateRequest is the request payload for the cluster operate request
type ClusterServiceOperateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Project of the cluster
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Operate is the operation which should be performed
	Operate       Operate `protobuf:"varint,3,opt,name=operate,proto3,enum=api.v1.Operate" json:"operate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceOperateRequest) Reset() {
	*x = ClusterServiceOperateRequest{}
	mi := &file_api_v1_cluster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceOperateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceOperateRequest) ProtoMessage() {}

func (x *ClusterServiceOperateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceOperateRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceOperateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *ClusterServiceOperateRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ClusterServiceOperateRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ClusterServiceOperateRequest) GetOperate() Operate {
	if x != nil {
		return x.Operate
	}
	return Operate_OPERATE_UNSPECIFIED
}

// ClusterServiceGetRequest is the request payload for a cluster get request
type ClusterServiceGetCredentialsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Project of the cluster
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Expiration defines the duration after which the requested kubernetes access token can not be used anymore
	Expiration    *durationpb.Duration `protobuf:"bytes,4,opt,name=expiration,proto3,oneof" json:"expiration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceGetCredentialsRequest) Reset() {
	*x = ClusterServiceGetCredentialsRequest{}
	mi := &file_api_v1_cluster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceGetCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceGetCredentialsRequest) ProtoMessage() {}

func (x *ClusterServiceGetCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceGetCredentialsRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceGetCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *ClusterServiceGetCredentialsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ClusterServiceGetCredentialsRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ClusterServiceGetCredentialsRequest) GetExpiration() *durationpb.Duration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

// ClusterServiceListRequest is the request payload for a cluster list request
type ClusterServiceListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project of the cluster
	Project       string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceListRequest) Reset() {
	*x = ClusterServiceListRequest{}
	mi := &file_api_v1_cluster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceListRequest) ProtoMessage() {}

func (x *ClusterServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceListRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *ClusterServiceListRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// ClusterServiceCreateRequest is the request payload for a cluster create request
type ClusterServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the cluster to create
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Project of the cluster
	Project string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	// Partition of the cluster
	Partition string `protobuf:"bytes,4,opt,name=partition,proto3" json:"partition,omitempty"`
	// Kubernetes specification of the cluster
	Kubernetes *KubernetesSpec `protobuf:"bytes,6,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	// Worker specification of the cluster
	Workers []*Worker `protobuf:"bytes,7,rep,name=workers,proto3" json:"workers,omitempty"`
	// Maintenance specification of the cluster
	Maintenance   *Maintenance `protobuf:"bytes,8,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceCreateRequest) Reset() {
	*x = ClusterServiceCreateRequest{}
	mi := &file_api_v1_cluster_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceCreateRequest) ProtoMessage() {}

func (x *ClusterServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *ClusterServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClusterServiceCreateRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ClusterServiceCreateRequest) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *ClusterServiceCreateRequest) GetKubernetes() *KubernetesSpec {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *ClusterServiceCreateRequest) GetWorkers() []*Worker {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *ClusterServiceCreateRequest) GetMaintenance() *Maintenance {
	if x != nil {
		return x.Maintenance
	}
	return nil
}

// ClusterServiceUpdateRequest is the request payload for a cluster update request
type ClusterServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Project of the cluster
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Kubernetes specification of the cluster
	Kubernetes *KubernetesSpec `protobuf:"bytes,3,opt,name=kubernetes,proto3,oneof" json:"kubernetes,omitempty"`
	// Worker specification of the cluster
	Workers []*WorkerUpdate `protobuf:"bytes,4,rep,name=workers,proto3" json:"workers,omitempty"`
	// Maintenance specification of the cluster
	Maintenance   *Maintenance `protobuf:"bytes,5,opt,name=maintenance,proto3,oneof" json:"maintenance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceUpdateRequest) Reset() {
	*x = ClusterServiceUpdateRequest{}
	mi := &file_api_v1_cluster_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceUpdateRequest) ProtoMessage() {}

func (x *ClusterServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *ClusterServiceUpdateRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ClusterServiceUpdateRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ClusterServiceUpdateRequest) GetKubernetes() *KubernetesSpec {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *ClusterServiceUpdateRequest) GetWorkers() []*WorkerUpdate {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *ClusterServiceUpdateRequest) GetMaintenance() *Maintenance {
	if x != nil {
		return x.Maintenance
	}
	return nil
}

// ClusterServiceDeleteRequest is the request payload for a cluster delete request
type ClusterServiceDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Project of the cluster
	Project       string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceDeleteRequest) Reset() {
	*x = ClusterServiceDeleteRequest{}
	mi := &file_api_v1_cluster_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceDeleteRequest) ProtoMessage() {}

func (x *ClusterServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *ClusterServiceDeleteRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ClusterServiceDeleteRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// ClusterServiceWatchStatusRequest is the request payload for a cluster watch status request
type ClusterServiceWatchStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid *string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
	// Project of the cluster
	Project       string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceWatchStatusRequest) Reset() {
	*x = ClusterServiceWatchStatusRequest{}
	mi := &file_api_v1_cluster_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceWatchStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceWatchStatusRequest) ProtoMessage() {}

func (x *ClusterServiceWatchStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceWatchStatusRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceWatchStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{14}
}

func (x *ClusterServiceWatchStatusRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *ClusterServiceWatchStatusRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// ClusterStatus
type ClusterStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Progress of the cluster reconciliation
	Progress uint32 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// State of the cluster
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// Type of the cluster status
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// ApiServerReady represents the ready state of the kubernetes api server
	ApiServerReady string `protobuf:"bytes,10,opt,name=api_server_ready,json=apiServerReady,proto3" json:"api_server_ready,omitempty"`
	// ControlPlaneReady represents the ready state of the control plane components
	ControlPlaneReady string `protobuf:"bytes,11,opt,name=control_plane_ready,json=controlPlaneReady,proto3" json:"control_plane_ready,omitempty"`
	// NodesReady represents the ready state of the worker nodes
	NodesReady string `protobuf:"bytes,12,opt,name=nodes_ready,json=nodesReady,proto3" json:"nodes_ready,omitempty"`
	// SystemComponentsReady represents the ready state of the system components
	SystemComponentsReady string `protobuf:"bytes,13,opt,name=system_components_ready,json=systemComponentsReady,proto3" json:"system_components_ready,omitempty"`
	// LastErrors is a list of the last known errors occurred during the cluster reconciliation
	LastErrors []*ClusterStatusLastError `protobuf:"bytes,14,rep,name=last_errors,json=lastErrors,proto3" json:"last_errors,omitempty"`
	// ClusterStatusConditions is a list of status conditions of the cluster
	Conditions    []*ClusterStatusCondition `protobuf:"bytes,15,rep,name=conditions,proto3" json:"conditions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterStatus) Reset() {
	*x = ClusterStatus{}
	mi := &file_api_v1_cluster_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatus) ProtoMessage() {}

func (x *ClusterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatus.ProtoReflect.Descriptor instead.
func (*ClusterStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{15}
}

func (x *ClusterStatus) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ClusterStatus) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ClusterStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ClusterStatus) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ClusterStatus) GetApiServerReady() string {
	if x != nil {
		return x.ApiServerReady
	}
	return ""
}

func (x *ClusterStatus) GetControlPlaneReady() string {
	if x != nil {
		return x.ControlPlaneReady
	}
	return ""
}

func (x *ClusterStatus) GetNodesReady() string {
	if x != nil {
		return x.NodesReady
	}
	return ""
}

func (x *ClusterStatus) GetSystemComponentsReady() string {
	if x != nil {
		return x.SystemComponentsReady
	}
	return ""
}

func (x *ClusterStatus) GetLastErrors() []*ClusterStatusLastError {
	if x != nil {
		return x.LastErrors
	}
	return nil
}

func (x *ClusterStatus) GetConditions() []*ClusterStatusCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// ClusterStatusLastError is the last known cluster status error
type ClusterStatusLastError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Description a human readable message indicating details about the last error
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// TaskId ID of the task which caused this last error
	TaskId *string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3,oneof" json:"task_id,omitempty"`
	// LastUpdateTime last time the error was reported
	LastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClusterStatusLastError) Reset() {
	*x = ClusterStatusLastError{}
	mi := &file_api_v1_cluster_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatusLastError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusLastError) ProtoMessage() {}

func (x *ClusterStatusLastError) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusLastError.ProtoReflect.Descriptor instead.
func (*ClusterStatusLastError) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{16}
}

func (x *ClusterStatusLastError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClusterStatusLastError) GetTaskId() string {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return ""
}

func (x *ClusterStatusLastError) GetLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

// ClusterStatusCondition contains status conditions of a cluster
type ClusterStatusCondition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type is the type of the condition
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Status is the status of the condition
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// Reason describes the reason for the condition's last transition
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// StatusMessage is a human readable message indicating details about the transition
	StatusMessage string `protobuf:"bytes,4,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	// LastUpdateTime last time the condition transitioned
	LastTransitionTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_transition_time,json=lastTransitionTime,proto3" json:"last_transition_time,omitempty"`
	// LastUpdateTime last time the condition was updated
	LastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClusterStatusCondition) Reset() {
	*x = ClusterStatusCondition{}
	mi := &file_api_v1_cluster_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatusCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusCondition) ProtoMessage() {}

func (x *ClusterStatusCondition) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusCondition.ProtoReflect.Descriptor instead.
func (*ClusterStatusCondition) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{17}
}

func (x *ClusterStatusCondition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ClusterStatusCondition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ClusterStatusCondition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ClusterStatusCondition) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *ClusterStatusCondition) GetLastTransitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTransitionTime
	}
	return nil
}

func (x *ClusterStatusCondition) GetLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

// ClusterMonitoring contains details howto access the cluster monitoring
type ClusterMonitoring struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Username to access the monitoring
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Password to access the monitoring
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Endpoint is the url to access the monitoring
	Endpoint      string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterMonitoring) Reset() {
	*x = ClusterMonitoring{}
	mi := &file_api_v1_cluster_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMonitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMonitoring) ProtoMessage() {}

func (x *ClusterMonitoring) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMonitoring.ProtoReflect.Descriptor instead.
func (*ClusterMonitoring) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{18}
}

func (x *ClusterMonitoring) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ClusterMonitoring) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ClusterMonitoring) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

// ClusterServiceCreateResponse is the response payload of a cluster create request
type ClusterServiceCreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster is the cluster
	Cluster       *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceCreateResponse) Reset() {
	*x = ClusterServiceCreateResponse{}
	mi := &file_api_v1_cluster_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceCreateResponse) ProtoMessage() {}

func (x *ClusterServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{19}
}

func (x *ClusterServiceCreateResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

// ClusterServiceGetResponse is the response payload of a cluster get request
type ClusterServiceGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster is the cluster
	Cluster       *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceGetResponse) Reset() {
	*x = ClusterServiceGetResponse{}
	mi := &file_api_v1_cluster_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceGetResponse) ProtoMessage() {}

func (x *ClusterServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceGetResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{20}
}

func (x *ClusterServiceGetResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

// ClusterServiceGetCredentialsResponse is the response payload of a cluster get credentials request
type ClusterServiceGetCredentialsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster is the cluster
	Kubeconfig    string `protobuf:"bytes,1,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceGetCredentialsResponse) Reset() {
	*x = ClusterServiceGetCredentialsResponse{}
	mi := &file_api_v1_cluster_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceGetCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceGetCredentialsResponse) ProtoMessage() {}

func (x *ClusterServiceGetCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceGetCredentialsResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceGetCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{21}
}

func (x *ClusterServiceGetCredentialsResponse) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

// ClusterServiceDeleteResponse is the response payload of a cluster delete request
type ClusterServiceDeleteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster is the cluster
	Cluster       *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceDeleteResponse) Reset() {
	*x = ClusterServiceDeleteResponse{}
	mi := &file_api_v1_cluster_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceDeleteResponse) ProtoMessage() {}

func (x *ClusterServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{22}
}

func (x *ClusterServiceDeleteResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

// ClusterServiceUpdateResponse is the response payload of a cluster update request
type ClusterServiceUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster is the cluster
	Cluster       *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceUpdateResponse) Reset() {
	*x = ClusterServiceUpdateResponse{}
	mi := &file_api_v1_cluster_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceUpdateResponse) ProtoMessage() {}

func (x *ClusterServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{23}
}

func (x *ClusterServiceUpdateResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

// ClusterServiceListResponse is the response payload of a cluster list request
type ClusterServiceListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Clusters a list of clusters
	Clusters      []*Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceListResponse) Reset() {
	*x = ClusterServiceListResponse{}
	mi := &file_api_v1_cluster_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceListResponse) ProtoMessage() {}

func (x *ClusterServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceListResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{24}
}

func (x *ClusterServiceListResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

// ClusterServiceWatchStatusResponse is the response payload of a cluster watch status request
type ClusterServiceWatchStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status the cluster status
	Status        *ClusterStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceWatchStatusResponse) Reset() {
	*x = ClusterServiceWatchStatusResponse{}
	mi := &file_api_v1_cluster_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceWatchStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceWatchStatusResponse) ProtoMessage() {}

func (x *ClusterServiceWatchStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceWatchStatusResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceWatchStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{25}
}

func (x *ClusterServiceWatchStatusResponse) GetStatus() *ClusterStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// ClusterServiceOperateResponse is the response payload for the cluster operate request
type ClusterServiceOperateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster is the cluster
	Cluster       *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceOperateResponse) Reset() {
	*x = ClusterServiceOperateResponse{}
	mi := &file_api_v1_cluster_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceOperateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceOperateResponse) ProtoMessage() {}

func (x *ClusterServiceOperateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cluster_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceOperateResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceOperateResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cluster_proto_rawDescGZIP(), []int{26}
}

func (x *ClusterServiceOperateResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

var File_api_v1_cluster_proto protoreflect.FileDescriptor

const file_api_v1_cluster_proto_rawDesc = "" +
	"\n" +
	"\x14api/v1/cluster.proto\x12\x06api.v1\x1a\x13api/v1/common.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x81\x05\n" +
	"\aCluster\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12\x1d\n" +
	"\x04name\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x02\x18\fR\x04name\x12$\n" +
	"\aproject\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aproject\x12\x1c\n" +
	"\tpartition\x18\x04 \x01(\tR\tpartition\x126\n" +
	"\n" +
	"kubernetes\x18\x05 \x01(\v2\x16.api.v1.KubernetesSpecR\n" +
	"kubernetes\x12(\n" +
	"\aworkers\x18\x06 \x03(\v2\x0e.api.v1.WorkerR\aworkers\x125\n" +
	"\vmaintenance\x18\a \x01(\v2\x13.api.v1.MaintenanceR\vmaintenance\x12\x16\n" +
	"\x06tenant\x18\b \x01(\tR\x06tenant\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"deleted_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\x12-\n" +
	"\x06status\x18\x14 \x01(\v2\x15.api.v1.ClusterStatusR\x06status\x12\x1d\n" +
	"\apurpose\x18\x15 \x01(\tH\x00R\apurpose\x88\x01\x01\x129\n" +
	"\n" +
	"monitoring\x18\x16 \x01(\v2\x19.api.v1.ClusterMonitoringR\n" +
	"monitoringB\n" +
	"\n" +
	"\b_purpose\"H\n" +
	"\x0eKubernetesSpec\x126\n" +
	"\aversion\x18\x01 \x01(\tB\x1c\xbaH\x19r\x17(\b2\x13[0-9]+.[0-9]+.[0-9]R\aversion\"\xfb\x01\n" +
	"\vMaintenance\x128\n" +
	"\x15kubernetes_autoupdate\x18\x01 \x01(\bH\x00R\x14kubernetesAutoupdate\x88\x01\x01\x12<\n" +
	"\x17machineimage_autoupdate\x18\x02 \x01(\bH\x01R\x16machineimageAutoupdate\x88\x01\x01\x12>\n" +
	"\vtime_window\x18\x03 \x01(\v2\x1d.api.v1.MaintenanceTimeWindowR\n" +
	"timeWindowB\x18\n" +
	"\x16_kubernetes_autoupdateB\x1a\n" +
	"\x18_machineimage_autoupdate\"\x84\x01\n" +
	"\x15MaintenanceTimeWindow\x12\"\n" +
	"\x05begin\x18\x01 \x01(\v2\f.api.v1.TimeR\x05begin\x12G\n" +
	"\bduration\x18\x02 \x01(\v2\x19.google.protobuf.DurationB\x10\xbaH\r\xaa\x01\n" +
	"\x1a\x03\b\xc0p2\x03\b\x90\x1cR\bduration\"`\n" +
	"\x04Time\x12\x1b\n" +
	"\x04hour\x18\x01 \x01(\rB\a\xbaH\x04*\x02\x18\x18R\x04hour\x12\x1f\n" +
	"\x06minute\x18\x02 \x01(\rB\a\xbaH\x04*\x02\x18<R\x06minute\x12\x1a\n" +
	"\btimezone\x18\x03 \x01(\tR\btimezone\"\xf3\x01\n" +
	"\x06Worker\x12\x1e\n" +
	"\x04name\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x04name\x12-\n" +
	"\fmachine_type\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\vmachineType\x12!\n" +
	"\aminsize\x18\x03 \x01(\rB\a\xbaH\x04*\x02\x18 R\aminsize\x12!\n" +
	"\amaxsize\x18\x04 \x01(\rB\a\xbaH\x04*\x02\x18@R\amaxsize\x12#\n" +
	"\bmaxsurge\x18\x05 \x01(\rB\a\xbaH\x04*\x02\x18@R\bmaxsurge\x12/\n" +
	"\x0emaxunavailable\x18\x06 \x01(\rB\a\xbaH\x04*\x02\x18@R\x0emaxunavailable\"\xdb\x02\n" +
	"\fWorkerUpdate\x12\x1e\n" +
	"\x04name\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x04name\x122\n" +
	"\fmachine_type\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\vmachineType\x88\x01\x01\x12&\n" +
	"\aminsize\x18\x03 \x01(\rB\a\xbaH\x04*\x02\x18 H\x01R\aminsize\x88\x01\x01\x12&\n" +
	"\amaxsize\x18\x04 \x01(\rB\a\xbaH\x04*\x02\x18@H\x02R\amaxsize\x88\x01\x01\x12(\n" +
	"\bmaxsurge\x18\x05 \x01(\rB\a\xbaH\x04*\x02\x18@H\x03R\bmaxsurge\x88\x01\x01\x124\n" +
	"\x0emaxunavailable\x18\x06 \x01(\rB\a\xbaH\x04*\x02\x18@H\x04R\x0emaxunavailable\x88\x01\x01B\x0f\n" +
	"\r_machine_typeB\n" +
	"\n" +
	"\b_minsizeB\n" +
	"\n" +
	"\b_maxsizeB\v\n" +
	"\t_maxsurgeB\x11\n" +
	"\x0f_maxunavailable\"^\n" +
	"\x18ClusterServiceGetRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12$\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aproject\"\x97\x01\n" +
	"\x1cClusterServiceOperateRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12$\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aproject\x123\n" +
	"\aoperate\x18\x03 \x01(\x0e2\x0f.api.v1.OperateB\b\xbaH\x05\x82\x01\x02\x10\x01R\aoperate\"\xb8\x01\n" +
	"#ClusterServiceGetCredentialsRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12$\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aproject\x12>\n" +
	"\n" +
	"expiration\x18\x04 \x01(\v2\x19.google.protobuf.DurationH\x00R\n" +
	"expiration\x88\x01\x01B\r\n" +
	"\v_expiration\"A\n" +
	"\x19ClusterServiceListRequest\x12$\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aproject\"\x9b\x02\n" +
	"\x1bClusterServiceCreateRequest\x12\x1f\n" +
	"\x04name\x18\x02 \x01(\tB\v\xbaH\br\x06\x10\x02\x18\fh\x01R\x04name\x12$\n" +
	"\aproject\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aproject\x12\x1c\n" +
	"\tpartition\x18\x04 \x01(\tR\tpartition\x126\n" +
	"\n" +
	"kubernetes\x18\x06 \x01(\v2\x16.api.v1.KubernetesSpecR\n" +
	"kubernetes\x12(\n" +
	"\aworkers\x18\a \x03(\v2\x0e.api.v1.WorkerR\aworkers\x125\n" +
	"\vmaintenance\x18\b \x01(\v2\x13.api.v1.MaintenanceR\vmaintenance\"\xa9\x02\n" +
	"\x1bClusterServiceUpdateRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12$\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aproject\x12;\n" +
	"\n" +
	"kubernetes\x18\x03 \x01(\v2\x16.api.v1.KubernetesSpecH\x00R\n" +
	"kubernetes\x88\x01\x01\x12.\n" +
	"\aworkers\x18\x04 \x03(\v2\x14.api.v1.WorkerUpdateR\aworkers\x12:\n" +
	"\vmaintenance\x18\x05 \x01(\v2\x13.api.v1.MaintenanceH\x01R\vmaintenance\x88\x01\x01B\r\n" +
	"\v_kubernetesB\x0e\n" +
	"\f_maintenance\"a\n" +
	"\x1bClusterServiceDeleteRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12$\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aproject\"t\n" +
	" ClusterServiceWatchStatusRequest\x12!\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\x04uuid\x88\x01\x01\x12$\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\aprojectB\a\n" +
	"\x05_uuid\"\x9d\x03\n" +
	"\rClusterStatus\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\rR\bprogress\x12\x14\n" +
	"\x05state\x18\x03 \x01(\tR\x05state\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12(\n" +
	"\x10api_server_ready\x18\n" +
	" \x01(\tR\x0eapiServerReady\x12.\n" +
	"\x13control_plane_ready\x18\v \x01(\tR\x11controlPlaneReady\x12\x1f\n" +
	"\vnodes_ready\x18\f \x01(\tR\n" +
	"nodesReady\x126\n" +
	"\x17system_components_ready\x18\r \x01(\tR\x15systemComponentsReady\x12?\n" +
	"\vlast_errors\x18\x0e \x03(\v2\x1e.api.v1.ClusterStatusLastErrorR\n" +
	"lastErrors\x12>\n" +
	"\n" +
	"conditions\x18\x0f \x03(\v2\x1e.api.v1.ClusterStatusConditionR\n" +
	"conditions\"\xaa\x01\n" +
	"\x16ClusterStatusLastError\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x1c\n" +
	"\atask_id\x18\x02 \x01(\tH\x00R\x06taskId\x88\x01\x01\x12D\n" +
	"\x10last_update_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastUpdateTimeB\n" +
	"\n" +
	"\b_task_id\"\x97\x02\n" +
	"\x16ClusterStatusCondition\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12%\n" +
	"\x0estatus_message\x18\x04 \x01(\tR\rstatusMessage\x12L\n" +
	"\x14last_transition_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x12lastTransitionTime\x12D\n" +
	"\x10last_update_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastUpdateTime\"g\n" +
	"\x11ClusterMonitoring\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\"I\n" +
	"\x1cClusterServiceCreateResponse\x12)\n" +
	"\acluster\x18\x01 \x01(\v2\x0f.api.v1.ClusterR\acluster\"F\n" +
	"\x19ClusterServiceGetResponse\x12)\n" +
	"\acluster\x18\x01 \x01(\v2\x0f.api.v1.ClusterR\acluster\"F\n" +
	"$ClusterServiceGetCredentialsResponse\x12\x1e\n" +
	"\n" +
	"kubeconfig\x18\x01 \x01(\tR\n" +
	"kubeconfig\"I\n" +
	"\x1cClusterServiceDeleteResponse\x12)\n" +
	"\acluster\x18\x01 \x01(\v2\x0f.api.v1.ClusterR\acluster\"I\n" +
	"\x1cClusterServiceUpdateResponse\x12)\n" +
	"\acluster\x18\x01 \x01(\v2\x0f.api.v1.ClusterR\acluster\"I\n" +
	"\x1aClusterServiceListResponse\x12+\n" +
	"\bclusters\x18\x01 \x03(\v2\x0f.api.v1.ClusterR\bclusters\"R\n" +
	"!ClusterServiceWatchStatusResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.api.v1.ClusterStatusR\x06status\"J\n" +
	"\x1dClusterServiceOperateResponse\x12)\n" +
	"\acluster\x18\x01 \x01(\v2\x0f.api.v1.ClusterR\acluster*b\n" +
	"\aOperate\x12\x17\n" +
	"\x13OPERATE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11OPERATE_RECONCILE\x10\x01\x12\x14\n" +
	"\x10OPERATE_MAINTAIN\x10\x02\x12\x11\n" +
	"\rOPERATE_RETRY\x10\x032\xac\x06\n" +
	"\x0eClusterService\x12_\n" +
	"\x06Create\x12#.api.v1.ClusterServiceCreateRequest\x1a$.api.v1.ClusterServiceCreateResponse\"\n" +
	"\xca\xf3\x18\x02\x01\x02\xe0\xf3\x18\x01\x12W\n" +
	"\x03Get\x12 .api.v1.ClusterServiceGetRequest\x1a!.api.v1.ClusterServiceGetResponse\"\v\xca\xf3\x18\x03\x01\x02\x03\xe8\xf3\x18\x02\x12Z\n" +
	"\x04List\x12!.api.v1.ClusterServiceListRequest\x1a\".api.v1.ClusterServiceListResponse\"\v\xca\xf3\x18\x03\x01\x02\x03\xe8\xf3\x18\x02\x12q\n" +
	"\vWatchStatus\x12(.api.v1.ClusterServiceWatchStatusRequest\x1a).api.v1.ClusterServiceWatchStatusResponse\"\v\xca\xf3\x18\x03\x01\x02\x03\xe8\xf3\x18\x020\x01\x12[\n" +
	"\x06Delete\x12#.api.v1.ClusterServiceDeleteRequest\x1a$.api.v1.ClusterServiceDeleteResponse\"\x06\xca\xf3\x18\x02\x01\x02\x12_\n" +
	"\x06Update\x12#.api.v1.ClusterServiceUpdateRequest\x1a$.api.v1.ClusterServiceUpdateResponse\"\n" +
	"\xca\xf3\x18\x02\x01\x02\xe0\xf3\x18\x01\x12s\n" +
	"\x0eGetCredentials\x12+.api.v1.ClusterServiceGetCredentialsRequest\x1a,.api.v1.ClusterServiceGetCredentialsResponse\"\x06\xca\xf3\x18\x02\x01\x02\x12^\n" +
	"\aOperate\x12$.api.v1.ClusterServiceOperateRequest\x1a%.api.v1.ClusterServiceOperateResponse\"\x06\xca\xf3\x18\x02\x01\x02B\x85\x01\n" +
	"\n" +
	"com.api.v1B\fClusterProtoP\x01Z0github.com/metal-stack-cloud/api/go/api/v1;apiv1\xa2\x02\x03AXX\xaa\x02\x06Api.V1\xca\x02\x06Api\\V1\xe2\x02\x12Api\\V1\\GPBMetadata\xea\x02\aApi::V1b\x06proto3"

var (
	file_api_v1_cluster_proto_rawDescOnce sync.Once
	file_api_v1_cluster_proto_rawDescData []byte
)

func file_api_v1_cluster_proto_rawDescGZIP() []byte {
	file_api_v1_cluster_proto_rawDescOnce.Do(func() {
		file_api_v1_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_cluster_proto_rawDesc), len(file_api_v1_cluster_proto_rawDesc)))
	})
	return file_api_v1_cluster_proto_rawDescData
}

var file_api_v1_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_api_v1_cluster_proto_goTypes = []any{
	(Operate)(0),                                 // 0: api.v1.Operate
	(*Cluster)(nil),                              // 1: api.v1.Cluster
	(*KubernetesSpec)(nil),                       // 2: api.v1.KubernetesSpec
	(*Maintenance)(nil),                          // 3: api.v1.Maintenance
	(*MaintenanceTimeWindow)(nil),                // 4: api.v1.MaintenanceTimeWindow
	(*Time)(nil),                                 // 5: api.v1.Time
	(*Worker)(nil),                               // 6: api.v1.Worker
	(*WorkerUpdate)(nil),                         // 7: api.v1.WorkerUpdate
	(*ClusterServiceGetRequest)(nil),             // 8: api.v1.ClusterServiceGetRequest
	(*ClusterServiceOperateRequest)(nil),         // 9: api.v1.ClusterServiceOperateRequest
	(*ClusterServiceGetCredentialsRequest)(nil),  // 10: api.v1.ClusterServiceGetCredentialsRequest
	(*ClusterServiceListRequest)(nil),            // 11: api.v1.ClusterServiceListRequest
	(*ClusterServiceCreateRequest)(nil),          // 12: api.v1.ClusterServiceCreateRequest
	(*ClusterServiceUpdateRequest)(nil),          // 13: api.v1.ClusterServiceUpdateRequest
	(*ClusterServiceDeleteRequest)(nil),          // 14: api.v1.ClusterServiceDeleteRequest
	(*ClusterServiceWatchStatusRequest)(nil),     // 15: api.v1.ClusterServiceWatchStatusRequest
	(*ClusterStatus)(nil),                        // 16: api.v1.ClusterStatus
	(*ClusterStatusLastError)(nil),               // 17: api.v1.ClusterStatusLastError
	(*ClusterStatusCondition)(nil),               // 18: api.v1.ClusterStatusCondition
	(*ClusterMonitoring)(nil),                    // 19: api.v1.ClusterMonitoring
	(*ClusterServiceCreateResponse)(nil),         // 20: api.v1.ClusterServiceCreateResponse
	(*ClusterServiceGetResponse)(nil),            // 21: api.v1.ClusterServiceGetResponse
	(*ClusterServiceGetCredentialsResponse)(nil), // 22: api.v1.ClusterServiceGetCredentialsResponse
	(*ClusterServiceDeleteResponse)(nil),         // 23: api.v1.ClusterServiceDeleteResponse
	(*ClusterServiceUpdateResponse)(nil),         // 24: api.v1.ClusterServiceUpdateResponse
	(*ClusterServiceListResponse)(nil),           // 25: api.v1.ClusterServiceListResponse
	(*ClusterServiceWatchStatusResponse)(nil),    // 26: api.v1.ClusterServiceWatchStatusResponse
	(*ClusterServiceOperateResponse)(nil),        // 27: api.v1.ClusterServiceOperateResponse
	(*timestamppb.Timestamp)(nil),                // 28: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                  // 29: google.protobuf.Duration
}
var file_api_v1_cluster_proto_depIdxs = []int32{
	2,  // 0: api.v1.Cluster.kubernetes:type_name -> api.v1.KubernetesSpec
	6,  // 1: api.v1.Cluster.workers:type_name -> api.v1.Worker
	3,  // 2: api.v1.Cluster.maintenance:type_name -> api.v1.Maintenance
	28, // 3: api.v1.Cluster.created_at:type_name -> google.protobuf.Timestamp
	28, // 4: api.v1.Cluster.updated_at:type_name -> google.protobuf.Timestamp
	28, // 5: api.v1.Cluster.deleted_at:type_name -> google.protobuf.Timestamp
	16, // 6: api.v1.Cluster.status:type_name -> api.v1.ClusterStatus
	19, // 7: api.v1.Cluster.monitoring:type_name -> api.v1.ClusterMonitoring
	4,  // 8: api.v1.Maintenance.time_window:type_name -> api.v1.MaintenanceTimeWindow
	5,  // 9: api.v1.MaintenanceTimeWindow.begin:type_name -> api.v1.Time
	29, // 10: api.v1.MaintenanceTimeWindow.duration:type_name -> google.protobuf.Duration
	0,  // 11: api.v1.ClusterServiceOperateRequest.operate:type_name -> api.v1.Operate
	29, // 12: api.v1.ClusterServiceGetCredentialsRequest.expiration:type_name -> google.protobuf.Duration
	2,  // 13: api.v1.ClusterServiceCreateRequest.kubernetes:type_name -> api.v1.KubernetesSpec
	6,  // 14: api.v1.ClusterServiceCreateRequest.workers:type_name -> api.v1.Worker
	3,  // 15: api.v1.ClusterServiceCreateRequest.maintenance:type_name -> api.v1.Maintenance
	2,  // 16: api.v1.ClusterServiceUpdateRequest.kubernetes:type_name -> api.v1.KubernetesSpec
	7,  // 17: api.v1.ClusterServiceUpdateRequest.workers:type_name -> api.v1.WorkerUpdate
	3,  // 18: api.v1.ClusterServiceUpdateRequest.maintenance:type_name -> api.v1.Maintenance
	17, // 19: api.v1.ClusterStatus.last_errors:type_name -> api.v1.ClusterStatusLastError
	18, // 20: api.v1.ClusterStatus.conditions:type_name -> api.v1.ClusterStatusCondition
	28, // 21: api.v1.ClusterStatusLastError.last_update_time:type_name -> google.protobuf.Timestamp
	28, // 22: api.v1.ClusterStatusCondition.last_transition_time:type_name -> google.protobuf.Timestamp
	28, // 23: api.v1.ClusterStatusCondition.last_update_time:type_name -> google.protobuf.Timestamp
	1,  // 24: api.v1.ClusterServiceCreateResponse.cluster:type_name -> api.v1.Cluster
	1,  // 25: api.v1.ClusterServiceGetResponse.cluster:type_name -> api.v1.Cluster
	1,  // 26: api.v1.ClusterServiceDeleteResponse.cluster:type_name -> api.v1.Cluster
	1,  // 27: api.v1.ClusterServiceUpdateResponse.cluster:type_name -> api.v1.Cluster
	1,  // 28: api.v1.ClusterServiceListResponse.clusters:type_name -> api.v1.Cluster
	16, // 29: api.v1.ClusterServiceWatchStatusResponse.status:type_name -> api.v1.ClusterStatus
	1,  // 30: api.v1.ClusterServiceOperateResponse.cluster:type_name -> api.v1.Cluster
	12, // 31: api.v1.ClusterService.Create:input_type -> api.v1.ClusterServiceCreateRequest
	8,  // 32: api.v1.ClusterService.Get:input_type -> api.v1.ClusterServiceGetRequest
	11, // 33: api.v1.ClusterService.List:input_type -> api.v1.ClusterServiceListRequest
	15, // 34: api.v1.ClusterService.WatchStatus:input_type -> api.v1.ClusterServiceWatchStatusRequest
	14, // 35: api.v1.ClusterService.Delete:input_type -> api.v1.ClusterServiceDeleteRequest
	13, // 36: api.v1.ClusterService.Update:input_type -> api.v1.ClusterServiceUpdateRequest
	10, // 37: api.v1.ClusterService.GetCredentials:input_type -> api.v1.ClusterServiceGetCredentialsRequest
	9,  // 38: api.v1.ClusterService.Operate:input_type -> api.v1.ClusterServiceOperateRequest
	20, // 39: api.v1.ClusterService.Create:output_type -> api.v1.ClusterServiceCreateResponse
	21, // 40: api.v1.ClusterService.Get:output_type -> api.v1.ClusterServiceGetResponse
	25, // 41: api.v1.ClusterService.List:output_type -> api.v1.ClusterServiceListResponse
	26, // 42: api.v1.ClusterService.WatchStatus:output_type -> api.v1.ClusterServiceWatchStatusResponse
	23, // 43: api.v1.ClusterService.Delete:output_type -> api.v1.ClusterServiceDeleteResponse
	24, // 44: api.v1.ClusterService.Update:output_type -> api.v1.ClusterServiceUpdateResponse
	22, // 45: api.v1.ClusterService.GetCredentials:output_type -> api.v1.ClusterServiceGetCredentialsResponse
	27, // 46: api.v1.ClusterService.Operate:output_type -> api.v1.ClusterServiceOperateResponse
	39, // [39:47] is the sub-list for method output_type
	31, // [31:39] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_api_v1_cluster_proto_init() }
func file_api_v1_cluster_proto_init() {
	if File_api_v1_cluster_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_cluster_proto_msgTypes[0].OneofWrappers = []any{}
	file_api_v1_cluster_proto_msgTypes[2].OneofWrappers = []any{}
	file_api_v1_cluster_proto_msgTypes[6].OneofWrappers = []any{}
	file_api_v1_cluster_proto_msgTypes[9].OneofWrappers = []any{}
	file_api_v1_cluster_proto_msgTypes[12].OneofWrappers = []any{}
	file_api_v1_cluster_proto_msgTypes[14].OneofWrappers = []any{}
	file_api_v1_cluster_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_cluster_proto_rawDesc), len(file_api_v1_cluster_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_cluster_proto_goTypes,
		DependencyIndexes: file_api_v1_cluster_proto_depIdxs,
		EnumInfos:         file_api_v1_cluster_proto_enumTypes,
		MessageInfos:      file_api_v1_cluster_proto_msgTypes,
	}.Build()
	File_api_v1_cluster_proto = out.File
	file_api_v1_cluster_proto_goTypes = nil
	file_api_v1_cluster_proto_depIdxs = nil
}
