// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: admin/v1/cluster.proto

package adminv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/metal-stack-cloud/api/go/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClusterServiceGetRequest is the request payload for the cluster get request
type ClusterServiceGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster to get
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// WithMachines if set to true machines of all worker groups are also returned
	WithMachines  bool `protobuf:"varint,2,opt,name=with_machines,json=withMachines,proto3" json:"with_machines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceGetRequest) Reset() {
	*x = ClusterServiceGetRequest{}
	mi := &file_admin_v1_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceGetRequest) ProtoMessage() {}

func (x *ClusterServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceGetRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *ClusterServiceGetRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ClusterServiceGetRequest) GetWithMachines() bool {
	if x != nil {
		return x.WithMachines
	}
	return false
}

// ClusterServiceListRequest is the request payload for the cluster list request
type ClusterServiceListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid *string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
	// Project of the cluster
	Project *string `protobuf:"bytes,2,opt,name=project,proto3,oneof" json:"project,omitempty"`
	// Tenant of the cluster
	Tenant *string `protobuf:"bytes,3,opt,name=tenant,proto3,oneof" json:"tenant,omitempty"`
	// Partition of the cluster
	Partition *string `protobuf:"bytes,4,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
	// Seed of the cluster
	Seed *string `protobuf:"bytes,5,opt,name=seed,proto3,oneof" json:"seed,omitempty"`
	// Name of the cluster
	Name *string `protobuf:"bytes,6,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Purpose of the cluster
	Purpose *string `protobuf:"bytes,7,opt,name=purpose,proto3,oneof" json:"purpose,omitempty"`
	// Labels of the cluster
	Labels        map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceListRequest) Reset() {
	*x = ClusterServiceListRequest{}
	mi := &file_admin_v1_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceListRequest) ProtoMessage() {}

func (x *ClusterServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceListRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceListRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterServiceListRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *ClusterServiceListRequest) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *ClusterServiceListRequest) GetTenant() string {
	if x != nil && x.Tenant != nil {
		return *x.Tenant
	}
	return ""
}

func (x *ClusterServiceListRequest) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

func (x *ClusterServiceListRequest) GetSeed() string {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return ""
}

func (x *ClusterServiceListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ClusterServiceListRequest) GetPurpose() string {
	if x != nil && x.Purpose != nil {
		return *x.Purpose
	}
	return ""
}

func (x *ClusterServiceListRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// ClusterServiceCredentialsRequest is the request payload for the cluster credentials request
type ClusterServiceCredentialsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of the cluster
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// WithVpn if set VPN details are returned
	WithVpn bool `protobuf:"varint,2,opt,name=with_vpn,json=withVpn,proto3" json:"with_vpn,omitempty"`
	// WithSsh if set ssh access credentials are returned
	WithSsh bool `protobuf:"varint,3,opt,name=with_ssh,json=withSsh,proto3" json:"with_ssh,omitempty"`
	// Expiration defines the duration after which the kubernetes token is not valid anymore
	Expiration    *durationpb.Duration `protobuf:"bytes,4,opt,name=expiration,proto3,oneof" json:"expiration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceCredentialsRequest) Reset() {
	*x = ClusterServiceCredentialsRequest{}
	mi := &file_admin_v1_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceCredentialsRequest) ProtoMessage() {}

func (x *ClusterServiceCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceCredentialsRequest.ProtoReflect.Descriptor instead.
func (*ClusterServiceCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *ClusterServiceCredentialsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ClusterServiceCredentialsRequest) GetWithVpn() bool {
	if x != nil {
		return x.WithVpn
	}
	return false
}

func (x *ClusterServiceCredentialsRequest) GetWithSsh() bool {
	if x != nil {
		return x.WithSsh
	}
	return false
}

func (x *ClusterServiceCredentialsRequest) GetExpiration() *durationpb.Duration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

// ClusterServiceGetResponse is the response payload for the cluster get request
type ClusterServiceGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster is the cluster
	Cluster *v1.Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Machines is a list of all machines in all worker groups
	Machines      []*Machine `protobuf:"bytes,2,rep,name=machines,proto3" json:"machines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceGetResponse) Reset() {
	*x = ClusterServiceGetResponse{}
	mi := &file_admin_v1_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceGetResponse) ProtoMessage() {}

func (x *ClusterServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceGetResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *ClusterServiceGetResponse) GetCluster() *v1.Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *ClusterServiceGetResponse) GetMachines() []*Machine {
	if x != nil {
		return x.Machines
	}
	return nil
}

// ClusterServiceListResponse is the response payload for the cluster list request
type ClusterServiceListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Clusters is the list of clusters
	Clusters      []*v1.Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceListResponse) Reset() {
	*x = ClusterServiceListResponse{}
	mi := &file_admin_v1_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceListResponse) ProtoMessage() {}

func (x *ClusterServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceListResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceListResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterServiceListResponse) GetClusters() []*v1.Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

// ClusterServiceCredentialsResponse is the response payload for the cluster credentials request
type ClusterServiceCredentialsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kubeconfig is the access token for the kubernetes api of this cluster
	Kubeconfig string `protobuf:"bytes,1,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
	// SshKeypair is the keypair to access the firewall of the cluster with ssh
	SshKeypair *SSHKeyPair `protobuf:"bytes,2,opt,name=ssh_keypair,json=sshKeypair,proto3" json:"ssh_keypair,omitempty"`
	// Vpn are the VPN access details
	Vpn           *VPN `protobuf:"bytes,3,opt,name=vpn,proto3" json:"vpn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterServiceCredentialsResponse) Reset() {
	*x = ClusterServiceCredentialsResponse{}
	mi := &file_admin_v1_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterServiceCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterServiceCredentialsResponse) ProtoMessage() {}

func (x *ClusterServiceCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterServiceCredentialsResponse.ProtoReflect.Descriptor instead.
func (*ClusterServiceCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *ClusterServiceCredentialsResponse) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

func (x *ClusterServiceCredentialsResponse) GetSshKeypair() *SSHKeyPair {
	if x != nil {
		return x.SshKeypair
	}
	return nil
}

func (x *ClusterServiceCredentialsResponse) GetVpn() *VPN {
	if x != nil {
		return x.Vpn
	}
	return nil
}

// SSHKeyPair details to access a firewall via ssh
type SSHKeyPair struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Publickey is the public key
	Publickey []byte `protobuf:"bytes,1,opt,name=publickey,proto3" json:"publickey,omitempty"`
	// Privatekey is the private key
	Privatekey    []byte `protobuf:"bytes,2,opt,name=privatekey,proto3" json:"privatekey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSHKeyPair) Reset() {
	*x = SSHKeyPair{}
	mi := &file_admin_v1_cluster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSHKeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHKeyPair) ProtoMessage() {}

func (x *SSHKeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_cluster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHKeyPair.ProtoReflect.Descriptor instead.
func (*SSHKeyPair) Descriptor() ([]byte, []int) {
	return file_admin_v1_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *SSHKeyPair) GetPublickey() []byte {
	if x != nil {
		return x.Publickey
	}
	return nil
}

func (x *SSHKeyPair) GetPrivatekey() []byte {
	if x != nil {
		return x.Privatekey
	}
	return nil
}

var File_admin_v1_cluster_proto protoreflect.FileDescriptor

const file_admin_v1_cluster_proto_rawDesc = "" +
	"\n" +
	"\x16admin/v1/cluster.proto\x12\badmin.v1\x1a\x16admin/v1/machine.proto\x1a\x14api/v1/cluster.proto\x1a\x13api/v1/common.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1egoogle/protobuf/duration.proto\"]\n" +
	"\x18ClusterServiceGetRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12#\n" +
	"\rwith_machines\x18\x02 \x01(\bR\fwithMachines\"\xb4\x03\n" +
	"\x19ClusterServiceListRequest\x12\x17\n" +
	"\x04uuid\x18\x01 \x01(\tH\x00R\x04uuid\x88\x01\x01\x12\x1d\n" +
	"\aproject\x18\x02 \x01(\tH\x01R\aproject\x88\x01\x01\x12\x1b\n" +
	"\x06tenant\x18\x03 \x01(\tH\x02R\x06tenant\x88\x01\x01\x12!\n" +
	"\tpartition\x18\x04 \x01(\tH\x03R\tpartition\x88\x01\x01\x12\x17\n" +
	"\x04seed\x18\x05 \x01(\tH\x04R\x04seed\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x06 \x01(\tH\x05R\x04name\x88\x01\x01\x12\x1d\n" +
	"\apurpose\x18\a \x01(\tH\x06R\apurpose\x88\x01\x01\x12G\n" +
	"\x06labels\x18\b \x03(\v2/.admin.v1.ClusterServiceListRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\a\n" +
	"\x05_uuidB\n" +
	"\n" +
	"\b_projectB\t\n" +
	"\a_tenantB\f\n" +
	"\n" +
	"_partitionB\a\n" +
	"\x05_seedB\a\n" +
	"\x05_nameB\n" +
	"\n" +
	"\b_purpose\"\xc5\x01\n" +
	" ClusterServiceCredentialsRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12\x19\n" +
	"\bwith_vpn\x18\x02 \x01(\bR\awithVpn\x12\x19\n" +
	"\bwith_ssh\x18\x03 \x01(\bR\awithSsh\x12>\n" +
	"\n" +
	"expiration\x18\x04 \x01(\v2\x19.google.protobuf.DurationH\x00R\n" +
	"expiration\x88\x01\x01B\r\n" +
	"\v_expiration\"u\n" +
	"\x19ClusterServiceGetResponse\x12)\n" +
	"\acluster\x18\x01 \x01(\v2\x0f.api.v1.ClusterR\acluster\x12-\n" +
	"\bmachines\x18\x02 \x03(\v2\x11.admin.v1.MachineR\bmachines\"I\n" +
	"\x1aClusterServiceListResponse\x12+\n" +
	"\bclusters\x18\x01 \x03(\v2\x0f.api.v1.ClusterR\bclusters\"\x9b\x01\n" +
	"!ClusterServiceCredentialsResponse\x12\x1e\n" +
	"\n" +
	"kubeconfig\x18\x01 \x01(\tR\n" +
	"kubeconfig\x125\n" +
	"\vssh_keypair\x18\x02 \x01(\v2\x14.admin.v1.SSHKeyPairR\n" +
	"sshKeypair\x12\x1f\n" +
	"\x03vpn\x18\x03 \x01(\v2\r.admin.v1.VPNR\x03vpn\"J\n" +
	"\n" +
	"SSHKeyPair\x12\x1c\n" +
	"\tpublickey\x18\x01 \x01(\fR\tpublickey\x12\x1e\n" +
	"\n" +
	"privatekey\x18\x02 \x01(\fR\n" +
	"privatekey2\xba\x02\n" +
	"\x0eClusterService\x12Z\n" +
	"\x03Get\x12\".admin.v1.ClusterServiceGetRequest\x1a#.admin.v1.ClusterServiceGetResponse\"\n" +
	"\xd2\xf3\x18\x02\x01\x02\xe8\xf3\x18\x02\x12]\n" +
	"\x04List\x12#.admin.v1.ClusterServiceListRequest\x1a$.admin.v1.ClusterServiceListResponse\"\n" +
	"\xd2\xf3\x18\x02\x01\x02\xe8\xf3\x18\x02\x12m\n" +
	"\vCredentials\x12*.admin.v1.ClusterServiceCredentialsRequest\x1a+.admin.v1.ClusterServiceCredentialsResponse\"\x05\xd2\xf3\x18\x01\x01B\x93\x01\n" +
	"\fcom.admin.v1B\fClusterProtoP\x01Z4github.com/metal-stack-cloud/api/go/admin/v1;adminv1\xa2\x02\x03AXX\xaa\x02\bAdmin.V1\xca\x02\bAdmin\\V1\xe2\x02\x14Admin\\V1\\GPBMetadata\xea\x02\tAdmin::V1b\x06proto3"

var (
	file_admin_v1_cluster_proto_rawDescOnce sync.Once
	file_admin_v1_cluster_proto_rawDescData []byte
)

func file_admin_v1_cluster_proto_rawDescGZIP() []byte {
	file_admin_v1_cluster_proto_rawDescOnce.Do(func() {
		file_admin_v1_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_admin_v1_cluster_proto_rawDesc), len(file_admin_v1_cluster_proto_rawDesc)))
	})
	return file_admin_v1_cluster_proto_rawDescData
}

var file_admin_v1_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_admin_v1_cluster_proto_goTypes = []any{
	(*ClusterServiceGetRequest)(nil),          // 0: admin.v1.ClusterServiceGetRequest
	(*ClusterServiceListRequest)(nil),         // 1: admin.v1.ClusterServiceListRequest
	(*ClusterServiceCredentialsRequest)(nil),  // 2: admin.v1.ClusterServiceCredentialsRequest
	(*ClusterServiceGetResponse)(nil),         // 3: admin.v1.ClusterServiceGetResponse
	(*ClusterServiceListResponse)(nil),        // 4: admin.v1.ClusterServiceListResponse
	(*ClusterServiceCredentialsResponse)(nil), // 5: admin.v1.ClusterServiceCredentialsResponse
	(*SSHKeyPair)(nil),                        // 6: admin.v1.SSHKeyPair
	nil,                                       // 7: admin.v1.ClusterServiceListRequest.LabelsEntry
	(*durationpb.Duration)(nil),               // 8: google.protobuf.Duration
	(*v1.Cluster)(nil),                        // 9: api.v1.Cluster
	(*Machine)(nil),                           // 10: admin.v1.Machine
	(*VPN)(nil),                               // 11: admin.v1.VPN
}
var file_admin_v1_cluster_proto_depIdxs = []int32{
	7,  // 0: admin.v1.ClusterServiceListRequest.labels:type_name -> admin.v1.ClusterServiceListRequest.LabelsEntry
	8,  // 1: admin.v1.ClusterServiceCredentialsRequest.expiration:type_name -> google.protobuf.Duration
	9,  // 2: admin.v1.ClusterServiceGetResponse.cluster:type_name -> api.v1.Cluster
	10, // 3: admin.v1.ClusterServiceGetResponse.machines:type_name -> admin.v1.Machine
	9,  // 4: admin.v1.ClusterServiceListResponse.clusters:type_name -> api.v1.Cluster
	6,  // 5: admin.v1.ClusterServiceCredentialsResponse.ssh_keypair:type_name -> admin.v1.SSHKeyPair
	11, // 6: admin.v1.ClusterServiceCredentialsResponse.vpn:type_name -> admin.v1.VPN
	0,  // 7: admin.v1.ClusterService.Get:input_type -> admin.v1.ClusterServiceGetRequest
	1,  // 8: admin.v1.ClusterService.List:input_type -> admin.v1.ClusterServiceListRequest
	2,  // 9: admin.v1.ClusterService.Credentials:input_type -> admin.v1.ClusterServiceCredentialsRequest
	3,  // 10: admin.v1.ClusterService.Get:output_type -> admin.v1.ClusterServiceGetResponse
	4,  // 11: admin.v1.ClusterService.List:output_type -> admin.v1.ClusterServiceListResponse
	5,  // 12: admin.v1.ClusterService.Credentials:output_type -> admin.v1.ClusterServiceCredentialsResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_admin_v1_cluster_proto_init() }
func file_admin_v1_cluster_proto_init() {
	if File_admin_v1_cluster_proto != nil {
		return
	}
	file_admin_v1_machine_proto_init()
	file_admin_v1_cluster_proto_msgTypes[1].OneofWrappers = []any{}
	file_admin_v1_cluster_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_admin_v1_cluster_proto_rawDesc), len(file_admin_v1_cluster_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_v1_cluster_proto_goTypes,
		DependencyIndexes: file_admin_v1_cluster_proto_depIdxs,
		MessageInfos:      file_admin_v1_cluster_proto_msgTypes,
	}.Build()
	File_admin_v1_cluster_proto = out.File
	file_admin_v1_cluster_proto_goTypes = nil
	file_admin_v1_cluster_proto_depIdxs = nil
}
