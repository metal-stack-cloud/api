// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: admin/v1/storage.proto

package adminv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/metal-stack-cloud/api/go/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StorageServiceClusterInfoRequest is the request payload for the cluster info request
type StorageServiceClusterInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partition for which the cluster info should be returned
	Partition     *string `protobuf:"bytes,1,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageServiceClusterInfoRequest) Reset() {
	*x = StorageServiceClusterInfoRequest{}
	mi := &file_admin_v1_storage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageServiceClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageServiceClusterInfoRequest) ProtoMessage() {}

func (x *StorageServiceClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageServiceClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*StorageServiceClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{0}
}

func (x *StorageServiceClusterInfoRequest) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

// StorageServiceClusterInfoResponse is the response payload for the cluster info request
type StorageServiceClusterInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Infos about the storage systems
	Infos         []*StorageClusterInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageServiceClusterInfoResponse) Reset() {
	*x = StorageServiceClusterInfoResponse{}
	mi := &file_admin_v1_storage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageServiceClusterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageServiceClusterInfoResponse) ProtoMessage() {}

func (x *StorageServiceClusterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageServiceClusterInfoResponse.ProtoReflect.Descriptor instead.
func (*StorageServiceClusterInfoResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{1}
}

func (x *StorageServiceClusterInfoResponse) GetInfos() []*StorageClusterInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

// StorageClusterInfo represents details about a storage system
type StorageClusterInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partition where this storage system is present
	Partition string `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	// Uuid of this storage system
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// SubsystemNqn is the subsystem nqn
	SubsystemNqn string `protobuf:"bytes,3,opt,name=subsystem_nqn,json=subsystemNqn,proto3" json:"subsystem_nqn,omitempty"`
	// CurrentMaxReplicas defines how many replicas a volume can have currently
	CurrentMaxReplicas uint32 `protobuf:"varint,4,opt,name=current_max_replicas,json=currentMaxReplicas,proto3" json:"current_max_replicas,omitempty"`
	// SupportedMaxReplicas defines how many replicas a volume can have at max
	SupportedMaxReplicas uint32 `protobuf:"varint,5,opt,name=supported_max_replicas,json=supportedMaxReplicas,proto3" json:"supported_max_replicas,omitempty"`
	// Statistics of the storage system
	Statistics *ClusterStatisticsApi `protobuf:"bytes,6,opt,name=statistics,proto3" json:"statistics,omitempty"`
	// Health of the storage system
	Health *ClusterHealth `protobuf:"bytes,7,opt,name=health,proto3" json:"health,omitempty"`
	// MinVersionInCluster is the minimum server version in this cluster
	MinVersionInCluster string `protobuf:"bytes,8,opt,name=min_version_in_cluster,json=minVersionInCluster,proto3" json:"min_version_in_cluster,omitempty"`
	// MinAllowedVersion is the minimum possible server version in this cluster
	MinAllowedVersion string `protobuf:"bytes,9,opt,name=min_allowed_version,json=minAllowedVersion,proto3" json:"min_allowed_version,omitempty"`
	// MaxAllowedVersion is the maximum possible server version in this cluster
	MaxAllowedVersion string `protobuf:"bytes,10,opt,name=max_allowed_version,json=maxAllowedVersion,proto3" json:"max_allowed_version,omitempty"`
	// ApiEndpoints is a list of ips of all api endpoints this cluster has
	ApiEndpoints []string `protobuf:"bytes,11,rep,name=api_endpoints,json=apiEndpoints,proto3" json:"api_endpoints,omitempty"`
	// DiscoveryEndpoints is a list of ips of all discovery endpoints this cluster has
	DiscoveryEndpoints []string `protobuf:"bytes,12,rep,name=discovery_endpoints,json=discoveryEndpoints,proto3" json:"discovery_endpoints,omitempty"`
	// Servers is a list of storage servers in this storage system
	Servers       []*StorageServerInfo `protobuf:"bytes,13,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageClusterInfo) Reset() {
	*x = StorageClusterInfo{}
	mi := &file_admin_v1_storage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageClusterInfo) ProtoMessage() {}

func (x *StorageClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageClusterInfo.ProtoReflect.Descriptor instead.
func (*StorageClusterInfo) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{2}
}

func (x *StorageClusterInfo) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *StorageClusterInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StorageClusterInfo) GetSubsystemNqn() string {
	if x != nil {
		return x.SubsystemNqn
	}
	return ""
}

func (x *StorageClusterInfo) GetCurrentMaxReplicas() uint32 {
	if x != nil {
		return x.CurrentMaxReplicas
	}
	return 0
}

func (x *StorageClusterInfo) GetSupportedMaxReplicas() uint32 {
	if x != nil {
		return x.SupportedMaxReplicas
	}
	return 0
}

func (x *StorageClusterInfo) GetStatistics() *ClusterStatisticsApi {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *StorageClusterInfo) GetHealth() *ClusterHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *StorageClusterInfo) GetMinVersionInCluster() string {
	if x != nil {
		return x.MinVersionInCluster
	}
	return ""
}

func (x *StorageClusterInfo) GetMinAllowedVersion() string {
	if x != nil {
		return x.MinAllowedVersion
	}
	return ""
}

func (x *StorageClusterInfo) GetMaxAllowedVersion() string {
	if x != nil {
		return x.MaxAllowedVersion
	}
	return ""
}

func (x *StorageClusterInfo) GetApiEndpoints() []string {
	if x != nil {
		return x.ApiEndpoints
	}
	return nil
}

func (x *StorageClusterInfo) GetDiscoveryEndpoints() []string {
	if x != nil {
		return x.DiscoveryEndpoints
	}
	return nil
}

func (x *StorageClusterInfo) GetServers() []*StorageServerInfo {
	if x != nil {
		return x.Servers
	}
	return nil
}

// StorageServerInfo contains details about a single storage server
type StorageServerInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid of this server
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Name of this server
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// RiskOfServiceLossState describes the risk of service loss
	RiskOfServiceLossState string `protobuf:"bytes,3,opt,name=risk_of_service_loss_state,json=riskOfServiceLossState,proto3" json:"risk_of_service_loss_state,omitempty"`
	// State of this server
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	// ServerEndpoints is a list of ips this server offers
	ServerEndpoints []string `protobuf:"bytes,5,rep,name=server_endpoints,json=serverEndpoints,proto3" json:"server_endpoints,omitempty"`
	// LightOsVersion is the version of the storage server version
	LightOsVersion string `protobuf:"bytes,6,opt,name=light_os_version,json=lightOsVersion,proto3" json:"light_os_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StorageServerInfo) Reset() {
	*x = StorageServerInfo{}
	mi := &file_admin_v1_storage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageServerInfo) ProtoMessage() {}

func (x *StorageServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageServerInfo.ProtoReflect.Descriptor instead.
func (*StorageServerInfo) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{3}
}

func (x *StorageServerInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StorageServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StorageServerInfo) GetRiskOfServiceLossState() string {
	if x != nil {
		return x.RiskOfServiceLossState
	}
	return ""
}

func (x *StorageServerInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StorageServerInfo) GetServerEndpoints() []string {
	if x != nil {
		return x.ServerEndpoints
	}
	return nil
}

func (x *StorageServerInfo) GetLightOsVersion() string {
	if x != nil {
		return x.LightOsVersion
	}
	return ""
}

// ClusterHealth the health of the cluster
type ClusterHealth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// State of the cluster
	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	// NumDegradedVolumes is the number of degraded volumes
	NumDegradedVolumes uint32 `protobuf:"varint,2,opt,name=num_degraded_volumes,json=numDegradedVolumes,proto3" json:"num_degraded_volumes,omitempty"`
	// NumReadonlyVolumes is the number of read only volumes
	NumReadOnlyVolumes uint32 `protobuf:"varint,3,opt,name=num_read_only_volumes,json=numReadOnlyVolumes,proto3" json:"num_read_only_volumes,omitempty"`
	// NumNotAvailableVolumes is the number of not available volumes
	NumNotAvailableVolumes uint32 `protobuf:"varint,4,opt,name=num_not_available_volumes,json=numNotAvailableVolumes,proto3" json:"num_not_available_volumes,omitempty"`
	// NumInactiveVolumes is the number of inactive volumes
	NumInactiveNodes uint32 `protobuf:"varint,5,opt,name=num_inactive_nodes,json=numInactiveNodes,proto3" json:"num_inactive_nodes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ClusterHealth) Reset() {
	*x = ClusterHealth{}
	mi := &file_admin_v1_storage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterHealth) ProtoMessage() {}

func (x *ClusterHealth) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterHealth.ProtoReflect.Descriptor instead.
func (*ClusterHealth) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterHealth) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ClusterHealth) GetNumDegradedVolumes() uint32 {
	if x != nil {
		return x.NumDegradedVolumes
	}
	return 0
}

func (x *ClusterHealth) GetNumReadOnlyVolumes() uint32 {
	if x != nil {
		return x.NumReadOnlyVolumes
	}
	return 0
}

func (x *ClusterHealth) GetNumNotAvailableVolumes() uint32 {
	if x != nil {
		return x.NumNotAvailableVolumes
	}
	return 0
}

func (x *ClusterHealth) GetNumInactiveNodes() uint32 {
	if x != nil {
		return x.NumInactiveNodes
	}
	return 0
}

// ClusterStatisticsApi detailed statistics of the storage cluster
type ClusterStatisticsApi struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Installed Physical Storage
	//
	// All installed SSDs capacities over all servers in cluster, given in bytes.
	InstalledPhysicalStorage uint64 `protobuf:"varint,1,opt,name=installed_physical_storage,json=installedPhysicalStorage,proto3" json:"installed_physical_storage,omitempty"`
	// Total Attached Physical Storage
	//
	// Sum of all managed and healthy SSDs capacities, given in bytes.
	ManagedPhysicalStorage uint64 `protobuf:"varint,2,opt,name=managed_physical_storage,json=managedPhysicalStorage,proto3" json:"managed_physical_storage,omitempty"`
	// Effective Physical Storage
	//
	// Effective Physical storage excluding overhead of OVP and Parity, given in bytes.
	EffectivePhysicalStorage uint64 `protobuf:"varint,3,opt,name=effective_physical_storage,json=effectivePhysicalStorage,proto3" json:"effective_physical_storage,omitempty"`
	// Logical Storage
	//
	// Sum of capacities of all allocated volumes, given in bytes.
	LogicalStorage uint64 `protobuf:"varint,4,opt,name=logical_storage,json=logicalStorage,proto3" json:"logical_storage,omitempty"`
	// Logical Used Storage
	//
	// Logical storage space used by all volumes (n of LBAs x 4096), given in bytes.
	LogicalUsedStorage uint64 `protobuf:"varint,5,opt,name=logical_used_storage,json=logicalUsedStorage,proto3" json:"logical_used_storage,omitempty"`
	// Physical Used Storage Excluding Parity
	//
	// Physical storage space occupied by all volumes (data only), given in bytes.
	PhysicalUsedStorage uint64 `protobuf:"varint,6,opt,name=physical_used_storage,json=physicalUsedStorage,proto3" json:"physical_used_storage,omitempty"`
	// Physical Used Storage
	//
	// Physical storage space occupied by all data including Parity overhead when EC enabled (physical n*disks/(n*disks -1)), given in bytes.
	PhysicalUsedStorageIncludingParity uint64 `protobuf:"varint,7,opt,name=physical_used_storage_including_parity,json=physicalUsedStorageIncludingParity,proto3" json:"physical_used_storage_including_parity,omitempty"`
	// Free Physical Storage
	//
	// Free storage before entering to read-only mode , given in bytes.
	FreePhysicalStorage uint64 `protobuf:"varint,8,opt,name=free_physical_storage,json=freePhysicalStorage,proto3" json:"free_physical_storage,omitempty"`
	// Estimated Free Logical Storage
	//
	// Estimated free storage before entering to read-only mode assuming current compression ratio, given in bytes.
	EstimatedFreeLogicalStorage uint64 `protobuf:"varint,9,opt,name=estimated_free_logical_storage,json=estimatedFreeLogicalStorage,proto3" json:"estimated_free_logical_storage,omitempty"`
	// Estimated Total Available Logical Storage
	//
	// Estimate of total available logical storage based on current compression ratio (effective * compression)
	EstimatedLogicalStorage uint64 `protobuf:"varint,10,opt,name=estimated_logical_storage,json=estimatedLogicalStorage,proto3" json:"estimated_logical_storage,omitempty"`
	// compression ratio
	//
	// compression ratio logicalUsedStorage/physicalUsedStorage
	CompressionRatio float64 `protobuf:"fixed64,11,opt,name=compression_ratio,json=compressionRatio,proto3" json:"compression_ratio,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ClusterStatisticsApi) Reset() {
	*x = ClusterStatisticsApi{}
	mi := &file_admin_v1_storage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatisticsApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatisticsApi) ProtoMessage() {}

func (x *ClusterStatisticsApi) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatisticsApi.ProtoReflect.Descriptor instead.
func (*ClusterStatisticsApi) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{5}
}

func (x *ClusterStatisticsApi) GetInstalledPhysicalStorage() uint64 {
	if x != nil {
		return x.InstalledPhysicalStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetManagedPhysicalStorage() uint64 {
	if x != nil {
		return x.ManagedPhysicalStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetEffectivePhysicalStorage() uint64 {
	if x != nil {
		return x.EffectivePhysicalStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetLogicalStorage() uint64 {
	if x != nil {
		return x.LogicalStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetLogicalUsedStorage() uint64 {
	if x != nil {
		return x.LogicalUsedStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetPhysicalUsedStorage() uint64 {
	if x != nil {
		return x.PhysicalUsedStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetPhysicalUsedStorageIncludingParity() uint64 {
	if x != nil {
		return x.PhysicalUsedStorageIncludingParity
	}
	return 0
}

func (x *ClusterStatisticsApi) GetFreePhysicalStorage() uint64 {
	if x != nil {
		return x.FreePhysicalStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetEstimatedFreeLogicalStorage() uint64 {
	if x != nil {
		return x.EstimatedFreeLogicalStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetEstimatedLogicalStorage() uint64 {
	if x != nil {
		return x.EstimatedLogicalStorage
	}
	return 0
}

func (x *ClusterStatisticsApi) GetCompressionRatio() float64 {
	if x != nil {
		return x.CompressionRatio
	}
	return 0
}

// StorageServiceListVolumesRequest is the request payload for the volume list request
type StorageServiceListVolumesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid is the uuid of the volume to list
	Uuid *string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
	// Project is the project of the volume to list
	Project *string `protobuf:"bytes,2,opt,name=project,proto3,oneof" json:"project,omitempty"`
	// Partition is the partition of the volume to list
	Partition *string `protobuf:"bytes,3,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
	// Name is the name of the volume to list
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Tenant is the tenant of the volume to list
	Tenant        *string `protobuf:"bytes,5,opt,name=tenant,proto3,oneof" json:"tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageServiceListVolumesRequest) Reset() {
	*x = StorageServiceListVolumesRequest{}
	mi := &file_admin_v1_storage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageServiceListVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageServiceListVolumesRequest) ProtoMessage() {}

func (x *StorageServiceListVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageServiceListVolumesRequest.ProtoReflect.Descriptor instead.
func (*StorageServiceListVolumesRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{6}
}

func (x *StorageServiceListVolumesRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *StorageServiceListVolumesRequest) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *StorageServiceListVolumesRequest) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

func (x *StorageServiceListVolumesRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *StorageServiceListVolumesRequest) GetTenant() string {
	if x != nil && x.Tenant != nil {
		return *x.Tenant
	}
	return ""
}

// StorageServiceListVolumesResponse is the response payload for the volume list request
type StorageServiceListVolumesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Volumes is the list of volumes
	Volumes       []*v1.Volume `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageServiceListVolumesResponse) Reset() {
	*x = StorageServiceListVolumesResponse{}
	mi := &file_admin_v1_storage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageServiceListVolumesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageServiceListVolumesResponse) ProtoMessage() {}

func (x *StorageServiceListVolumesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageServiceListVolumesResponse.ProtoReflect.Descriptor instead.
func (*StorageServiceListVolumesResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{7}
}

func (x *StorageServiceListVolumesResponse) GetVolumes() []*v1.Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

// StorageServiceListVolumesRequest is the request payload for the snapshot list request
type StorageServiceListSnapshotsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Uuid is the uuid of the snapshot to list
	Uuid *string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
	// Project is the project of the snapshot to list
	Project *string `protobuf:"bytes,2,opt,name=project,proto3,oneof" json:"project,omitempty"`
	// Partition is the partition of the snapshot to list
	Partition *string `protobuf:"bytes,3,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
	// Name is the name of the snapshot to list
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Tenant is the tenant of the snapshot to list
	Tenant        *string `protobuf:"bytes,5,opt,name=tenant,proto3,oneof" json:"tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageServiceListSnapshotsRequest) Reset() {
	*x = StorageServiceListSnapshotsRequest{}
	mi := &file_admin_v1_storage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageServiceListSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageServiceListSnapshotsRequest) ProtoMessage() {}

func (x *StorageServiceListSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageServiceListSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*StorageServiceListSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{8}
}

func (x *StorageServiceListSnapshotsRequest) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *StorageServiceListSnapshotsRequest) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *StorageServiceListSnapshotsRequest) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

func (x *StorageServiceListSnapshotsRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *StorageServiceListSnapshotsRequest) GetTenant() string {
	if x != nil && x.Tenant != nil {
		return *x.Tenant
	}
	return ""
}

// StorageServiceListSnapshotsResponse is the response payload for the snapshot list request
type StorageServiceListSnapshotsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Snapshots is the list of snapshots
	Snapshots     []*v1.Snapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageServiceListSnapshotsResponse) Reset() {
	*x = StorageServiceListSnapshotsResponse{}
	mi := &file_admin_v1_storage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageServiceListSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageServiceListSnapshotsResponse) ProtoMessage() {}

func (x *StorageServiceListSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_storage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageServiceListSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*StorageServiceListSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_storage_proto_rawDescGZIP(), []int{9}
}

func (x *StorageServiceListSnapshotsResponse) GetSnapshots() []*v1.Snapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

var File_admin_v1_storage_proto protoreflect.FileDescriptor

const file_admin_v1_storage_proto_rawDesc = "" +
	"\n" +
	"\x16admin/v1/storage.proto\x12\badmin.v1\x1a\x13api/v1/common.proto\x1a\x15api/v1/snapshot.proto\x1a\x13api/v1/volume.proto\x1a\x1bbuf/validate/validate.proto\"S\n" +
	" StorageServiceClusterInfoRequest\x12!\n" +
	"\tpartition\x18\x01 \x01(\tH\x00R\tpartition\x88\x01\x01B\f\n" +
	"\n" +
	"_partition\"W\n" +
	"!StorageServiceClusterInfoResponse\x122\n" +
	"\x05infos\x18\x01 \x03(\v2\x1c.admin.v1.StorageClusterInfoR\x05infos\"\xe6\x04\n" +
	"\x12StorageClusterInfo\x12\x1c\n" +
	"\tpartition\x18\x01 \x01(\tR\tpartition\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12#\n" +
	"\rsubsystem_nqn\x18\x03 \x01(\tR\fsubsystemNqn\x120\n" +
	"\x14current_max_replicas\x18\x04 \x01(\rR\x12currentMaxReplicas\x124\n" +
	"\x16supported_max_replicas\x18\x05 \x01(\rR\x14supportedMaxReplicas\x12>\n" +
	"\n" +
	"statistics\x18\x06 \x01(\v2\x1e.admin.v1.ClusterStatisticsApiR\n" +
	"statistics\x12/\n" +
	"\x06health\x18\a \x01(\v2\x17.admin.v1.ClusterHealthR\x06health\x123\n" +
	"\x16min_version_in_cluster\x18\b \x01(\tR\x13minVersionInCluster\x12.\n" +
	"\x13min_allowed_version\x18\t \x01(\tR\x11minAllowedVersion\x12.\n" +
	"\x13max_allowed_version\x18\n" +
	" \x01(\tR\x11maxAllowedVersion\x12#\n" +
	"\rapi_endpoints\x18\v \x03(\tR\fapiEndpoints\x12/\n" +
	"\x13discovery_endpoints\x18\f \x03(\tR\x12discoveryEndpoints\x125\n" +
	"\aservers\x18\r \x03(\v2\x1b.admin.v1.StorageServerInfoR\aservers\"\xe2\x01\n" +
	"\x11StorageServerInfo\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12:\n" +
	"\x1arisk_of_service_loss_state\x18\x03 \x01(\tR\x16riskOfServiceLossState\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\x12)\n" +
	"\x10server_endpoints\x18\x05 \x03(\tR\x0fserverEndpoints\x12(\n" +
	"\x10light_os_version\x18\x06 \x01(\tR\x0elightOsVersion\"\xf3\x01\n" +
	"\rClusterHealth\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\x120\n" +
	"\x14num_degraded_volumes\x18\x02 \x01(\rR\x12numDegradedVolumes\x121\n" +
	"\x15num_read_only_volumes\x18\x03 \x01(\rR\x12numReadOnlyVolumes\x129\n" +
	"\x19num_not_available_volumes\x18\x04 \x01(\rR\x16numNotAvailableVolumes\x12,\n" +
	"\x12num_inactive_nodes\x18\x05 \x01(\rR\x10numInactiveNodes\"\x91\x05\n" +
	"\x14ClusterStatisticsApi\x12<\n" +
	"\x1ainstalled_physical_storage\x18\x01 \x01(\x04R\x18installedPhysicalStorage\x128\n" +
	"\x18managed_physical_storage\x18\x02 \x01(\x04R\x16managedPhysicalStorage\x12<\n" +
	"\x1aeffective_physical_storage\x18\x03 \x01(\x04R\x18effectivePhysicalStorage\x12'\n" +
	"\x0flogical_storage\x18\x04 \x01(\x04R\x0elogicalStorage\x120\n" +
	"\x14logical_used_storage\x18\x05 \x01(\x04R\x12logicalUsedStorage\x122\n" +
	"\x15physical_used_storage\x18\x06 \x01(\x04R\x13physicalUsedStorage\x12R\n" +
	"&physical_used_storage_including_parity\x18\a \x01(\x04R\"physicalUsedStorageIncludingParity\x122\n" +
	"\x15free_physical_storage\x18\b \x01(\x04R\x13freePhysicalStorage\x12C\n" +
	"\x1eestimated_free_logical_storage\x18\t \x01(\x04R\x1bestimatedFreeLogicalStorage\x12:\n" +
	"\x19estimated_logical_storage\x18\n" +
	" \x01(\x04R\x17estimatedLogicalStorage\x12+\n" +
	"\x11compression_ratio\x18\v \x01(\x01R\x10compressionRatio\"\x80\x02\n" +
	" StorageServiceListVolumesRequest\x12!\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\x04uuid\x88\x01\x01\x12)\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\aproject\x88\x01\x01\x12!\n" +
	"\tpartition\x18\x03 \x01(\tH\x02R\tpartition\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tH\x03R\x04name\x88\x01\x01\x12\x1b\n" +
	"\x06tenant\x18\x05 \x01(\tH\x04R\x06tenant\x88\x01\x01B\a\n" +
	"\x05_uuidB\n" +
	"\n" +
	"\b_projectB\f\n" +
	"\n" +
	"_partitionB\a\n" +
	"\x05_nameB\t\n" +
	"\a_tenant\"M\n" +
	"!StorageServiceListVolumesResponse\x12(\n" +
	"\avolumes\x18\x01 \x03(\v2\x0e.api.v1.VolumeR\avolumes\"\x82\x02\n" +
	"\"StorageServiceListSnapshotsRequest\x12!\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\x04uuid\x88\x01\x01\x12)\n" +
	"\aproject\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\aproject\x88\x01\x01\x12!\n" +
	"\tpartition\x18\x03 \x01(\tH\x02R\tpartition\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tH\x03R\x04name\x88\x01\x01\x12\x1b\n" +
	"\x06tenant\x18\x05 \x01(\tH\x04R\x06tenant\x88\x01\x01B\a\n" +
	"\x05_uuidB\n" +
	"\n" +
	"\b_projectB\f\n" +
	"\n" +
	"_partitionB\a\n" +
	"\x05_nameB\t\n" +
	"\a_tenant\"U\n" +
	"#StorageServiceListSnapshotsResponse\x12.\n" +
	"\tsnapshots\x18\x01 \x03(\v2\x10.api.v1.SnapshotR\tsnapshots2\xf2\x02\n" +
	"\x0eStorageService\x12r\n" +
	"\vClusterInfo\x12*.admin.v1.StorageServiceClusterInfoRequest\x1a+.admin.v1.StorageServiceClusterInfoResponse\"\n" +
	"\xd2\xf3\x18\x02\x01\x02\xe8\xf3\x18\x02\x12r\n" +
	"\vListVolumes\x12*.admin.v1.StorageServiceListVolumesRequest\x1a+.admin.v1.StorageServiceListVolumesResponse\"\n" +
	"\xd2\xf3\x18\x02\x01\x02\xe8\xf3\x18\x02\x12x\n" +
	"\rListSnapshots\x12,.admin.v1.StorageServiceListSnapshotsRequest\x1a-.admin.v1.StorageServiceListSnapshotsResponse\"\n" +
	"\xd2\xf3\x18\x02\x01\x02\xe8\xf3\x18\x02B\x93\x01\n" +
	"\fcom.admin.v1B\fStorageProtoP\x01Z4github.com/metal-stack-cloud/api/go/admin/v1;adminv1\xa2\x02\x03AXX\xaa\x02\bAdmin.V1\xca\x02\bAdmin\\V1\xe2\x02\x14Admin\\V1\\GPBMetadata\xea\x02\tAdmin::V1b\x06proto3"

var (
	file_admin_v1_storage_proto_rawDescOnce sync.Once
	file_admin_v1_storage_proto_rawDescData []byte
)

func file_admin_v1_storage_proto_rawDescGZIP() []byte {
	file_admin_v1_storage_proto_rawDescOnce.Do(func() {
		file_admin_v1_storage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_admin_v1_storage_proto_rawDesc), len(file_admin_v1_storage_proto_rawDesc)))
	})
	return file_admin_v1_storage_proto_rawDescData
}

var file_admin_v1_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_admin_v1_storage_proto_goTypes = []any{
	(*StorageServiceClusterInfoRequest)(nil),    // 0: admin.v1.StorageServiceClusterInfoRequest
	(*StorageServiceClusterInfoResponse)(nil),   // 1: admin.v1.StorageServiceClusterInfoResponse
	(*StorageClusterInfo)(nil),                  // 2: admin.v1.StorageClusterInfo
	(*StorageServerInfo)(nil),                   // 3: admin.v1.StorageServerInfo
	(*ClusterHealth)(nil),                       // 4: admin.v1.ClusterHealth
	(*ClusterStatisticsApi)(nil),                // 5: admin.v1.ClusterStatisticsApi
	(*StorageServiceListVolumesRequest)(nil),    // 6: admin.v1.StorageServiceListVolumesRequest
	(*StorageServiceListVolumesResponse)(nil),   // 7: admin.v1.StorageServiceListVolumesResponse
	(*StorageServiceListSnapshotsRequest)(nil),  // 8: admin.v1.StorageServiceListSnapshotsRequest
	(*StorageServiceListSnapshotsResponse)(nil), // 9: admin.v1.StorageServiceListSnapshotsResponse
	(*v1.Volume)(nil),                           // 10: api.v1.Volume
	(*v1.Snapshot)(nil),                         // 11: api.v1.Snapshot
}
var file_admin_v1_storage_proto_depIdxs = []int32{
	2,  // 0: admin.v1.StorageServiceClusterInfoResponse.infos:type_name -> admin.v1.StorageClusterInfo
	5,  // 1: admin.v1.StorageClusterInfo.statistics:type_name -> admin.v1.ClusterStatisticsApi
	4,  // 2: admin.v1.StorageClusterInfo.health:type_name -> admin.v1.ClusterHealth
	3,  // 3: admin.v1.StorageClusterInfo.servers:type_name -> admin.v1.StorageServerInfo
	10, // 4: admin.v1.StorageServiceListVolumesResponse.volumes:type_name -> api.v1.Volume
	11, // 5: admin.v1.StorageServiceListSnapshotsResponse.snapshots:type_name -> api.v1.Snapshot
	0,  // 6: admin.v1.StorageService.ClusterInfo:input_type -> admin.v1.StorageServiceClusterInfoRequest
	6,  // 7: admin.v1.StorageService.ListVolumes:input_type -> admin.v1.StorageServiceListVolumesRequest
	8,  // 8: admin.v1.StorageService.ListSnapshots:input_type -> admin.v1.StorageServiceListSnapshotsRequest
	1,  // 9: admin.v1.StorageService.ClusterInfo:output_type -> admin.v1.StorageServiceClusterInfoResponse
	7,  // 10: admin.v1.StorageService.ListVolumes:output_type -> admin.v1.StorageServiceListVolumesResponse
	9,  // 11: admin.v1.StorageService.ListSnapshots:output_type -> admin.v1.StorageServiceListSnapshotsResponse
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_admin_v1_storage_proto_init() }
func file_admin_v1_storage_proto_init() {
	if File_admin_v1_storage_proto != nil {
		return
	}
	file_admin_v1_storage_proto_msgTypes[0].OneofWrappers = []any{}
	file_admin_v1_storage_proto_msgTypes[6].OneofWrappers = []any{}
	file_admin_v1_storage_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_admin_v1_storage_proto_rawDesc), len(file_admin_v1_storage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_v1_storage_proto_goTypes,
		DependencyIndexes: file_admin_v1_storage_proto_depIdxs,
		MessageInfos:      file_admin_v1_storage_proto_msgTypes,
	}.Build()
	File_admin_v1_storage_proto = out.File
	file_admin_v1_storage_proto_goTypes = nil
	file_admin_v1_storage_proto_depIdxs = nil
}
