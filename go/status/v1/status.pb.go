// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: status/v1/status.proto

package statusv1

import (
	v1 "github.com/metal-stack-cloud/api/go/api/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StatusServiceWatchRequest is the request payload to get the status
type StatusServiceWatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusServiceWatchRequest) Reset() {
	*x = StatusServiceWatchRequest{}
	mi := &file_status_v1_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusServiceWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusServiceWatchRequest) ProtoMessage() {}

func (x *StatusServiceWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_status_v1_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusServiceWatchRequest.ProtoReflect.Descriptor instead.
func (*StatusServiceWatchRequest) Descriptor() ([]byte, []int) {
	return file_status_v1_status_proto_rawDescGZIP(), []int{0}
}

// StatusServiceWatchResponse is the response payload which describes the system status
type StatusServiceWatchResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Health of the individual services
	Health *v1.Health `protobuf:"bytes,1,opt,name=health,proto3" json:"health,omitempty"`
	// OverallStatus is the status of the system
	OverallStatus v1.ServiceStatus `protobuf:"varint,2,opt,name=overall_status,json=overallStatus,proto3,enum=api.v1.ServiceStatus" json:"overall_status,omitempty"`
	// ConnectionBroken shows if the connection to the system is broken
	ConnectionBroken bool `protobuf:"varint,3,opt,name=connection_broken,json=connectionBroken,proto3" json:"connection_broken,omitempty"`
	// ApiVersion of the system
	ApiVersion    string `protobuf:"bytes,4,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusServiceWatchResponse) Reset() {
	*x = StatusServiceWatchResponse{}
	mi := &file_status_v1_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusServiceWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusServiceWatchResponse) ProtoMessage() {}

func (x *StatusServiceWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_status_v1_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusServiceWatchResponse.ProtoReflect.Descriptor instead.
func (*StatusServiceWatchResponse) Descriptor() ([]byte, []int) {
	return file_status_v1_status_proto_rawDescGZIP(), []int{1}
}

func (x *StatusServiceWatchResponse) GetHealth() *v1.Health {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *StatusServiceWatchResponse) GetOverallStatus() v1.ServiceStatus {
	if x != nil {
		return x.OverallStatus
	}
	return v1.ServiceStatus(0)
}

func (x *StatusServiceWatchResponse) GetConnectionBroken() bool {
	if x != nil {
		return x.ConnectionBroken
	}
	return false
}

func (x *StatusServiceWatchResponse) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

var File_status_v1_status_proto protoreflect.FileDescriptor

const file_status_v1_status_proto_rawDesc = "" +
	"\n" +
	"\x16status/v1/status.proto\x12\tstatus.v1\x1a\x13api/v1/common.proto\x1a\x13api/v1/health.proto\"\x1b\n" +
	"\x19StatusServiceWatchRequest\"\xd0\x01\n" +
	"\x1aStatusServiceWatchResponse\x12&\n" +
	"\x06health\x18\x01 \x01(\v2\x0e.api.v1.HealthR\x06health\x12<\n" +
	"\x0eoverall_status\x18\x02 \x01(\x0e2\x15.api.v1.ServiceStatusR\roverallStatus\x12+\n" +
	"\x11connection_broken\x18\x03 \x01(\bR\x10connectionBroken\x12\x1f\n" +
	"\vapi_version\x18\x04 \x01(\tR\n" +
	"apiVersion2m\n" +
	"\rStatusService\x12\\\n" +
	"\x05Watch\x12$.status.v1.StatusServiceWatchRequest\x1a%.status.v1.StatusServiceWatchResponse\"\x04\xd8\xf3\x18\x010\x01B\x99\x01\n" +
	"\rcom.status.v1B\vStatusProtoP\x01Z6github.com/metal-stack-cloud/api/go/status/v1;statusv1\xa2\x02\x03SXX\xaa\x02\tStatus.V1\xca\x02\tStatus\\V1\xe2\x02\x15Status\\V1\\GPBMetadata\xea\x02\n" +
	"Status::V1b\x06proto3"

var (
	file_status_v1_status_proto_rawDescOnce sync.Once
	file_status_v1_status_proto_rawDescData []byte
)

func file_status_v1_status_proto_rawDescGZIP() []byte {
	file_status_v1_status_proto_rawDescOnce.Do(func() {
		file_status_v1_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_status_v1_status_proto_rawDesc), len(file_status_v1_status_proto_rawDesc)))
	})
	return file_status_v1_status_proto_rawDescData
}

var file_status_v1_status_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_status_v1_status_proto_goTypes = []any{
	(*StatusServiceWatchRequest)(nil),  // 0: status.v1.StatusServiceWatchRequest
	(*StatusServiceWatchResponse)(nil), // 1: status.v1.StatusServiceWatchResponse
	(*v1.Health)(nil),                  // 2: api.v1.Health
	(v1.ServiceStatus)(0),              // 3: api.v1.ServiceStatus
}
var file_status_v1_status_proto_depIdxs = []int32{
	2, // 0: status.v1.StatusServiceWatchResponse.health:type_name -> api.v1.Health
	3, // 1: status.v1.StatusServiceWatchResponse.overall_status:type_name -> api.v1.ServiceStatus
	0, // 2: status.v1.StatusService.Watch:input_type -> status.v1.StatusServiceWatchRequest
	1, // 3: status.v1.StatusService.Watch:output_type -> status.v1.StatusServiceWatchResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_status_v1_status_proto_init() }
func file_status_v1_status_proto_init() {
	if File_status_v1_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_status_v1_status_proto_rawDesc), len(file_status_v1_status_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_status_v1_status_proto_goTypes,
		DependencyIndexes: file_status_v1_status_proto_depIdxs,
		MessageInfos:      file_status_v1_status_proto_msgTypes,
	}.Build()
	File_status_v1_status_proto = out.File
	file_status_v1_status_proto_goTypes = nil
	file_status_v1_status_proto_depIdxs = nil
}
