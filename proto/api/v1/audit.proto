syntax = "proto3";

package api.v1;

import "api/v1/common.proto";
import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

// AuditService serves audit related functions
//
service AuditService {
  // Get a audit
  rpc Get(AuditServiceGetRequest) returns (AuditServiceGetResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
    option (auditing) = AUDITING_EXCLUDED;
  }
  // List your audit traces
  rpc List(AuditServiceListRequest) returns (AuditServiceListResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
    option (auditing) = AUDITING_EXCLUDED;
  }
}

// AuditTrace is an audit trace
message AuditTrace {
  // Uuid of the audit trace
  string uuid = 1 [(buf.validate.field).string.uuid = true];
  // Timestamp is the timestamp when the request arrived at the api
  google.protobuf.Timestamp timestamp = 2;
  // User is the user who called the api method
  string user = 3;
  // Tenant is the tenant targeted by the api call
  string tenant = 4;
  // Project is the project targeted by the api call
  string project = 5;
  // Method is the api method that was called
  string method = 6;
  // Request is the payload of the request
  string request_payload = 7;
  // Response is the payload of the response
  string response_payload = 8;
  // SourceIP contains the ip address of the caller
  string source_ip = 9;
  // ResultCode is a string describing the result of the api call
  int32 result_code = 10;
  // Error is a string describing the error of the api call
  string error = 11;
}

// AuditServiceListRequest is the request payload to list audits
message AuditServiceListRequest {
  // Login of the tenant
  string login = 1;
  // Uuid of the audit trace
  optional string uuid = 2 [(buf.validate.field).string.uuid = true];
  // From describes the start of the time window in which to list audit traces
  google.protobuf.Timestamp from = 3;
  // To describes the end of the time window in which to list audit traces
  google.protobuf.Timestamp to = 4;
  // User is the user who called the api method
  optional string user = 5;
  // Tenant is the tenant targeted by the api call
  string tenant = 6;
  // Project is the project targeted by the api call
  optional string project = 7;
  // Method is the api method that was called
  optional string method = 8;
  // SourceIP contains the ip address of the caller
  optional string source_ip = 9;
  // ResultCode is a string describing the result of the api call
  optional int32 result_code = 10;
  // Error is a string providing text-search of the error field
  optional string error = 11;
  // Body is a string providing text-search of the body field
  optional string body = 12;
}

// AuditServiceListResponse is the response payload of a audit list request
message AuditServiceListResponse {
  // Audits is a list of audits without the secrets
  repeated AuditTrace audits = 1;
}

// AuditServiceGetRequest is the request payload of a audit get request
message AuditServiceGetRequest {
  // Login of the tenant
  string login = 1;
  // Uuid of the audit trace
  string uuid = 2 [(buf.validate.field).string.uuid = true];
}

// AuditServiceGetResponse is the response payload of a audit get request
message AuditServiceGetResponse {
  // Audit is the audit
  AuditTrace audit = 2;
}
