syntax = "proto3";

package api.v1;

import "api/v1/common.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

service PaymentService {
  rpc CreateOrUpdateCustomer(PaymentServiceCreateOrUpdateCustomerRequest) returns (PaymentServiceCreateOrUpdateCustomerResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
  }
  rpc GetCustomer(PaymentServiceGetCustomerRequest) returns (PaymentServiceGetCustomerResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
  }
  rpc GetCustomerWithLogin(PaymentServiceGetCustomerWithLoginRequest) returns (PaymentServiceGetCustomerWithLoginResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
  }
  rpc CheckIfCustomerExists(PaymentServiceCheckIfCustomerExistsRequest) returns (PaymentServiceCheckIfCustomerExistsResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
  }
  rpc HasPaymentMethod(PaymentServiceHasPaymentMethodRequest) returns (PaymentServiceHasPaymentMethodResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
    option (tenant_roles) = TENANT_ROLE_EDITOR;
    option (tenant_roles) = TENANT_ROLE_VIEWER;
  }
  rpc DeletePaymentMethod(PaymentServiceDeletePaymentMethodRequest) returns (PaymentServiceDeletePaymentMethodResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
  }
  rpc GetSubscriptionUsage(PaymentServiceGetSubscriptionUsageRequest) returns (PaymentServiceGetSubscriptionUsageResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
  }
  rpc GetInvoices(PaymentServiceGetInvoicesRequest) returns (PaymentServiceGetInvoicesResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
  }
  rpc GetDefaultPrices(PaymentServiceGetDefaultPricesRequest) returns (PaymentServiceGetDefaultPricesResponse) {
    option (visibility) = VISIBILITY_PUBLIC;
  }
  rpc CheckAdmitted(PaymentServiceCheckAdmittedRequest) returns (PaymentServiceCheckAdmittedResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
    option (tenant_roles) = TENANT_ROLE_EDITOR;
    option (tenant_roles) = TENANT_ROLE_VIEWER;
  }
  rpc RequestAdmission(PaymentServiceRequestAdmissionRequest) returns (PaymentServiceRequestAdmissionResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
    option (tenant_roles) = TENANT_ROLE_EDITOR;
  }
  rpc HasChargeableResources(PaymentServiceHasChargeableResourcesRequest) returns (PaymentServiceHasChargeableResourcesResponse) {
    option (tenant_roles) = TENANT_ROLE_OWNER;
    option (tenant_roles) = TENANT_ROLE_EDITOR;
    option (tenant_roles) = TENANT_ROLE_VIEWER;
  }
}

message PaymentCustomer {
  string login = 1;
  optional string name = 2;
  optional string customer_id = 3;
  optional string payment_method_id = 4;
  string subscription_id = 5;
  optional string email = 6;
  optional Card card = 7;
  repeated Price prices = 8;
  Address address = 9;
  optional Coupon coupon = 10;
  optional string vat = 11;
  optional string phone_number = 12;
}

message Card {
  string brand = 1;
  string country = 2;
  int64 exp_month = 3;
  int64 exp_year = 4;
  string last_4 = 5;
}

message Price {
  string name = 1;
  double unit_amount_decimal = 2;
  string currency = 3;
  string unit_label = 4;
}

message Address {
  string line1 = 1;
  string line2 = 2;
  string postal_code = 3;
  string city = 4;
  string state = 5;
  string country = 6;
}

message SubscriptionUsageItem {
  string subscription_item_id = 1;
  string subscription_item_name = 2;
  int64 total_usage = 3;
  google.protobuf.Timestamp period_start = 4;
  google.protobuf.Timestamp period_end = 5;
}

message Invoice {
  string id = 1;
  string pdf_download_url = 2;
  google.protobuf.Timestamp period_start = 4;
  google.protobuf.Timestamp period_end = 5;
}

message Coupon {
  string id = 1;
  string name = 2;
  int64 amount_off = 3;
  string currency = 4;
  int64 duration_in_month = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp redeem_by = 7;
  int64 times_redeemed = 8;
  int64 max_redemptions = 9;
}

message PaymentServiceCreateOrUpdateCustomerRequest {
  string login = 1 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
  PaymentCustomer customer = 2;
  bool accepted_terms_and_conditions = 3;
}

message PaymentServiceCreateOrUpdateCustomerResponse {
  PaymentCustomer customer = 1;
}

message PaymentServiceGetCustomerRequest {
  string login = 1 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
  string customer_id = 2;
}

message PaymentServiceGetCustomerResponse {
  PaymentCustomer customer = 1;
}

message PaymentServiceGetCustomerWithLoginRequest {
  string login = 1 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
}

message PaymentServiceGetCustomerWithLoginResponse {
  PaymentCustomer customer = 1;
}

message PaymentServiceCheckIfCustomerExistsRequest {
  string login = 1 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
}

message PaymentServiceCheckIfCustomerExistsResponse {
  PaymentCustomer customer = 1;
  bool exists = 2;
}

message PaymentServiceHasPaymentMethodRequest {
  string login = 1 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
  string project = 2 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
}

message PaymentServiceHasPaymentMethodResponse {
  bool exists = 1;
  bool coupon_left = 2;
}

message PaymentServiceDeletePaymentMethodRequest {
  string login = 1 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
}

message PaymentServiceDeletePaymentMethodResponse {}

message PaymentServiceGetSubscriptionUsageRequest {
  string login = 1 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
}

message PaymentServiceGetSubscriptionUsageResponse {
  repeated SubscriptionUsageItem subscription_usage_items = 1;
}

message PaymentServiceGetInvoicesRequest {
  string login = 1 [(validate.rules).string = {
    min_len: 2,
    max_len: 128,
  }];
  string customer_id = 2 [(validate.rules).string = {
    min_len: 18,
    max_len: 18,
  }];
}

message PaymentServiceGetInvoicesResponse {
  repeated Invoice invoices = 1;
}

message PaymentServiceGetDefaultPricesRequest {}

message PaymentServiceGetDefaultPricesResponse {
  repeated Price prices = 1;
}

message PaymentServiceCheckAdmittedRequest {
  string login = 1;
}

message PaymentServiceCheckAdmittedResponse {
  bool admitted = 1;
  bool requested = 2;
}

message PaymentServiceRequestAdmissionRequest {
  string login = 1;
  PaymentCustomer customer = 2;
  bool accepted_terms_and_conditions = 3;
  bool email_consent = 4;
}

message PaymentServiceRequestAdmissionResponse {}

message PaymentServiceHasChargeableResourcesRequest {
  string login = 1;
}

message PaymentServiceHasChargeableResourcesResponse {
  bool has_resources = 1;
}
