syntax = "proto3";

package admin.v1;

import "api/v1/common.proto";
import "api/v1/payment.proto";
import "api/v1/user.proto";

service UserService {
  rpc List(UserServiceListRequest) returns (UserServiceListResponse) {
    option (api.v1.admin_roles) = ADMIN_ROLE_VIEWER;
  }
  rpc Admit(UserServiceAdmitRequest) returns (UserServiceAdmitResponse) {
    option (api.v1.admin_roles) = ADMIN_ROLE_EDITOR;
  }
}

// User is for admin purpose a combined authenticated user and a payment customer
message User {
  api.v1.User user = 1;
  api.v1.PaymentCustomer payment_customer = 2;
}

message UserServiceListRequest {
  optional string login = 1;
  optional string name = 2;
  optional string email = 3;
  optional string organisation_id = 4;
  optional api.v1.OAuthProvider oauth_provider = 5;
  optional bool admitted = 6;
  // page_token is used for pagination, if unset only the first page is returned, the list response contains then token for the next page.
  optional string page_token = 7;
}
message UserServiceListResponse {
  repeated User users = 1;
  // next_page_token is used for pagination, returns the next page to be fetched and must then be provided in the list request.
  string next_page_token = 2;
}
message UserServiceAdmitRequest {
  string user_id = 1;
}
message UserServiceAdmitResponse {
  User user = 1;
}
